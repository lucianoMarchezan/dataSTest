<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="logicalSpecification" nsURI="http://it.univaq.disim.seagroup/logicalSpecification"
    nsPrefix="logicalSpecification">
  <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Refactoring" eSuperTypes="#//NamedElement">
    <eOperations name="cloneRefactoring" eType="#//Refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="actions" upperBound="-1"
        eType="#//Action" containment="true" eOpposite="#//Action/refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="pre" eType="#//PreCondition"
        containment="true" eOpposite="#//PreCondition/refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="post" eType="#//PostCondition"
        containment="true" eOpposite="#//PostCondition/refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lola4rapsRoot" eType="#//LoLa4RAPSRoot"
        eOpposite="#//LoLa4RAPSRoot/refactorings"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cost" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"
        defaultValueLiteral="0.0" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numOfChanges" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" defaultValueLiteral="0.0"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Action" eSuperTypes="#//NamedElement">
    <eOperations name="execute" lowerBound="1"/>
    <eOperations name="log" lowerBound="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="Controller.logger_.info(this.getClass().getName());"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="setParameters" lowerBound="1"/>
    <eOperations name="createPreCondition" lowerBound="1"/>
    <eOperations name="createPostCondition" lowerBound="1"/>
    <eOperations name="cloneAction" eType="#//Action"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numOfChanges" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" defaultValueLiteral="0.0"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cost" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"
        defaultValueLiteral="0.0"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactoring" eType="#//Refactoring"
        eOpposite="#//Refactoring/actions"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true" eOpposite="#//Parameter/action"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="pre" eType="#//PreCondition"
        containment="true" eOpposite="#//PreCondition/action"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="post" eType="#//PostCondition"
        containment="true" eOpposite="#//PostCondition/action"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SingleValuedParameter" eSuperTypes="#//Parameter">
    <eStructuralFeatures xsi:type="ecore:EReference" name="existsOperator" upperBound="-1"
        eType="#//ExistsOperator" eOpposite="#//ExistsOperator/element"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MultipleValuedParameter" eSuperTypes="#//Parameter">
    <eStructuralFeatures xsi:type="ecore:EReference" name="forAllOperator" upperBound="-1"
        eType="#//ForAllOperator" eOpposite="#//ForAllOperator/collection"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="existsOperator" upperBound="-1"
        eType="#//ExistsOperator" eOpposite="#//ExistsOperator/collection"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter" abstract="true" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="#//TypesEnum"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//Action"
        eOpposite="#//Action/parameters"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="resolvingExpr" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhsRelationalOperator"
        upperBound="-1" eType="#//RelationalOperator" eOpposite="#//RelationalOperator/lhs"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhsRelationalOperator"
        upperBound="-1" eType="#//RelationalOperator" eOpposite="#//RelationalOperator/rhs"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="antipattern" eType="#//Antipattern"
        eOpposite="#//Antipattern/parameters"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TypesEnum">
    <eLiterals name="UML_OPERATION"/>
    <eLiterals name="UML_COMPONENT" value="1"/>
    <eLiterals name="UML_NODE" value="2"/>
    <eLiterals name="REAL" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Condition" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="conditionFormula" lowerBound="1"
        eType="#//FOLSpecification" containment="true" eOpposite="#//FOLSpecification/condition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PreCondition" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//Action"
        eOpposite="#//Action/pre"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactoring" eType="#//Refactoring"
        eOpposite="#//Refactoring/pre"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PostCondition" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//Action"
        eOpposite="#//Action/post"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactoring" eType="#//Refactoring"
        eOpposite="#//Refactoring/post"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FOLSpecification" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="#//Condition"
        eOpposite="#//Condition/conditionFormula"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rootOperator" lowerBound="1"
        eType="#//Operator" containment="true" eOpposite="#//Operator/folspecification"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="antipatternDesign" eType="#//Antipattern"
        eOpposite="#//Antipattern/designFormula"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="antipatternComplete" eType="#//Antipattern"
        eOpposite="#//Antipattern/completeFormula"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LogicalOperator" abstract="true" eSuperTypes="#//Operator"/>
  <eClassifiers xsi:type="ecore:EClass" name="VoidOperator" eSuperTypes="#//LogicalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="ForAllOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="collection" lowerBound="1"
        eType="#//MultipleValuedParameter" eOpposite="#//MultipleValuedParameter/forAllOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" lowerBound="1"
        eType="#//Operator" containment="true" eOpposite="#//Operator/forAlloperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExistsOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" eType="#//SingleValuedParameter"
        eOpposite="#//SingleValuedParameter/existsOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="collection" lowerBound="1"
        eType="#//MultipleValuedParameter" eOpposite="#//MultipleValuedParameter/existsOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" eType="#//Operator"
        containment="true" eOpposite="#//Operator/existsOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OrOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" lowerBound="2"
        upperBound="-1" eType="#//Operator" containment="true" eOpposite="#//Operator/orOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NotOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" lowerBound="1"
        eType="#//Operator" containment="true" eOpposite="#//Operator/notOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AndOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" lowerBound="2"
        upperBound="-1" eType="#//Operator" containment="true" eOpposite="#//Operator/andOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RelationalOperator" abstract="true"
      eSuperTypes="#//Operator">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="factor" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" defaultValueLiteral="1.0"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" lowerBound="1" eType="#//Parameter"
        eOpposite="#//Parameter/lhsRelationalOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" lowerBound="1" eType="#//Parameter"
        eOpposite="#//Parameter/rhsRelationalOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EqualOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterEqualOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessEqualOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="Operator" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="folspecification" eType="#//FOLSpecification"
        eOpposite="#//FOLSpecification/rootOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="forAlloperator" eType="#//ForAllOperator"
        eOpposite="#//ForAllOperator/argument"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="notOperator" eType="#//NotOperator"
        eOpposite="#//NotOperator/argument"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="andOperator" eType="#//AndOperator"
        eOpposite="#//AndOperator/arguments"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="orOperator" eType="#//OrOperator"
        eOpposite="#//OrOperator/arguments"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="existsOperator" eType="#//ExistsOperator"
        eOpposite="#//ExistsOperator/argument"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Antipattern" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="lola4rapsRoot" eType="#//LoLa4RAPSRoot"
        eOpposite="#//LoLa4RAPSRoot/antipatterns"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true" eOpposite="#//Parameter/antipattern"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="designFormula" lowerBound="1"
        eType="#//FOLSpecification" containment="true" eOpposite="#//FOLSpecification/antipatternDesign"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="completeFormula" lowerBound="1"
        eType="#//FOLSpecification" containment="true" eOpposite="#//FOLSpecification/antipatternComplete"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LoLa4RAPSRoot" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactorings" upperBound="-1"
        eType="#//Refactoring" containment="true" eOpposite="#//Refactoring/lola4rapsRoot"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="antipatterns" upperBound="-1"
        eType="#//Antipattern" containment="true" eOpposite="#//Antipattern/lola4rapsRoot"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AddAction" eSuperTypes="#//Action"/>
  <eClassifiers xsi:type="ecore:EClass" name="DeleteAction" eSuperTypes="#//Action"/>
  <eClassifiers xsi:type="ecore:EClass" name="MoveAction" eSuperTypes="#//Action"/>
  <eSubpackages name="actions" nsURI="http://it.univaq.disim.seagroup/logicalSpecification/Actions"
      nsPrefix="logicalSpecificationActions">
    <eSubpackages name="UML" nsURI="http://it.univaq.disim.seagroup/logicalSpecification/Actions/UML"
        nsPrefix="logicalSpecificationUMLActions">
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddAction" abstract="true" eSuperTypes="#//AddAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteAction" abstract="true"
          eSuperTypes="#//DeleteAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="UMLMoveAction" abstract="true" eSuperTypes="#//MoveAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddNodeAction" eSuperTypes="#//actions/UML/UMLAddAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();&#xA;&#x9;&#x9;if (getUmlNodeToAdd() != null) {&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(getUmlNodeToAdd().getName());&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(&quot;--------Deployment----------&quot;);&#xA;&#x9;&#x9;&#x9;for (Deployment depl : this.umlNodeToAdd.getDeployments())&#xA;&#x9;&#x9;&#x9;&#x9;Controller.logger_.info(depl.toString());&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(&quot;--------CommunicationPath----------&quot;);&#xA;&#x9;&#x9;&#x9;for (CommunicationPath cp : umlNodeToAdd.getCommunicationPaths())&#xA;&#x9;&#x9;&#x9;&#x9;Controller.logger_.info(cp.toString());&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="umlNodeToAdd = UMLFactory.eINSTANCE.createNode();&#xA;&#x9;&#x9;umlNodeToAdd.setName(&quot;newNode&quot; + Math.random());&#xA;&#x9;&#x9;umlNodeToAdd.setPackage(umlSourcePackage);&#xA;&#xA;&#x9;&#x9;addCommunicationPaths();&#xA;&#xA;&#x9;&#x9;addDeployedComps();"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addDeployedComps">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="Artifact art;&#xA;&#x9;&#x9;for (Component comp : getUmlCompsToDeploy()) {&#xA;&#x9;&#x9;&#x9;art = UMLFactory.eINSTANCE.createArtifact();&#xA;&#x9;&#x9;&#x9;art.setName(comp.getName() + &quot;_Artifact&quot;);&#xA;&#x9;&#x9;&#x9;art.createManifestation(comp.getName() + &quot;_Manifestation&quot;, comp);&#xA;&#x9;&#x9;&#x9;Deployment deploy = umlNodeToAdd.createDeployment(comp.getName() + &quot;_Deployment&quot;);&#xA;&#x9;&#x9;&#x9;deploy.getDeployedArtifacts().add(art);&#xA;&#x9;&#x9;&#x9;umlNodeToAdd.getDeployments().add(deploy);&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="addCommunicationPaths">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="for (Node node : umlNeighbors) {&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * createCommunicationPath(boolean end1IsNavigable, AggregationKind&#xA;&#x9;&#x9;&#x9; * end1Aggregation, String end1Name, int end1Lower,int end1Upper,&#xA;&#x9;&#x9;&#x9; * Node end1Node, boolean end2IsNavigable,AggregationKind&#xA;&#x9;&#x9;&#x9; * end2Aggregation, String end2Name, int end2Lower,int end2Upper);&#xA;&#x9;&#x9;&#x9; */&#xA;&#x9;&#x9;&#x9;umlNodeToAdd&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.createCommunicationPath(true, AggregationKind.COMPOSITE_LITERAL, node.getName(), 1, 1, node, true,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AggregationKind.COMPOSITE_LITERAL, umlNodeToAdd.getName(), 1, 1)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;.setName(umlNodeToAdd.getName() + &quot;_cp_&quot; + node.getName());&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> addParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;if (umlNodeToAdd != null) {&#xA;&#x9;&#x9;&#x9;// FIXME le add non dovrebbero avere come attributo l'oggetto da&#xA;&#x9;&#x9;&#x9;// creare&#xA;&#x9;&#x9;&#x9;setNodeToAddSVP(Manager.createSingleValueParameter(OclStringManager.getNodeQuery(umlNodeToAdd)));&#xA;&#x9;&#x9;&#x9;addParams.add(getNodeToAddSVP());&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;setNeighborsMVP(Manager.createMultipleValuedParameter(OclStringManager.getNodesQuery(this.umlNeighbors)));&#xA;&#x9;&#x9;addParams.add(getNeighborsMVP());&#xA;&#xA;&#x9;&#x9;setCompsToDeployMVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.createMultipleValuedParameter(OclStringManager.getComponentsQuery(this.umlCompsToDeploy)));&#xA;&#x9;&#x9;addParams.add(getCompsToDeployMVP());&#xA;&#xA;&#x9;&#x9;setAllNodesMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllNodesQuery()));&#xA;&#x9;&#x9;addParams.add(getAllNodesMVP());&#xA;&#xA;&#x9;&#x9;setAllCompsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllComponentsQuery()));&#xA;&#x9;&#x9;addParams.add(getAllCompsMVP());&#xA;&#xA;&#x9;&#x9;if (getUmlNodeToAdd() != null) {&#xA;&#x9;&#x9;&#x9;ArrayList&lt;Node> nList = new ArrayList&lt;Node>();&#xA;&#x9;&#x9;&#x9;// FIXME qui facciamo la query dei componenti deploiati sul nodo&#xA;&#x9;&#x9;&#x9;// appena creato ma e' vuota&#xA;&#x9;&#x9;&#x9;nList.add(getUmlNodeToAdd());&#xA;&#x9;&#x9;&#x9;setAllDeployedElemsMVP(&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Manager.createMultipleValuedParameter(OclStringManager.getAllDeployedElementsQuery(nList)));&#xA;&#x9;&#x9;&#x9;addParams.add(getAllDeployedElemsMVP());&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;getParameters().addAll(addParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = Manager.createPreCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification addPreSpec = Manager.createFOLSpectification(&quot;AddNodePrecondition&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator addPreAnd = Manager.createAndOperator();&#xA;&#xA;&#x9;&#x9;// ExistsOperator addPreAndNotExists =&#xA;&#x9;&#x9;// Manager.createExistsOperator(getNodeToAddSVP(), getAllNodesMVP());&#xA;&#xA;&#x9;&#x9;// NotOperator addPreAndNot =&#xA;&#x9;&#x9;// Manager.createNotOperator(addPreAndNotExists);&#xA;&#x9;&#x9;// addPreAnd.getArguments().add(addPreAndNot);&#xA;&#xA;&#x9;&#x9;ForAllOperator addPreAndForall = Manager.createForAllOperator(getNeighborsMVP());&#xA;&#xA;&#x9;&#x9;ExistsOperator addPreAndForallExists = Manager.createExistsOperator(getAllNodesMVP());&#xA;&#x9;&#x9;addPreAndForall.setArgument(addPreAndForallExists);&#xA;&#x9;&#x9;addPreAnd.getArguments().add(addPreAndForall);&#xA;&#x9;&#x9;addPreSpec.setRootOperator(addPreAnd);&#xA;&#xA;&#x9;&#x9;preCondition.setConditionFormula(addPreSpec);&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition postCondition = Manager.createPostCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification addPostSpec = Manager.createFOLSpectification(&quot;AddNodePostcondition&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator addPostAnd = Manager.createAndOperator();&#xA;&#xA;&#x9;&#x9;ExistsOperator addPostAndExists = Manager.createExistsOperator(getNodeToAddSVP(), getAllNodesMVP());&#xA;&#x9;&#x9;addPostAnd.getArguments().add(addPostAndExists);&#xA;&#xA;&#x9;&#x9;ForAllOperator addPostAndForallNeighs = Manager.createForAllOperator(getNeighborsMVP());&#xA;&#xA;&#x9;&#x9;AndOperator addPostAndForallNeighsAnd = Manager.createAndOperator();&#xA;&#xA;&#x9;&#x9;ExistsOperator addPostAndForallNeighsAndExistsAllNodes = Manager.createExistsOperator(getAllNodesMVP());&#xA;&#x9;&#x9;addPostAndForallNeighsAnd.getArguments().add(addPostAndForallNeighsAndExistsAllNodes);&#xA;&#xA;&#x9;&#x9;ExistsOperator addPostAndForallNeighsAndExistsNeighs = Manager.createExistsOperator(getNeighborsMVP());&#xA;&#x9;&#x9;addPostAndForallNeighsAnd.getArguments().add(addPostAndForallNeighsAndExistsNeighs);&#xA;&#xA;&#x9;&#x9;addPostAndForallNeighs.setArgument(addPostAndForallNeighsAnd);&#xA;&#xA;&#x9;&#x9;addPostAnd.getArguments().add(addPostAndForallNeighs);&#xA;&#xA;&#x9;&#x9;ForAllOperator addPostAndForallDeplComps = Manager.createForAllOperator(getCompsToDeployMVP());&#xA;&#xA;&#x9;&#x9;AndOperator addPostAndForallDeplCompsAnd = Manager.createAndOperator();&#xA;&#xA;&#x9;&#x9;ExistsOperator addPostAndForallDeplCompsAndExistsAllNodes = Manager.createExistsOperator(getAllCompsMVP());&#xA;&#x9;&#x9;addPostAndForallDeplCompsAnd.getArguments().add(addPostAndForallDeplCompsAndExistsAllNodes);&#xA;&#xA;&#x9;&#x9;ExistsOperator addPostAndForallDeplCompsAndExistsNeighs = Manager&#xA;&#x9;&#x9;&#x9;&#x9;.createExistsOperator(getAllDeployedElemsMVP());&#xA;&#x9;&#x9;addPostAndForallDeplCompsAnd.getArguments().add(addPostAndForallDeplCompsAndExistsNeighs);&#xA;&#xA;&#x9;&#x9;addPostAndForallDeplComps.setArgument(addPostAndForallDeplCompsAnd);&#xA;&#xA;&#x9;&#x9;addPostAnd.getArguments().add(addPostAndForallDeplComps);&#xA;&#xA;&#x9;&#x9;addPostSpec.setRootOperator(addPostAnd);&#xA;&#x9;&#x9;postCondition.setConditionFormula(addPostSpec);&#xA;&#x9;&#x9;setPost(postCondition);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nodeToAddSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="neighborsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="compsToDeployMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allDeployedElemsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlNodeToAdd" lowerBound="1"
            eType="#//actions/UML/Node"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlNeighbors" upperBound="-1"
            eType="#//actions/UML/Node"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompsToDeploy" upperBound="-1"
            eType="#//actions/UML/Component"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlSourcePackage" lowerBound="1"
            eType="#//actions/UML/Package"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddComponentAction" eSuperTypes="#//actions/UML/UMLAddAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log(); &#xA;if(getUmlCompToAdd() != null)&#xA;&#x9;Controller.logger_.info(getUmlCompToAdd().toString());"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="setUmlCompToAdd(UMLFactory.eINSTANCE.createComponent());&#xA;&#x9;&#x9;getUmlCompToAdd().setName(&quot;newComp&quot; + Math.random());&#xA;&#x9;&#x9;getUmlCompToAdd().setPackage(getUmlSourcePackage());&#xA;&#x9;&#x9;setParameters();&#xA;&#x9;&#x9;deployOn(getUmlTargetNodes());"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="deployOn">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="Artifact art;&#xA;&#x9;&#x9;for (Node target : targets) {&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Package targetPackage = target.getPackage();&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;art = UMLFactory.eINSTANCE.createArtifact();&#xA;&#x9;&#x9;&#x9;targetPackage.getPackagedElements().add(art);&#xA;&#x9;&#x9;&#x9;art.setName(getUmlCompToAdd().getName() + &quot;_Artifact&quot;);&#xA;&#x9;&#x9;&#x9;art.createManifestation(getUmlCompToAdd().getName() + &quot;_Manifestation&quot;, getUmlCompToAdd());&#xA;&#x9;&#x9;&#x9;art.setPackage(targetPackage);&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Deployment deploy = target.createDeployment(getUmlCompToAdd().getName() + &quot;_Deployment&quot;);&#xA;&#x9;&#x9;&#x9;deploy.getDeployedArtifacts().add(art);&#xA;&#x9;&#x9;&#x9;target.getDeployments().add(deploy);&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
          <eParameters name="targets" upperBound="-1" eType="#//actions/UML/Node"/>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="// ACTION add PARAMETERS&#xA;&#x9;&#x9;List&lt;Parameter> addParams = new ArrayList&lt;>();&#xA;&#x9;&#x9;// FIXME le add non dovrebbero avere come attributo l'oggetto da creare&#xA;&#xA;&#x9;&#x9;// setCompToAddSVP(Manager.createSingleValueParameter(&quot;Component.allInstances()->select(c&#xA;&#x9;&#x9;// | c.name = 'Pippo Node')&quot;));&#xA;&#x9;&#x9;// addParams.add(getCompToAddSVP());&#xA;&#xA;&#x9;&#x9;if (umlCompToAdd != null) {&#xA;&#x9;&#x9;&#x9;setComponentToAddSVP(Manager.createSingleValueParameter(OclStringManager.getComponentQuery(umlCompToAdd)));&#xA;&#x9;&#x9;&#x9;addParams.add(getComponentToAddSVP());&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;setTargetNodesMVP(Manager.createMultipleValuedParameter(OclStringManager.getNodesQuery(umlTargetNodes)));&#xA;&#x9;&#x9;addParams.add(getTargetNodesMVP());&#xA;&#xA;&#x9;&#x9;// List&lt;Component> list_of_random_components = new&#xA;&#x9;&#x9;// ArrayList&lt;Component>();&#xA;&#x9;&#x9;// list_of_random_components = OclManager.getRandomComponents();&#xA;&#x9;&#x9;// setDeployedCompsMVP(Manager.createMultipleValuedParameter(OclStringManager.getComponentsQuery(list_of_random_components)));&#xA;&#x9;&#x9;// addParams.add(getDeployedCompsMVP());&#xA;&#xA;&#x9;&#x9;setDeployedCompsMVP(Manager&#xA;&#x9;&#x9;&#x9;&#x9;.createMultipleValuedParameter(OclStringManager.getAllDeployedElementsQuery(getUmlTargetNodes())));&#xA;&#x9;&#x9;addParams.add(getDeployedCompsMVP());&#xA;&#xA;&#x9;&#x9;setAllNodesMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllNodesQuery()));&#xA;&#x9;&#x9;addParams.add(getAllNodesMVP());&#xA;&#xA;&#x9;&#x9;setAllCompsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllComponentsQuery()));&#xA;&#x9;&#x9;addParams.add(getAllCompsMVP());&#xA;&#xA;&#x9;&#x9;getParameters().addAll(addParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = LogicalSpecificationFactory.eINSTANCE.createPreCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification addPreSpecification = Manager.createFOLSpectification(&quot;AddComponentPreCondition&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator addPreAnd = Manager.createAndOperator();&#xA;&#xA;//&#x9;&#x9;NotOperator addPreAndNot = Manager.createNotOperator();&#xA;//&#x9;&#x9;ExistsOperator addPreAndNotExists = Manager.createExistsOperator(getCompToAddSVP(), getAllCompsMVP());&#xA;//&#xA;//&#x9;&#x9;addPreAndNot.setArgument(addPreAndNotExists);&#xA;//&#x9;&#x9;addPreAnd.getArguments().add(addPreAndNot);&#xA;&#xA;&#x9;&#x9;ForAllOperator addPreAndForall = Manager.createForAllOperator(getTargetNodesMVP());&#xA;&#x9;&#x9;ExistsOperator addPreAndForallExists = Manager.createExistsOperator(getAllNodesMVP());&#xA;&#x9;&#x9;addPreAndForall.setArgument(addPreAndForallExists);&#xA;&#x9;&#x9;addPreAnd.getArguments().add(addPreAndForall);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;addPreSpecification.setRootOperator(addPreAnd);&#xA;&#x9;&#x9;preCondition.setConditionFormula(addPreSpecification);&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition addPost = LogicalSpecificationFactory.eINSTANCE.createPostCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification addPostSpec = Manager.createFOLSpectification(&quot;AddNodePostcondition&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator addPostAnd = Manager.createAndOperator();&#xA;&#xA;&#x9;&#x9;ExistsOperator addPostAndExistsInC = Manager.createExistsOperator(getComponentToAddSVP(), getAllCompsMVP());&#xA;&#xA;&#x9;&#x9;addPostAnd.getArguments().add(addPostAndExistsInC);&#xA;&#xA;&#x9;&#x9;ForAllOperator addPostAndForallTargets = Manager.createForAllOperator(getTargetNodesMVP());&#xA;&#x9;&#x9;AndOperator addPostAndForallTargetsAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;ExistsOperator addPostAndForallTargetsExists = Manager.createExistsOperator(getAllNodesMVP());&#xA;&#x9;&#x9;addPostAndForallTargetsAnd.getArguments().add(addPostAndForallTargetsExists);&#xA;&#xA;&#x9;&#x9;// TODO getDeployedComps è l'insieme delle Component deployate sui&#xA;&#x9;&#x9;// target Nodes. Non va bene: la condition dice che&#xA;&#x9;&#x9;// su ogni target Node ci deve stare la Component aggiunta. Con l'unione&#xA;&#x9;&#x9;// basta che stia su uno dei target...&#xA;&#x9;&#x9;ExistsOperator addPostAndExistsInD = Manager.createExistsOperator(getComponentToAddSVP(),&#xA;&#x9;&#x9;&#x9;&#x9;getDeployedCompsMVP());&#xA;&#xA;&#x9;&#x9;addPostAndForallTargetsAnd.getArguments().add(addPostAndExistsInD);&#xA;&#x9;&#x9;addPostAndForallTargets.setArgument(addPostAndForallTargetsAnd);&#xA;&#x9;&#x9;addPostAnd.getArguments().add(addPostAndForallTargets);&#xA;&#xA;&#x9;&#x9;addPostSpec.setRootOperator(addPostAnd);&#xA;&#x9;&#x9;addPost.setConditionFormula(addPostSpec);&#xA;&#x9;&#x9;setPost(addPost);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentToAddSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="deployedCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompToAdd" lowerBound="1"
            eType="#//actions/UML/Component"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlSourcePackage" lowerBound="1"
            eType="#//actions/UML/Package"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetNodes" lowerBound="1"
            upperBound="-1" eType="#//actions/UML/Node"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddOperationAction" eSuperTypes="#//actions/UML/UMLAddAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();&#xA;&#x9;&#x9;if (umlOpToAdd != null)&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(umlOpToAdd.toString());&#xA;&#xA;&#x9;&#x9;for (Operation op : umlTargetComp.getOperations()) {&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(op.getName());&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#xA;&#x9;&#x9;/**&#xA;&#x9;&#x9; * Operation createOwnedOperation(String name, EList&lt;String>&#xA;&#x9;&#x9; * parameterNames, EList&lt;Type> parameterTypes, Type returnType);&#xA;&#x9;&#x9; * &#xA;&#x9;&#x9; */&#xA;&#x9;&#x9;umlOpToAdd = umlTargetComp.createOwnedOperation(&quot;newOp&quot; + Math.random(), null, null);&#xA;"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="// ACTION add PARAMETERS&#xA;&#x9;&#x9;List&lt;Parameter> addParams = new ArrayList&lt;>();&#xA;&#x9;&#x9;// FIXME le add non dovrebbero avere come attributo l'oggetto da creare&#xA;&#xA;&#x9;&#x9;if(umlOpToAdd != null){&#xA;&#x9;&#x9;&#x9;setOpToAddSVP(Manager.createSingleValueParameter(OclStringManager.getOperationQuery(umlOpToAdd)));&#xA;&#x9;&#x9;&#x9;addParams.add(getOpToAddSVP());&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;setTargetCompSVP(Manager.createSingleValueParameter(OclStringManager.getComponentQuery(getUmlTargetComp())));&#xA;&#x9;&#x9;addParams.add(getTargetCompSVP());&#xA;&#xA;&#x9;&#x9;setAllCompsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllComponentsQuery()));&#xA;&#x9;&#x9;addParams.add(getAllCompsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setTargetCompOpsMVP(Manager.createMultipleValuedParameter(OclStringManager.getOperationsOfQuery(getUmlTargetComp())));&#xA;&#x9;&#x9;addParams.add(getTargetCompOpsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;getParameters().addAll(addParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = LogicalSpecificationFactory.eINSTANCE.createPreCondition();&#xA;&#x9;&#x9;FOLSpecification addPreSpecification = Manager.createFOLSpectification(&quot;AddOperationPreCondition&quot;);&#xA;&#x9;&#x9;AndOperator addPreAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ExistsOperator addPreAndExists = Manager.createExistsOperator(getTargetCompSVP(), getAllCompsMVP());&#xA;&#x9;&#x9;addPreAnd.getArguments().add(addPreAndExists);&#xA;&#xA;//&#x9;&#x9;NotOperator addPreAndNot = Manager.createNotOperator();&#xA;//&#x9;&#x9;ExistsOperator addPreAndNotExists = Manager.createExistsOperator(getNewOpSVP(), getTargetCompOps());&#xA;//&#x9;&#x9;addPreAndNot.setArgument(addPreAndNotExists);&#xA;//&#x9;&#x9;addPreAnd.getArguments().add(addPreAndNot);&#xA;&#xA;&#x9;&#x9;addPreSpecification.setRootOperator(addPreAnd);&#xA;&#x9;&#x9;preCondition.setConditionFormula(addPreSpecification);&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition postCondition = LogicalSpecificationFactory.eINSTANCE.createPostCondition();&#xA;&#x9;&#x9;FOLSpecification addPreSpecification = Manager.createFOLSpectification(&quot;AddOperationPostCondition&quot;);&#xA;&#x9;&#x9;AndOperator addPreAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ExistsOperator addPreAndExists1 = Manager.createExistsOperator(getTargetCompSVP(), getAllCompsMVP());&#xA;&#x9;&#x9;addPreAnd.getArguments().add(addPreAndExists1);&#xA;&#xA;&#x9;&#x9;ExistsOperator addPreAndExists2 = Manager.createExistsOperator(getOpToAddSVP(), getTargetCompOpsMVP());&#xA;&#x9;&#x9;addPreAnd.getArguments().add(addPreAndExists2);&#xA;&#xA;&#x9;&#x9;addPreSpecification.setRootOperator(addPreAnd);&#xA;&#x9;&#x9;postCondition.setConditionFormula(addPreSpecification);&#xA;&#x9;&#x9;setPost(postCondition);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="opToAddSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetCompSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetCompOpsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlOpToAdd" lowerBound="1"
            eType="#//actions/UML/Operation"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetComp" lowerBound="1"
            eType="#//actions/UML/Component"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteNodeAction" eSuperTypes="#//actions/UML/UMLDeleteAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log(); &#xA;&#x9;&#x9;Controller.logger_.info(getUmlNodeToDel().getName());"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="umlNodeToDel.destroy();"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="// TODO Auto-generated method stub&#xA;&#x9;&#x9;List&lt;Parameter> delNodeParams = new ArrayList&lt;>();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setNodeToDelSVP(Manager.createSingleValueParameter(OclStringManager.getNodeQuery(getUmlNodeToDel())));&#xA;&#x9;&#x9;delNodeParams.add(getNodeToDelSVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllNodesMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllNodesQuery()));&#xA;&#x9;&#x9;delNodeParams.add(getAllNodesMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;getParameters().addAll(delNodeParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = Manager.createPreCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;DeleteNodePreCondition&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator preAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ExistsOperator existsOperator = Manager.createExistsOperator(getNodeToDelSVP(), getAllNodesMVP());&#xA;&#xA;&#x9;&#x9;preAnd.getArguments().add(existsOperator);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;specification.setRootOperator(preAnd);&#xA;&#x9;&#x9;preCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition postCondition = Manager.createPostCondition();&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;DeleteNodePostCondition&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;AndOperator preAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;NotOperator notOperator = Manager.createNotOperator();&#xA;&#x9;&#x9;ExistsOperator existsOperator = Manager.createExistsOperator(getNodeToDelSVP(), getAllNodesMVP());&#xA;&#xA;&#x9;&#x9;notOperator.setArgument(existsOperator);&#xA;&#x9;&#x9;preAnd.getArguments().add(notOperator);&#xA;&#xA;&#x9;&#x9;specification.setRootOperator(preAnd);&#xA;&#x9;&#x9;postCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPost(postCondition);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="nodeToDelSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlNodeToDel" lowerBound="1"
            eType="#//actions/UML/Node"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteComponentAction" eSuperTypes="#//actions/UML/UMLDeleteAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();&#xA;&#x9;&#x9;Controller.logger_.info(this.toString());"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Manifestation> list_of_manifestations = UMLManager.getAllManifestationsOf(getUmlCompToDel());&#xA;&#x9;&#x9;for (Manifestation man : list_of_manifestations) {&#xA;&#x9;&#x9;&#x9;if (man.getUtilizedElement().getNamespace() == getUmlCompToDel().getNamespace()) {&#xA;&#x9;&#x9;&#x9;&#x9;man.destroy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;umlCompToDel.destroy();"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> delCompParams = new ArrayList&lt;>();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setCompToDelSVP(Manager.createSingleValueParameter(OclStringManager.getComponentQuery(getUmlCompToDel())));&#xA;&#x9;&#x9;delCompParams.add(getCompToDelSVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllCompsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllComponentsQuery()));&#xA;&#x9;&#x9;delCompParams.add(getAllCompsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;getParameters().addAll(delCompParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = Manager.createPreCondition();&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;DeleteComponentPreCondition&quot;);&#xA;&#x9;&#x9;AndOperator preAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;ExistsOperator exists = Manager.createExistsOperator(getCompToDelSVP(), getAllCompsMVP());&#xA;&#x9;&#x9;preAnd.getArguments().add(exists);&#xA;&#x9;&#x9;specification.setRootOperator(preAnd);&#xA;&#x9;&#x9;preCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition postCondition = Manager.createPostCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;DeleteComponentPostCondition&quot;);&#xA;&#x9;&#x9;AndOperator preAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;NotOperator notOperator = Manager.createNotOperator();&#xA;&#x9;&#x9;ExistsOperator existsOperator = Manager.createExistsOperator(getCompToDelSVP(), getAllCompsMVP());&#xA;&#x9;&#x9;notOperator.setArgument(existsOperator);&#xA;&#x9;&#x9;preAnd.getArguments().add(notOperator);&#xA;&#x9;&#x9;specification.setRootOperator(preAnd);&#xA;&#x9;&#x9;postCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPost(postCondition);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="compToDelSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompToDel" lowerBound="1"
            eType="#//actions/UML/Component"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteOperationAction" eSuperTypes="#//actions/UML/UMLDeleteAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log(); &#xA;&#x9;&#x9;Controller.logger_.info(getUmlOpToDel().toString());"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="getUmlOpToDel().destroy();"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> delOpParams = new ArrayList&lt;>();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setOpToDelSVP(Manager.createSingleValueParameter(OclStringManager.getOperationQuery(getUmlOpToDel())));&#xA;&#x9;&#x9;delOpParams.add(getOpToDelSVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllOpsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllOperationsQuery()));&#xA;&#x9;&#x9;delOpParams.add(getAllOpsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;getParameters().addAll(delOpParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = Manager.createPreCondition();&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;DeleteOperationPreCondition&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;AndOperator preAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ExistsOperator existsOperator = Manager.createExistsOperator(getOpToDelSVP(), getAllOpsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;preAnd.getArguments().add(existsOperator);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;specification.setRootOperator(preAnd);&#xA;&#x9;&#x9;preCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition postCondition = Manager.createPostCondition();&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;DeleteOperationPostCondition&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator preAnd = Manager.createAndOperator();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;NotOperator notOperator = Manager.createNotOperator();&#xA;&#x9;&#x9;ExistsOperator existsOperator = Manager.createExistsOperator(getOpToDelSVP(), getAllOpsMVP());&#xA;&#x9;&#x9;notOperator.setArgument(existsOperator);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;preAnd.getArguments().add(notOperator);&#xA;&#xA;&#x9;&#x9;specification.setRootOperator(preAnd);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;postCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setPost(postCondition);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="opToDelSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allOpsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlOpToDel" lowerBound="1"
            eType="#//actions/UML/Operation"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLMoveComponentAction" eSuperTypes="#//actions/UML/UMLMoveAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="Controller.logger_.info(umlCompToMove.toString());&#xA;&#x9;&#x9;for (Node target : umlTargetNodes) {&#xA;&#x9;&#x9;&#x9;for (Deployment dep : target.getDeployments()) {&#xA;&#x9;&#x9;&#x9;&#x9;Controller.logger_.info(dep.toString());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;for (Artifact art : getUmlArtifacts()) {&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(art.toString());&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(Integer.toString(art.getManifestations().size()));&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="moveDeployments();"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="moveDeployments">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Manifestation> manifestations = new ArrayList&lt;Manifestation>();&#xA;&#xA;&#x9;&#x9;manifestations = UMLManager.getAllManifestations();&#xA;&#xA;&#x9;&#x9;for (Manifestation man : manifestations) {&#xA;&#x9;&#x9;&#x9;if (man.getUtilizedElement().getQualifiedName().equals(umlCompToMove.getQualifiedName())) {&#xA;&#x9;&#x9;&#x9;&#x9;man.destroy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;umlArtifacts = UMLManager.getAllArtifacts();&#xA;&#xA;&#x9;&#x9;for (Artifact art : umlArtifacts) {&#xA;&#x9;&#x9;&#x9;if (art.getManifestations().isEmpty()) {&#xA;&#x9;&#x9;&#x9;&#x9;art.destroy();&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;deployOn();"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="deployOn">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="Artifact art;&#xA;&#x9;&#x9;for (Node target : umlTargetNodes) {&#xA;&#x9;&#x9;&#x9;art = UMLFactory.eINSTANCE.createArtifact();&#xA;&#x9;&#x9;&#x9;art.setName(umlCompToMove.getName() + &quot;_Artifact&quot;);&#xA;&#x9;&#x9;&#x9;art.createManifestation(umlCompToMove.getName() + &quot;_Manifestation&quot;, umlCompToMove);&#xA;&#x9;&#x9;&#x9;Deployment deploy = target.createDeployment(umlCompToMove.getName() + &quot;_Deployment&quot;);&#xA;&#x9;&#x9;&#x9;deploy.getDeployedArtifacts().add(art);&#xA;&#x9;&#x9;&#x9;target.getDeployments().add(deploy);&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> moveCompParams = new ArrayList&lt;>();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setCompToMoveSVP(Manager.createSingleValueParameter(OclStringManager.getComponentQuery(getUmlCompToMove())));&#xA;&#x9;&#x9;moveCompParams.add(getCompToMoveSVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setTargetNodesMVP(Manager.createMultipleValuedParameter(OclStringManager.getNodesQuery(getUmlTargetNodes())));&#xA;&#x9;&#x9;moveCompParams.add(getTargetNodesMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllArtifactsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllArtifactsQuery()));&#xA;&#x9;&#x9;moveCompParams.add(getAllArtifactsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllCompsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllComponentsQuery()));&#xA;&#x9;&#x9;moveCompParams.add(getAllCompsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllTargetsMVP(Manager.createMultipleValuedParameter(OclStringManager.getNodesQuery(getUmlTargetNodes())));&#xA;&#x9;&#x9;moveCompParams.add(getAllTargetsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllNodesMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllNodesQuery()));&#xA;&#x9;&#x9;moveCompParams.add(getAllNodesMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllDeployedElemsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllDeployedElementsQuery(getUmlTargetNodes())));&#xA;&#x9;&#x9;moveCompParams.add(getAllDeployedElemsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;getParameters().addAll(moveCompParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = Manager.createPreCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;MoveComponentPreCondition&quot;);&#xA;&#xA;&#x9;&#x9;ExistsOperator existsComponentInComponents = Manager.createExistsOperator(getCompToMoveSVP(), getAllCompsMVP());&#xA;&#xA;&#x9;&#x9;ForAllOperator forAllNode = Manager.createForAllOperator(getTargetNodesMVP());&#xA;&#x9;&#x9;ExistsOperator existsTargetInNodes = Manager.createExistsOperator(getAllNodesMVP());&#xA;&#x9;&#x9;NotOperator componentNotOperator = Manager.createNotOperator();&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;//TODO getAllDeployedElems è l'insieme delle Component deployate sui target Nodes. Non va bene: la condition dice che &#xA;&#x9;&#x9;&#x9;&#x9;// su ogni target Node ci deve stare la Component spostata. Con l'unione basta che stia su uno dei target...&#xA;&#x9;&#x9;ExistsOperator componentExists = Manager.createExistsOperator(getCompToMoveSVP(), getAllDeployedElemsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;componentNotOperator.setArgument(componentExists);&#xA;&#x9;&#x9;AndOperator andOperator = Manager.createAndOperator();&#xA;&#x9;&#x9;andOperator.getArguments().add(existsTargetInNodes);&#xA;&#x9;&#x9;andOperator.getArguments().add(componentNotOperator);&#xA;&#x9;&#x9;forAllNode.setArgument(andOperator);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;AndOperator andRoot = Manager.createAndOperator();&#xA;&#x9;&#x9;andRoot.getArguments().add(existsComponentInComponents);&#xA;&#x9;&#x9;andRoot.getArguments().add(forAllNode);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;specification.setRootOperator(andRoot);&#xA;&#x9;&#x9;preCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition postCondition = Manager.createPostCondition();&#xA;&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;MoveComponentPostCondition&quot;);&#xA;&#xA;&#x9;&#x9;ExistsOperator existsComponentInComponents = Manager.createExistsOperator(getCompToMoveSVP(), getAllCompsMVP());&#xA;&#xA;&#x9;&#x9;ForAllOperator forAllNode = Manager.createForAllOperator(getTargetNodesMVP());&#xA;&#x9;&#x9;ExistsOperator existsTargetInNodes = Manager.createExistsOperator(getAllNodesMVP());&#xA;&#x9;&#x9;ExistsOperator componentExists = Manager.createExistsOperator(getCompToMoveSVP(), getAllDeployedElemsMVP());&#xA;&#x9;&#x9;AndOperator andOperator = Manager.createAndOperator();&#xA;&#x9;&#x9;andOperator.getArguments().add(existsTargetInNodes);&#xA;&#x9;&#x9;andOperator.getArguments().add(componentExists);&#xA;&#x9;&#x9;forAllNode.setArgument(andOperator);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;AndOperator andRoot = Manager.createAndOperator();&#xA;&#x9;&#x9;andRoot.getArguments().add(existsComponentInComponents);&#xA;&#x9;&#x9;andRoot.getArguments().add(forAllNode);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;specification.setRootOperator(andRoot);&#xA;&#x9;&#x9;postCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPost(postCondition);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="compToMoveSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allArtifactsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allTargetsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allDeployedElemsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompToMove" lowerBound="1"
            eType="#//actions/UML/Component"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetNodes" lowerBound="1"
            upperBound="-1" eType="#//actions/UML/Node"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlArtifacts" upperBound="-1"
            eType="#//actions/UML/Artifact"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLMoveOperationAction" eSuperTypes="#//actions/UML/UMLMoveAction">
        <eOperations name="log">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();&#xA;&#x9;&#x9;Controller.logger_.info(getUmlTargetComp().toString());&#xA;&#x9;&#x9;for (Operation op : getUmlTargetComp().getOperations()) {&#xA;&#x9;&#x9;&#x9;Controller.logger_.info(op.toString());&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="execute">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="getUmlOpToMove().setClass_(getUmlTargetComp());"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="setParameters">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> moveOpParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setOpToMoveSVP(Manager.createSingleValueParameter(OclStringManager.getOperationQuery(getUmlOpToMove())));&#xA;&#x9;&#x9;moveOpParams.add(getOpToMoveSVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setTargetCompSVP(Manager.createSingleValueParameter(OclStringManager.getComponentQuery(getUmlTargetComp())));&#xA;&#x9;&#x9;moveOpParams.add(getTargetCompSVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllOpsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllOperationsQuery()));&#xA;&#x9;&#x9;moveOpParams.add(getAllOpsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllCompsMVP(Manager.createMultipleValuedParameter(OclStringManager.getAllComponentsQuery()));&#xA;&#x9;&#x9;moveOpParams.add(getAllCompsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;setAllTargetCompOpsMVP(Manager.createMultipleValuedParameter(OclStringManager.getOperationsOfQuery(getUmlTargetComp())));&#xA;&#x9;&#x9;moveOpParams.add(getAllTargetCompOpsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;getParameters().addAll(moveOpParams);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPreCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PreCondition preCondition = Manager.createPreCondition();&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;MoveOperationPreCondition&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ExistsOperator existsOpInOperations = Manager.createExistsOperator(getOpToMoveSVP(), getAllOpsMVP());&#xA;&#x9;&#x9;ExistsOperator existsTargetInComponents = Manager.createExistsOperator(getTargetCompSVP(), getAllCompsMVP());&#xA;&#x9;&#x9;ExistsOperator existsOpInOpsOfTarget = Manager.createExistsOperator(getOpToMoveSVP(), getAllTargetCompOpsMVP());&#xA;&#x9;&#x9;NotOperator notExistsOpInOpsOfTarget = Manager.createNotOperator(existsOpInOpsOfTarget);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;AndOperator andRoot = Manager.createAndOperator();&#xA;&#x9;&#x9;andRoot.getArguments().add(existsOpInOperations);&#xA;&#x9;&#x9;andRoot.getArguments().add(existsTargetInComponents);&#xA;&#x9;&#x9;andRoot.getArguments().add(notExistsOpInOpsOfTarget);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;specification.setRootOperator(andRoot);&#xA;&#x9;&#x9;preCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPre(preCondition);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="createPostCondition">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="PostCondition postCondition = Manager.createPostCondition();&#xA;&#x9;&#x9;FOLSpecification specification = Manager.createFOLSpectification(&quot;MoveOperationPostCondition&quot;);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;ExistsOperator existsOpInOperations = Manager.createExistsOperator(getOpToMoveSVP(), getAllOpsMVP());&#xA;&#x9;&#x9;ExistsOperator existsTargetInComponents = Manager.createExistsOperator(getTargetCompSVP(), getAllCompsMVP());&#xA;&#x9;&#x9;ExistsOperator existsOpInOpsOfTarget = Manager.createExistsOperator(getOpToMoveSVP(), getAllTargetCompOpsMVP());&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;AndOperator andRoot = Manager.createAndOperator();&#xA;&#x9;&#x9;andRoot.getArguments().add(existsOpInOperations);&#xA;&#x9;&#x9;andRoot.getArguments().add(existsTargetInComponents);&#xA;&#x9;&#x9;andRoot.getArguments().add(existsOpInOpsOfTarget);&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;specification.setRootOperator(andRoot);&#xA;&#x9;&#x9;postCondition.setConditionFormula(specification);&#xA;&#x9;&#x9;setPost(postCondition);"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="opToMoveSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetCompSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allOpsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allTargetCompOpsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlOpToMove" lowerBound="1"
            eType="#//actions/UML/Operation"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetComp" lowerBound="1"
            eType="#//actions/UML/Component"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="Component" instanceClassName="org.eclipse.uml2.uml.Component"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Node" instanceClassName="org.eclipse.uml2.uml.Node"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Package" instanceClassName="org.eclipse.uml2.uml.Package"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Operation" instanceClassName="org.eclipse.uml2.uml.Operation"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Artifact" instanceClassName="org.eclipse.uml2.uml.Artifact"/>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
