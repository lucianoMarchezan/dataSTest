<?xml version="1.0" ?>
<!--GENERATED FILE, PLEASE DO NOT EDIT!!!--><EXT object="TestProject" version="4">
  <OBJECT>
    <ID name="TestProject" mc="Standard.Class" uid="51d0bcd6-4986-4092-8b8f-f422d64eb45b"/>
    <PID name="kernel" mc="Standard.Package" uid="86efb409-8b57-4d5c-98b3-484a6dbb9562"/>
    <ATTRIBUTES>
      <ATT name="IsActive">false</ATT>
      <ATT name="IsMain">false</ATT>
      <ATT name="IsElementary">false</ATT>
      <ATT name="IsAbstract">false</ATT>
      <ATT name="IsLeaf">false</ATT>
      <ATT name="IsRoot">false</ATT>
      <ATT name="Visibility">Public</ATT>
      <ATT name="Name"><![CDATA[TestProject]]></ATT>
      <ATT name="status">1970354901745664</ATT>
    </ATTRIBUTES>
    <DEPENDENCIES>
      <COMP relation="OwnedOperation">
        <OBJECT>
          <ID name="TestProject" mc="Standard.Operation" uid="154b045f-df76-4603-b667-5067caf54250"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[TestProject]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="IO">
              <OBJECT>
                <ID name="arg0" mc="Standard.Parameter" uid="1f76c837-9733-4fdf-9b5f-7026b69b6884"/>
                <ATTRIBUTES>
                  <ATT name="ParameterPassing">In</ATT>
                  <ATT name="MultiplicityMin"><![CDATA[1]]></ATT>
                  <ATT name="MultiplicityMax"><![CDATA[1]]></ATT>
                  <ATT name="TypeConstraint"></ATT>
                  <ATT name="DefaultValue"></ATT>
                  <ATT name="IsOrdered">false</ATT>
                  <ATT name="IsUnique">false</ATT>
                  <ATT name="IsException">false</ATT>
                  <ATT name="IsStream">false</ATT>
                  <ATT name="Effect">ReadEffect</ATT>
                  <ATT name="Name"><![CDATA[arg0]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Tag">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="4633a0ab-ad35-42ad-ae8c-38b5040c4d14"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="5ba3035f-c4ec-4fca-9ca2-3b6403d84d05"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[String]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="JavaTypeExpr" mc="Infrastructure.TagType" uid="00380080-0000-01a4-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <COMP relation="Descriptor">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.Note" uid="14d69828-d38b-4b0f-b32b-f2bcf03dee14"/>
                      <ATTRIBUTES>
                        <ATT name="Content"><![CDATA[is the name of the test case.]]></ATT>
                        <ATT name="MimeType"></ATT>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <LINK relation="Model">
                          <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="01240268-0000-0044-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <LINK relation="Extension">
              <FOREIGNID name="create" mc="Infrastructure.Stereotype" uid="00700680-0000-0204-0000-000000000000"/>
            </LINK>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="91114491-6e2f-4336-b837-cb8777b9a3ce"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Constructor for TestProject.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="79b79f2c-7f07-4ca1-b2cb-de14b7af52b6"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[super(arg0);]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testMakeUntitledProject" mc="Standard.Operation" uid="8e267a8c-4c43-4d4e-b29a-e8f4f0b27393"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testMakeUntitledProject]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="ebdefdae-1472-494c-b938-6c363266b31a"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test the makeUntitledProject() function.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="a83120df-2011-48da-be62-31078d3586d0"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());
assertEquals(Translator.localize("misc.untitled-model"), 
        Model.getFacade().getName(p.getModel()));
// maybe next test is going to change in future
assertEquals(p.getRoot(), p.getModel());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testRemove" mc="Standard.Operation" uid="1e2c48be-68cb-45cd-9f17-d2cab2fcfc50"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testRemove]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Thrown">
              <OBJECT>
                <ID name="" mc="Standard.RaisedException" uid="46f9dc7a-fc43-4c02-9071-1983e2b27401"/>
                <ATTRIBUTES>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="ThrownType">
                    <ID name="OpenException" mc="Standard.Class" uid="981158c2-a66f-4d9e-a2cc-62a201bccc34"/>
                  </LINK>
                  <COMP relation="Descriptor">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.Note" uid="e4461235-8fde-4025-a79a-6c5bd122f6d6"/>
                      <ATTRIBUTES>
                        <ATT name="Content"><![CDATA[if there was an error during project load]]></ATT>
                        <ATT name="MimeType"></ATT>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <LINK relation="Model">
                          <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="d4d66828-0464-11e0-b652-002564c97630"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Tag">
              <OBJECT>
                <ID name="" mc="Infrastructure.TaggedValue" uid="b9abcd89-73b5-4e91-b99a-8442385ba75b"/>
                <ATTRIBUTES>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Actual">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TagParameter" uid="30500d83-5c54-4b1c-a35a-d28e500b3399"/>
                      <ATTRIBUTES>
                        <ATT name="Value"><![CDATA[InterruptedException]]></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES></DEPENDENCIES>
                    </OBJECT>
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TagParameter" uid="8a82bdad-63db-475b-95ea-a29cccd63202"/>
                      <ATTRIBUTES>
                        <ATT name="Value"><![CDATA[URISyntaxException]]></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES></DEPENDENCIES>
                    </OBJECT>
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TagParameter" uid="6c5aaf73-d921-46a6-a40e-8995f32e8b38"/>
                      <ATTRIBUTES>
                        <ATT name="Value"><![CDATA[IOException]]></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES></DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <LINK relation="Definition">
                    <FOREIGNID name="JavaThrownException" mc="Infrastructure.TagType" uid="003800a8-0000-017c-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="9d51cc07-c6f9-4e98-acfc-ad9279b2fa7a"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test remove() function. This is called when a new project is created to
remove the old project. We confirm here that the users model has been
emptied and that no none 'Model' model elements are at root.
@throws InterruptedException if there the project load was interrupted
@throws URISyntaxException when the URI can not be formed
@throws IOException when a temporary file cannot be created.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="0db5147f-5edc-465a-b62d-c59047451679"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[ProjectFile file = new ProjectFile("zargo");
AbstractFilePersister persister =
        PersistenceManager.getInstance().getPersisterFromFileName(file.getName());

Project p = persister.doLoad(file.getFile());
file.delete();
file = null;

p.remove();

for (Object root : Model.getFacade().getRootElements()) {
    assertTrue(
            "All roots should be a Model - but found a " 
            + Model.getMetaTypes().getName(root),
            Model.getFacade().isAModel(root));
    System.out.println(Model.getFacade().getName(root) + " "
            + Model.getFacade().getOwnedElements(root).size());
    if ("untitledModel".equals(Model.getFacade().getName(root))) {
        assertEquals(
                "All root models should be empty", 0, 
                Model.getFacade().getOwnedElements(root).size());
    }
}
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testTrashcanPackageContent" mc="Standard.Operation" uid="faeae316-a917-4adc-8ea0-764b93d51054"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testTrashcanPackageContent]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="ee041220-08c7-46c9-916b-5a2e072cbded"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test the moveToTrash function for package and content.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="03f30bb3-b87c-4055-8610-753ca639d119"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
// test with a class in a package
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Model.getCoreHelper().setNamespace(package1, p.getRoot());
Object cls1 = Model.getCoreFactory().buildClass(package1);
Object cls2 = Model.getCoreFactory().buildClass(package1);
Object cls3 = Model.getCoreFactory().buildClass(package1);
Object cls4 = Model.getCoreFactory().buildClass(p.getRoot());
Object c1 = Model.getFacade().getOwnedElements(p.getRoot());
assertTrue(c1 instanceof Collection);
// Let's make it a bit more difficult by setting the target:
TargetManager.getInstance().setTarget(cls2);

p.moveToTrash(package1);
Model.getPump().flushModelEvents();

//TODO: We should also test that the object
//have been removed from their namespace.
//Collection c = Model.getFacade().getOwnedElements(p.getRoot());
assertTrue("Package not in trash", p.isInTrash(package1));
assertTrue("Package not deleted",
        Model.getUmlFactory().isRemoved(package1));
assertTrue("Class 1 not deleted",
        Model.getUmlFactory().isRemoved(cls1));
assertTrue("Class 2 not deleted",
        Model.getUmlFactory().isRemoved(cls2));
assertTrue("Class 3 not deleted",
        Model.getUmlFactory().isRemoved(cls3));
assertTrue("Class 4 has been deleted",
        !Model.getUmlFactory().isRemoved(cls4));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testTrashcanClassContent" mc="Standard.Operation" uid="6e812d46-2189-42ef-bfce-421e17f69373"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testTrashcanClassContent]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="36aa01dd-d4ae-4144-b7c3-e83248384a54"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test the moveToTrash function for class and content.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="5a0951c6-bc07-47d4-be53-e5fd593167b7"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
// test with a class and an inner class
Object aClass = Model.getCoreFactory().buildClass("Test", p.getRoot());
Object cls1 = Model.getCoreFactory().buildClass(aClass);
Object cls2 = Model.getCoreFactory().buildClass(aClass);
Object cls3 = Model.getCoreFactory().buildClass(aClass);
Object typ = Model.getCoreFactory().buildClass(p.getRoot());
Object oper2a = Model.getCoreFactory().buildOperation(cls2, cls3);
assertNotNull(oper2a);
Object oper2b = Model.getCoreFactory().buildOperation(cls2, typ);
assertNotNull(oper2b);

p.moveToTrash(aClass);
Model.getPump().flushModelEvents();

assertTrue("Package not in trash", p.isInTrash(aClass));
assertTrue("Package not deleted",
        Model.getUmlFactory().isRemoved(aClass));
assertTrue("Class 1 not deleted",
        Model.getUmlFactory().isRemoved(cls1));
assertTrue("Class 2 not deleted",
        Model.getUmlFactory().isRemoved(cls2));
assertTrue("Class 3 not deleted",
        Model.getUmlFactory().isRemoved(cls3));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeletePackageWithClassDiagram" mc="Standard.Operation" uid="25238857-c98c-4c68-9c73-d693f95a551e"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeletePackageWithClassDiagram]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="c1655986-0fa3-4b97-baa5-0c0c43b8a56d"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a package that contains a Class diagram.
The diagram should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="40be00bf-6725-4718-a6a2-e07d33e9b832"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());
assertEquals(Translator.localize("misc.untitled-model"), 
        Model.getFacade().getName(p.getModel()));
assertEquals(p.getRoot(), p.getModel());

int sizeMembers = p.getMembers().size();
int sizeDiagrams = p.getDiagramList().size();

// test with a class and class diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
assertNotNull(package1);
Object package2 =
    Model.getModelManagementFactory().buildPackage("test2");

UMLClassDiagram cDiag = new UMLClassDiagram(package2);
p.addMember(cDiag);
assertEquals(sizeDiagrams + 1, p.getDiagramList().size());
assertEquals(sizeMembers + 1, p.getMembers().size());
p.moveToTrash(package2);
Model.getPump().flushModelEvents();

assertEquals(sizeDiagrams, p.getDiagramList().size());
assertEquals(sizeMembers, p.getMembers().size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteClassWithStateDiagram" mc="Standard.Operation" uid="2fa07b42-7c10-448e-af0e-1bef9e34c44d"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteClassWithStateDiagram]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="b55bb9f0-bb3b-42cf-8637-62bc3719ddb6"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a class that contains a Statechart diagram.
According WFR 2 for a class:
a class should not contain a statemachine.
Hence, we are testing an abnormal situation.
But anyhow, deleting a class should cause deletion
of everything in its namespace.
Since the statemachine is deleted, the diagram should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="387b739d-d4d8-4499-8f84-8b855a3fd71a"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

int sizeMembers = p.getMembers().size();
int sizeDiagrams = p.getDiagramList().size();

// test with a class and class diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Object aClass = Model.getCoreFactory().buildClass(package1);


// try with Statediagram
Object machine =
    Model.getStateMachinesFactory().buildStateMachine(aClass);
/* Put the statemachine in the namespace of the class: */
Model.getCoreHelper().setNamespace(machine, aClass);
UMLStateDiagram d =
    new UMLStateDiagram(
            Model.getFacade().getNamespace(machine),
            machine);
p.addMember(d);
assertEquals("Diagram count incorrect", sizeDiagrams + 1, 
        p.getDiagramList().size());
assertEquals("Member count incorrect", sizeMembers + 1, 
        p.getMembers().size());
p.moveToTrash(aClass);
Model.getPump().flushModelEvents();

assertTrue("Statemachine not in trash", p.isInTrash(machine));
assertTrue("Class not in trash", p.isInTrash(aClass));
assertEquals("Diagram count incorrect after trash", sizeDiagrams, 
        p.getDiagramList().size());
assertEquals("Member count incorrect after trash", sizeMembers, 
        p.getMembers().size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteStateDiagram" mc="Standard.Operation" uid="66a95d64-7668-4dc3-a23c-6bd70d39bb1e"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteStateDiagram]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="a5a37caf-494d-4b92-9f53-c4b439c24da9"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a statechart diagram directly.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="99653aad-3473-43df-a4b9-3f44a320bf0a"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

int sizeMembers = p.getMembers().size();
int sizeDiagrams = p.getDiagramList().size();

// test with a class and class diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Object aClass = Model.getCoreFactory().buildClass(package1);


// try with Statediagram
Object machine =
    Model.getStateMachinesFactory().buildStateMachine(aClass);
UMLStateDiagram d =
    new UMLStateDiagram(
            Model.getFacade().getNamespace(machine),
            machine);
p.addMember(d);
assertEquals(sizeDiagrams + 1, p.getDiagramList().size());
assertEquals(sizeMembers + 1, p.getMembers().size());
p.moveToTrash(d);
Model.getPump().flushModelEvents();

assertTrue("Statediagram not in trash", p.isInTrash(d));
assertEquals(sizeDiagrams, p.getDiagramList().size());
assertEquals(sizeMembers, p.getMembers().size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteClassWithInnerClass" mc="Standard.Operation" uid="da3d75f4-a03c-40b3-814e-8e2d07d816fd"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteClassWithInnerClass]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="b16d694c-5c0e-46ed-a66f-087b650f76bc"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a class that contains a Class.
The inner class should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="710b3883-2ffd-4f02-8c8e-ad81e6ced6eb"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

// test with a class and an inner class
Object aClass = Model.getCoreFactory().buildClass("Test");
Object bClass = Model.getCoreFactory().buildClass(aClass);

p.moveToTrash(aClass);
Model.getPump().flushModelEvents();

assertTrue("Class not in trash", p.isInTrash(aClass));
assertTrue("Inner Class not in trash",
        Model.getUmlFactory().isRemoved(bClass));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeletePackageWithClass" mc="Standard.Operation" uid="b4a0ffcd-8c73-4846-9ea3-c75142a34334"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeletePackageWithClass]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="ae77e9eb-b260-4579-bfe8-31490f53ef40"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a package that contains a Class.
The class should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="6085575d-7b28-4841-8f1e-8505afc8a358"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

// test with a class and class diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Object aClass = Model.getCoreFactory().buildClass(package1);

p.moveToTrash(package1);
Model.getPump().flushModelEvents();

assertTrue("Class not in trash",
        Model.getUmlFactory().isRemoved(aClass));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeletePackageWithStateDiagram" mc="Standard.Operation" uid="f708517f-ebb7-46af-86e3-41cdb9241b53"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeletePackageWithStateDiagram]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="9d61d602-8259-4a01-a46f-2df563e6f24a"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a package that contains a Class with Statechart diagram.
The diagram should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="4f76597c-8cb6-4fad-ae0d-6434402cb3cb"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

int sizeMembers = p.getMembers().size();
int sizeDiagrams = p.getDiagramList().size();

// test with a class and class diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Object aClass = Model.getCoreFactory().buildClass(package1);


// try with Statediagram
Object machine =
    Model.getStateMachinesFactory().buildStateMachine(aClass);
UMLStateDiagram d =
    new UMLStateDiagram(
            Model.getFacade().getNamespace(machine),
            machine);
p.addMember(d);
assertEquals(sizeDiagrams + 1, p.getDiagramList().size());
assertEquals(sizeMembers + 1, p.getMembers().size());

p.moveToTrash(package1);
Model.getPump().flushModelEvents();

assertTrue("Class not in trash",
        Model.getUmlFactory().isRemoved(aClass));
assertTrue("Statemachine not in trash",
        Model.getUmlFactory().isRemoved(machine));
assertEquals(sizeDiagrams, p.getDiagramList().size());
assertEquals(sizeMembers, p.getMembers().size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteOperationWithStateDiagram" mc="Standard.Operation" uid="f2b06a92-76c8-4cc9-b71f-a143406c8adf"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteOperationWithStateDiagram]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="b2e6fdae-f595-45b5-9363-0cedabd13395"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting an operation that contains a statechart diagram.
The diagram should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="60393a66-6566-44e2-8fa8-af5a14c3cfc5"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

int sizeMembers = p.getMembers().size();
int sizeDiagrams = p.getDiagramList().size();

// test with a class and class diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Object aClass = Model.getCoreFactory().buildClass(package1);

Object voidType = p.getDefaultReturnType();
Object oper =
    Model.getCoreFactory().buildOperation(
            aClass,
            voidType);

// try with Statediagram
Object machine =
    Model.getStateMachinesFactory().buildStateMachine(oper);
UMLStateDiagram d =
    new UMLStateDiagram(
            Model.getFacade().getNamespace(machine),
            machine);
p.addMember(d);
assertEquals(sizeDiagrams + 1, p.getDiagramList().size());
assertEquals(sizeMembers + 1, p.getMembers().size());

p.moveToTrash(oper);
Model.getPump().flushModelEvents();

assertTrue("Operation not in trash", p.isInTrash(oper));
/* Changed by issue 4281: */
assertTrue("Statemachine in trash",
        !Model.getUmlFactory().isRemoved(machine));
assertEquals(sizeDiagrams + 1, p.getDiagramList().size());
assertEquals(sizeMembers + 1, p.getMembers().size());
/* After issue 4284 will be solved, we
 * may even delete the class, and the diagram
 * should still exist. */
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeletePackageWithClassWithActivityDiagram" mc="Standard.Operation" uid="c5049bbc-8e30-4a7d-ad6b-4d71bbe022ad"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeletePackageWithClassWithActivityDiagram]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="1c8ae078-7e27-4a32-a3ce-e1a515b2faac"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a package with a Class with a Activity diagram.
The diagram should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="70382c7c-a1aa-45bc-8444-11bcbc40dadf"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

int sizeMembers = p.getMembers().size();
int sizeDiagrams = p.getDiagramList().size();

// test with a package and a class and activity diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Object aClass = Model.getCoreFactory().buildClass(package1);

// build the Activity Diagram
Object actgrph =
    Model.getActivityGraphsFactory().buildActivityGraph(aClass);
UMLActivityDiagram d =
    new UMLActivityDiagram(
            Model.getFacade().getNamespace(actgrph),
            actgrph);
p.addMember(d);
assertEquals(sizeDiagrams + 1, p.getDiagramList().size());
assertEquals(sizeMembers + 1, p.getMembers().size());

p.moveToTrash(package1);
Model.getPump().flushModelEvents();

assertTrue("Class not in trash",
        Model.getUmlFactory().isRemoved(aClass));
assertTrue("ActivityGraph not in trash",
        Model.getUmlFactory().isRemoved(actgrph));
assertEquals(sizeDiagrams, p.getDiagramList().size());
assertEquals(sizeMembers, p.getMembers().size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeletePackageWithPackageWithActivityDiagram" mc="Standard.Operation" uid="af4189ec-417d-40b1-aedf-7c15d78a5720"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeletePackageWithPackageWithActivityDiagram]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="fffaaa69-34af-4e58-912e-392fda6b273b"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test deleting a package with a package with a Activity diagram.
The diagram should be deleted, too.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="b782b1a6-c2df-41e3-b180-f60fd71f5732"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertEquals(2, p.getDiagramList().size());

int sizeMembers = p.getMembers().size();
int sizeDiagrams = p.getDiagramList().size();

// test with a package and a class and activity diagram
Object package1 =
    Model.getModelManagementFactory().buildPackage("test1");
Model.getCoreHelper().setNamespace(package1, p.getModel());
Object package2 =
    Model.getModelManagementFactory().buildPackage("test2");
Model.getCoreHelper().setNamespace(package2, package1);

// build the Activity Diagram
Object actgrph =
    Model.getActivityGraphsFactory().buildActivityGraph(package2);
UMLActivityDiagram d =
    new UMLActivityDiagram(
            Model.getFacade().getNamespace(actgrph), actgrph);
p.addMember(d);
assertEquals(sizeDiagrams + 1, p.getDiagramList().size());
assertEquals(sizeMembers + 1, p.getMembers().size());

p.moveToTrash(package1);
Model.getPump().flushModelEvents();

assertTrue("Package 2 not in trash",
        Model.getUmlFactory().isRemoved(package2));
assertTrue("ActivityGraph not in trash",
        Model.getUmlFactory().isRemoved(actgrph));
assertEquals(sizeDiagrams, p.getDiagramList().size());
assertEquals(sizeMembers, p.getMembers().size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testAddSearchPath" mc="Standard.Operation" uid="7f4e2c89-ec99-41b7-8829-8f185c7dfe0e"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testAddSearchPath]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="1e0c5935-0ddc-4435-abf7-a8e4c98df054"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Check that there is only one searchPath.
See issue 1671.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="88d5797c-0270-4f60-ac50-c284a02efe68"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Project p = ProjectManager.getManager().getOpenProjects().get(0);
assertNotNull(p.getSearchPathList());
assertTrue(p.getSearchPathList().size() == 1);

p.addSearchPath("PROJECT_DIR");
assertTrue(p.getSearchPathList().size() == 1);

p.addSearchPath("foo");
p.addSearchPath("foo");
assertTrue(p.getSearchPathList().size() == 2);
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="setUp" mc="Standard.Operation" uid="c3e4a58f-86b1-4be8-bb06-a81cdcc7cb70"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Protected</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[setUp]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Tag">
              <OBJECT>
                <ID name="" mc="Infrastructure.TaggedValue" uid="8ab6c187-dda0-4f6f-acd4-235c349a9d49"/>
                <ATTRIBUTES>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Actual">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TagParameter" uid="96d4a2dc-362d-4b68-9756-328e27520043"/>
                      <ATTRIBUTES>
                        <ATT name="Value"><![CDATA[Exception]]></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES></DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <LINK relation="Definition">
                    <FOREIGNID name="JavaThrownException" mc="Infrastructure.TagType" uid="003800a8-0000-017c-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="0dfd2374-9d39-47c2-b3f9-f31205e58c66"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[@Override]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaAnnotation" mc="Infrastructure.NoteType" uid="000c0b48-0000-3aa1-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="3f2b4ff8-8364-4f0a-b0e8-5354688c8bae"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[/*
     * @see junit.framework.TestCase#setUp()
     */]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaComment" mc="Infrastructure.NoteType" uid="69ab88b5-741c-11e1-89e3-002564c97630"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="98b38fa3-998a-4f0b-9efb-9c0b7f6dabb0"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[super.setUp();
InitializeModel.initializeDefault();
(new InitNotation()).init();
(new InitNotationUml()).init();
(new InitNotationJava()).init();
(new InitDiagramAppearanceUI()).init();
(new InitActivityDiagram()).init();
(new InitCollaborationDiagram()).init();
(new InitDeploymentDiagram()).init();
(new InitStateDiagram()).init();
(new InitClassDiagram()).init();
(new InitUseCaseDiagram()).init();
(new InitProfileSubsystem()).init();
ProjectManager.getManager().makeEmptyProject();
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <COMP relation="OwnedImport">
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="31cf74d2-79a0-4478-9c4c-7f4e24223a02"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="Translator" mc="Standard.Class" uid="942846e1-d096-47f8-81d2-6de4ed27547d"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="2a6a3d48-a9e7-4c64-9470-c56a4f56c226"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitializeModel" mc="Standard.Class" uid="d3ac5a74-0076-4c63-9430-56eb5073f622"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="c3b138d9-2827-4aeb-89be-47156f160b7c"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="Model" mc="Standard.Class" uid="87265c8f-b494-4f18-9e1a-fd1e0e8afdbe"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="535953fc-4d18-49e3-82be-f45a35d24eb1"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitNotation" mc="Standard.Class" uid="3b45995f-dba6-44dd-8a5d-dee519a226e6"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="e80f7f2f-031e-48a2-ba02-7dd567294b42"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitNotationJava" mc="Standard.Class" uid="4785c46a-13c0-482c-94a8-e70fdcd2bd7e"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="be9112bd-eab5-4284-8525-fa2a07c08473"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitNotationUml" mc="Standard.Class" uid="06e98458-1f62-4bf5-ac62-94898dde0ff6"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="5a510651-cc6a-44e5-ae94-6337a39d94b6"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="AbstractFilePersister" mc="Standard.Class" uid="1a8a63e5-65d5-40ce-9efe-5c095fc36a31"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="cdbea8fb-4403-4e5d-bce6-6802e285040f"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="PersistenceManager" mc="Standard.Class" uid="b83c4c51-e301-4972-8a5e-da15bca5443a"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="a96c1d18-a65a-411c-9b94-09f7d2aea70a"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitProfileSubsystem" mc="Standard.Class" uid="d124fbdb-7c94-4b8c-8885-61bd72319f14"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="c64d752c-5433-4f11-9118-d052b7efa513"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="TargetManager" mc="Standard.Class" uid="7dffb265-d772-482e-902f-6a5cf0bb264e"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="9e3e1913-45fc-40fe-ad7d-5b65c9fce43d"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitActivityDiagram" mc="Standard.Class" uid="923e619f-f66e-4e46-919e-0393d7ae92ca"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="589644df-a192-427b-a60b-3394069676c2"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="UMLActivityDiagram" mc="Standard.Class" uid="33e07248-faba-43a9-8a6f-f0972427378a"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="221c6d17-ec48-4a91-b211-301fafc97de9"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitCollaborationDiagram" mc="Standard.Class" uid="4857698b-4b80-4907-bde7-5a68fd664146"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="ed5e701e-3871-4d6c-a264-faa48cafdafb"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitDeploymentDiagram" mc="Standard.Class" uid="6a559c37-d610-4b19-9d8d-de6af738c663"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="368af1e1-6fd1-46c6-9e8b-8f4b0734532e"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitStateDiagram" mc="Standard.Class" uid="8f3a9872-aea8-4776-aca1-917908597c41"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="f7233c9f-0bfb-4deb-ab38-ab4b4764169a"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="UMLStateDiagram" mc="Standard.Class" uid="2aeab96e-9ab1-47f2-9a64-7bc1f5e6f91f"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="41f3f767-a066-4dc5-a5ba-d7a94b8ebf4e"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitClassDiagram" mc="Standard.Class" uid="92019b02-9e86-40bd-a72f-19dd7efac237"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="77b6a29d-a1e6-4e10-87b3-130660ea8359"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="UMLClassDiagram" mc="Standard.Class" uid="705d0e77-022c-40c3-ac81-1171a4cbe554"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="87d7a736-daae-482b-b904-4d3a48b77471"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitDiagramAppearanceUI" mc="Standard.Class" uid="be26772f-d81f-4d72-978d-b1b2c53a00b8"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="64990653-d934-4e96-a798-84334309399b"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="InitUseCaseDiagram" mc="Standard.Class" uid="53eb1bc2-fc85-47e2-b8b4-e8cb9ec85096"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <LINK relation="Extension">
        <FOREIGNID name="JavaClass" mc="Infrastructure.Stereotype" uid="01ec23a8-0000-0258-0000-000000000000"/>
      </LINK>
      <COMP relation="Tag">
        <OBJECT>
          <ID name="" mc="Infrastructure.TaggedValue" uid="6b8b0c03-421e-4b6e-bcb6-a12ea5253951"/>
          <ATTRIBUTES>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Actual">
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="45572e1e-9cb2-4b9c-b7fa-898d84dc0720"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[TestCase]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
            </COMP>
            <LINK relation="Definition">
              <FOREIGNID name="JavaExtends" mc="Infrastructure.TagType" uid="003800a8-0000-0154-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Infrastructure.TaggedValue" uid="b0240d05-1e54-4922-a62d-1f47e3399dc6"/>
          <ATTRIBUTES>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Actual">
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="b7e11229-db19-4d8e-89cb-9a5c6c6ca45f"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.io.IOException]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="feb34702-e98b-4080-8c77-99b425a31dea"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.net.URISyntaxException]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="2d521c35-408b-4bf6-a926-23ca84aa04fc"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.util.Collection]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="66187d5f-8503-42a7-be27-13ff1770eb11"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[junit.framework.TestCase]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="963ba8c2-e3c5-4d35-816d-753ba18030bc"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[org.argouml.persistence.ProjectFile]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
            </COMP>
            <LINK relation="Definition">
              <FOREIGNID name="JavaImport" mc="Infrastructure.TagType" uid="003800a8-0000-0155-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <COMP relation="Descriptor">
        <OBJECT>
          <ID name="" mc="Infrastructure.Note" uid="c0b3d93a-8d32-4f86-9c86-c7def2bcd71d"/>
          <ATTRIBUTES>
            <ATT name="Content"><![CDATA[TODO: This whole class needs to be updated to remove use of deprecated
methods and (hopefully) test multi-root and multi-project methods.

@since Nov 17, 2002
@author jaap.branderhorst@xs4all.nl]]></ATT>
            <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="Model">
              <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015d-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Infrastructure.Note" uid="e7a6c1cb-e91c-47b4-a5ec-c431ae0b02e9"/>
          <ATTRIBUTES>
            <ATT name="Content"><![CDATA[// Rights Reserved. Permission to use, copy, modify, and distribute this
// software and its documentation without fee, and without a written
// agreement is hereby granted, provided that the above copyright notice
// and this paragraph appear in all copies.  This software program and
// documentation are copyrighted by The Regents of the University of
// California. The software program and documentation are supplied "AS
// IS", without any accompanying services from The Regents. The Regents
// does not warrant that the operation of the program will be
// uninterrupted or error-free. The end-user understands that the program
// was developed for research purposes and is advised not to rely
// exclusively on the program for any reason.  IN NO EVENT SHALL THE
// UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
// SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.]]></ATT>
            <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="Model">
              <FOREIGNID name="JavaTop" mc="Infrastructure.NoteType" uid="01840500-0000-a2a0-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
    </DEPENDENCIES>
  </OBJECT>
</EXT>