<?xml version="1.0" ?>
<!--GENERATED FILE, PLEASE DO NOT EDIT!!!--><EXT object="TestCoreFactory" version="4">
  <OBJECT>
    <ID name="TestCoreFactory" mc="Standard.Class" uid="3f21e35b-d14d-4266-990a-e4e8ce08f586"/>
    <PID name="model" mc="Standard.Package" uid="a4b2634a-5fef-44dd-8d14-d2616aa9c45d"/>
    <ATTRIBUTES>
      <ATT name="IsActive">false</ATT>
      <ATT name="IsMain">false</ATT>
      <ATT name="IsElementary">false</ATT>
      <ATT name="IsAbstract">false</ATT>
      <ATT name="IsLeaf">false</ATT>
      <ATT name="IsRoot">false</ATT>
      <ATT name="Visibility">Public</ATT>
      <ATT name="Name"><![CDATA[TestCoreFactory]]></ATT>
      <ATT name="status">1970354901745664</ATT>
    </ATTRIBUTES>
    <DEPENDENCIES>
      <COMP relation="OwnedOperation">
        <OBJECT>
          <ID name="TestCoreFactory" mc="Standard.Operation" uid="05de6f14-972e-4002-a2a7-fb968b8018de"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[TestCoreFactory]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="IO">
              <OBJECT>
                <ID name="n" mc="Standard.Parameter" uid="8c2e1f05-be53-43b4-b57b-15296efc9095"/>
                <ATTRIBUTES>
                  <ATT name="ParameterPassing">In</ATT>
                  <ATT name="MultiplicityMin"><![CDATA[1]]></ATT>
                  <ATT name="MultiplicityMax"><![CDATA[1]]></ATT>
                  <ATT name="TypeConstraint"></ATT>
                  <ATT name="DefaultValue"></ATT>
                  <ATT name="IsOrdered">false</ATT>
                  <ATT name="IsUnique">false</ATT>
                  <ATT name="IsException">false</ATT>
                  <ATT name="IsStream">false</ATT>
                  <ATT name="Effect">ReadEffect</ATT>
                  <ATT name="Name"><![CDATA[n]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Tag">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="6676175d-2120-4c3c-b80a-117eba4027c2"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="18740ba5-9f68-48ae-9019-d0156d107255"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[String]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="JavaTypeExpr" mc="Infrastructure.TagType" uid="00380080-0000-01a4-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <COMP relation="Descriptor">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.Note" uid="f5d8afc6-7e88-4a7e-a83c-847913844be2"/>
                      <ATTRIBUTES>
                        <ATT name="Content"><![CDATA[the name of the test]]></ATT>
                        <ATT name="MimeType"></ATT>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <LINK relation="Model">
                          <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="01240268-0000-0044-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <LINK relation="Extension">
              <FOREIGNID name="create" mc="Infrastructure.Stereotype" uid="00700680-0000-0204-0000-000000000000"/>
            </LINK>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="c3d4b662-506b-4d68-96af-fec449f062a1"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[The constructor.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="8188fab9-d27c-4581-9a49-a7fe34d95e45"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[super(n);]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="setUp" mc="Standard.Operation" uid="4bfdb8aa-7f07-46bc-964c-9e62eb52b808"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[setUp]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Tag">
              <OBJECT>
                <ID name="" mc="Infrastructure.TaggedValue" uid="feafc812-d405-4e7d-be54-7c8e0fac7187"/>
                <ATTRIBUTES>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Actual">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TagParameter" uid="041fcf74-0fff-4af4-9a50-6b6d73152671"/>
                      <ATTRIBUTES>
                        <ATT name="Value"><![CDATA[Exception]]></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES></DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <LINK relation="Definition">
                    <FOREIGNID name="JavaThrownException" mc="Infrastructure.TagType" uid="003800a8-0000-017c-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="0944e4f5-c033-4b79-8509-20fca6651d44"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[/*
     * @see junit.framework.TestCase#setUp()
     */]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaComment" mc="Infrastructure.NoteType" uid="69ab88b5-741c-11e1-89e3-002564c97630"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="39f88ddf-e7d0-4085-8367-8b7034c6a60d"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[super.setUp();
    InitializeModel.initializeDefault();
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="getAllModelElements" mc="Standard.Operation" uid="df85d879-45e3-4fdc-a4db-62ef7091cef6"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">PackageVisibility</ATT>
            <ATT name="IsClass">true</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[getAllModelElements]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Return">
              <OBJECT>
                <ID name="" mc="Standard.Parameter" uid="43cf88a1-13a1-49df-b847-beb0665dfb60"/>
                <ATTRIBUTES>
                  <ATT name="ParameterPassing">In</ATT>
                  <ATT name="MultiplicityMin"><![CDATA[0]]></ATT>
                  <ATT name="MultiplicityMax"><![CDATA[*]]></ATT>
                  <ATT name="TypeConstraint"></ATT>
                  <ATT name="DefaultValue"></ATT>
                  <ATT name="IsOrdered">false</ATT>
                  <ATT name="IsUnique">false</ATT>
                  <ATT name="IsException">false</ATT>
                  <ATT name="IsStream">false</ATT>
                  <ATT name="Effect">ReadEffect</ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Tag">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="9a9c1d60-34d1-4466-87ae-06583bb3a1db"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="4a4537e1-9263-434c-a7fc-d7bc2f546789"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[Array]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="type" mc="Infrastructure.TagType" uid="00000000-0000-3767-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="0f710ef5-6fa6-4b14-beea-e6b8d2259c4f"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="93fd2890-c36d-4855-93d9-5d8a242a4a0d"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[String]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="JavaTypeExpr" mc="Infrastructure.TagType" uid="00380080-0000-01a4-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <COMP relation="Descriptor">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.Note" uid="70e9af2d-359e-4054-9df4-1d31fc13137b"/>
                      <ATTRIBUTES>
                        <ATT name="Content"><![CDATA[Returns the allModelElements.]]></ATT>
                        <ATT name="MimeType"></ATT>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <LINK relation="Model">
                          <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="01240268-0000-0044-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="52abefcb-b2fa-4802-9d24-da509666fd3a"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[return allModelElements;]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaReturned" mc="Infrastructure.NoteType" uid="003800a8-0000-0190-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="getTestableModelElements" mc="Standard.Operation" uid="3cfe7fc6-739c-44b1-a736-b066f1ba73e1"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">PackageVisibility</ATT>
            <ATT name="IsClass">true</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[getTestableModelElements]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Return">
              <OBJECT>
                <ID name="" mc="Standard.Parameter" uid="34210cf5-bb56-4470-8f9d-767e64a57e7a"/>
                <ATTRIBUTES>
                  <ATT name="ParameterPassing">In</ATT>
                  <ATT name="MultiplicityMin"><![CDATA[0]]></ATT>
                  <ATT name="MultiplicityMax"><![CDATA[*]]></ATT>
                  <ATT name="TypeConstraint"></ATT>
                  <ATT name="DefaultValue"></ATT>
                  <ATT name="IsOrdered">false</ATT>
                  <ATT name="IsUnique">false</ATT>
                  <ATT name="IsException">false</ATT>
                  <ATT name="IsStream">false</ATT>
                  <ATT name="Effect">ReadEffect</ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Tag">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="8a1ce0ec-f23c-47b8-b391-423a57b3117e"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="e8e4f4b7-7ebe-4e13-ab86-26825cb9a5e8"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[List]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="type" mc="Infrastructure.TagType" uid="00000000-0000-3767-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="ff8d804c-8cfc-4284-a79e-d80c1966cdc8"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="42262f41-ba7c-46b4-947e-0c54e5c6d454"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[String]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="JavaTypeExpr" mc="Infrastructure.TagType" uid="00380080-0000-01a4-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <COMP relation="Descriptor">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.Note" uid="7c4f88dc-0c74-436a-a9d7-42344b1613f3"/>
                      <ATTRIBUTES>
                        <ATT name="Content"><![CDATA[the concrete ModelElements which are testable]]></ATT>
                        <ATT name="MimeType"></ATT>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <LINK relation="Model">
                          <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="01240268-0000-0044-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="dbc174d6-a8e8-4790-98fc-15a6d6dec499"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[return c;]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaReturned" mc="Infrastructure.NoteType" uid="003800a8-0000-0190-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="ea1ed83a-feb6-44de-9eb7-cabc759b6064"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[List<String> c = new ArrayList<String>(Arrays.asList(allModelElements));
c.remove("BehavioralFeature");
c.remove("Element");
c.remove("ModelElement");
c.remove("Namespace");
c.remove("GeneralizableElement");
c.remove("Classifier");
c.remove("Feature");
c.remove("StructuralFeature");
c.remove("BehavioralFeature");
c.remove("Relationship");
c.remove("PresentationElement");

// TODO: This is temporary.  We need a new list for UML 2.x
// The following UML 1.4 elements are not in UML 2.x
if (!"1.4".equals(Model.getFacade().getUmlVersion())) {
    c.remove("AssociationEnd");
    c.remove("Attribute");
    c.remove("Binding");
    c.remove("ElementResidence");
    c.remove("Flow");
    c.remove("Method");
    c.remove("Permission");
    c.remove("TemplateArgument");
}
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testCreates" mc="Standard.Operation" uid="f97955bb-e795-47cd-91f5-9be70afc9e58"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testCreates]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="c643f429-565d-4530-8e41-2c5d8238f0fa"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test creation of metatypes.

TODO: we could add tests here to make sure that
we can NOT create abstract types]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="a74cd285-0bf2-49a4-a108-cb511416cb94"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[CheckUMLModelHelper.createAndRelease(
        Model.getCoreFactory(), getTestableModelElements());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteComplete" mc="Standard.Operation" uid="8710d65e-7326-4d79-ab24-956668a31d92"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteComplete]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="37d579f7-df5d-48b4-a8f7-8bd97c2cdef3"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test complete deletion.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="d13b438c-b25b-4138-92bc-ba2fd0ac0260"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[CheckUMLModelHelper.hasDeleteMethod(Model.getCoreFactory(),
        allModelElements);
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteClassifier1" mc="Standard.Operation" uid="591b4abd-b5c5-45d9-a468-6b7118075a91"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteClassifier1]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="b05fb77e-72f1-4794-8ca3-82fb272f44da"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test that deleting a classifier also deletes a binary association.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="4ee546d9-bcad-4759-bcf9-dfc24c0968ec"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object class2 = Model.getCoreFactory().buildClass(model);
Object assoc = Model.getCoreFactory().buildAssociation(class1, class2);
Model.getUmlFactory().delete(class1);
Model.getPump().flushModelEvents();

assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class1));
assertTrue("binary association not removed",
        Model.getUmlFactory().isRemoved(assoc));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteClassifierAssociation" mc="Standard.Operation" uid="5ce4e360-c4ff-40b6-9ec1-bd69d8d4409d"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteClassifierAssociation]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="cfaa44b8-79a9-440f-8fa4-cca6e229c1e9"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test if deleting a classifier from a 3 way
association results in a binary association
remaining between the other classifiers.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="765f623c-bce9-4cba-89c8-56268768d18c"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object class2 = Model.getCoreFactory().buildClass(model);
Object assoc = Model.getCoreFactory().buildAssociation(class1, class2);
Model.getCoreHelper().addConnection(assoc,
        Model.getCoreFactory().createAssociationEnd());
Model.getUmlFactory().delete(class1);
Model.getPump().flushModelEvents();
assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class1));
// Check to see if association still exists
Collection ends = Model.getFacade().getAssociationEnds(class2);
assertEquals(1, ends.size());
Object assoc1 =
    Model.getFacade()
        .getAssociation(ends.iterator().next());
assertEquals(2, Model.getFacade().getConnections(assoc1).size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteModelelementDependency" mc="Standard.Operation" uid="cd98bcd2-dcb4-48df-af98-4501e019d4f6"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteModelelementDependency]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="d898dc55-36b4-4e5d-ac9d-7115747bea31"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test if deleting a class also deletes its dependency.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="12c8d79d-08ac-448d-9050-b3b8bff5ceb0"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object class2 = Model.getCoreFactory().buildClass(model);
Model.getCoreFactory().buildDependency(class1, class2);
assertEquals("client dependency invalid",
        1, Model.getFacade().getClientDependencies(class1).size());
assertEquals("supplier dependency invalid",
        1, Model.getFacade().getSupplierDependencies(class2).size());

Model.getUmlFactory().delete(class1);
Model.getPump().flushModelEvents();

assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class1));
assertEquals("invalid supplier dependency not removed",
        0, Model.getFacade().getSupplierDependencies(class2).size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteModelelementDependencyClient" mc="Standard.Operation" uid="49e0bdb9-500e-402f-b13c-48891c01ae06"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteModelelementDependencyClient]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="16abf1ba-734d-409e-94c1-23ae0f54fa54"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test that deleting a class doesn't delete a valid dependency.
<pre>
Build 2
/ \
1   3
</pre>
delete 1 and confirm that dependency still exists]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="50a0effc-2c97-4f86-9251-78a4ec21301f"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object class2 = Model.getCoreFactory().buildClass(model);
Object dep = Model.getCoreFactory().buildDependency(class1, class2);
Model.getCoreHelper().setNamespace(dep, model);
Object class3 = Model.getCoreFactory().buildClass(model);
Model.getCoreHelper().addClient(dep, class3);
Model.getPump().flushModelEvents();
assertEquals(
        "client dependency invalid",
        1,
        Model.getFacade().getClientDependencies(class1).size());
assertEquals(
        "client dependency invalid",
        1,
        Model.getFacade().getClientDependencies(class3).size());
assertEquals(
        "supplier dependency invalid",
        1,
        Model.getFacade().getSupplierDependencies(class2).size());

Model.getUmlFactory().delete(class1);
Model.getPump().flushModelEvents();

assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class1));
assertEquals("valid client dependency removed",
        1, Model.getFacade().getClientDependencies(class3).size());
assertEquals("valid supplier dependency removed",
        1, Model.getFacade().getSupplierDependencies(class2).size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteModelelementDependencyClient2" mc="Standard.Operation" uid="1a41d0f2-2221-45fb-a335-c762bbeea2b5"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteModelelementDependencyClient2]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="656d9161-b193-40b4-880e-04b15f906bc0"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test that deleting a class doesn't leave an invalid dependency.
<pre>
Build 2
/ \
1   3
</pre>
delete 2 and confirm that the dependency is deleted]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="3aa6eb15-121a-4b3c-add8-02d998096b2b"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object class2 = Model.getCoreFactory().buildClass(model);
Object dep = Model.getCoreFactory().buildDependency(class1, class2);
Object class3 = Model.getCoreFactory().buildClass(model);
Model.getCoreHelper().addClient(dep, class3);

Model.getUmlFactory().delete(class2);
Model.getPump().flushModelEvents();

assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class2));
assertTrue("Invalid dependency not removed",
        Model.getFacade().getClientDependencies(class3).isEmpty());
assertTrue("Invalid dependency not removed",
        Model.getFacade().getClientDependencies(class1).isEmpty());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteModelelementDependencySupplier" mc="Standard.Operation" uid="cb6941af-0af5-490e-99d9-69360443abd6"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteModelelementDependencySupplier]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="986586d6-e506-4961-a04a-aad46051991d"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test if deleting a class with a dependency containing two suppliers
also deletes the invalid dependency.
<pre>
Build 2   3
\ /
1
</pre>
Delete 1 and confirm that dependency gets deleted]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="113cb65d-241b-4c62-9459-cb70c0e1a487"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object class2 = Model.getCoreFactory().buildClass(model);
Object dep = Model.getCoreFactory().buildDependency(class1, class2);
Object class3 = Model.getCoreFactory().buildClass(model);
Model.getCoreHelper().addSupplier(dep, class3);

Model.getUmlFactory().delete(class1);
Model.getPump().flushModelEvents();

assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class1));
assertEquals(
        "Invalid dependency not removed",
        0,
        Model.getFacade().getSupplierDependencies(class2).size());
assertEquals(
        "Invalid dependency not removed",
        0,
        Model.getFacade().getSupplierDependencies(class3).size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteModelelementDependencySupplier2" mc="Standard.Operation" uid="a2bd5ca4-f0c5-4d65-9115-e8255b367d6e"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteModelelementDependencySupplier2]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="ff0547d4-7ce8-4655-88f5-b5c4b4a6c2af"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test if deleting a class which is one of two suppliers to a dependency
leaves the dependency intact.
<pre>
Build 2   3
\ /
1
</pre>
Delete 2 and confirm that dependency remains]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="ba6496d2-024f-40dc-9221-95237bfceec0"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object class2 = Model.getCoreFactory().buildClass(model);
Object dep = Model.getCoreFactory().buildDependency(class1, class2);
Object class3 = Model.getCoreFactory().buildClass(model);
Model.getCoreHelper().addSupplier(dep, class3);

Model.getUmlFactory().delete(class2);
Model.getPump().flushModelEvents();

assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class2));
assertEquals(
        "Invalid dependency not removed",
        1,
        Model.getFacade().getClientDependencies(class1).size());
assertEquals(
        "Invalid dependency not removed",
        1,
        Model.getFacade().getSupplierDependencies(class3).size());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testDeleteModelelementClassSelfAssociations" mc="Standard.Operation" uid="4ca87e6a-ea07-4b10-b500-2f9c4f6fb991"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testDeleteModelelementClassSelfAssociations]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="e0168051-a895-451a-b654-cb987992e2a9"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Construct a class, with two self associations and delete the class.
Test if both associations were deleted in the process.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="ec05f575-4ad3-4173-8b77-09227766beb6"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass(model);
Object assoc1 = Model.getCoreFactory().buildAssociation(class1, class1);
Object assoc2 = Model.getCoreFactory().buildAssociation(class1, class1);
Model.getUmlFactory().delete(class1);
Model.getPump().flushModelEvents();

assertTrue("class not removed",
        Model.getUmlFactory().isRemoved(class1));
assertTrue("assoc1 not removed",
        Model.getUmlFactory().isRemoved(assoc1));
assertTrue("assoc2 not removed",
        Model.getUmlFactory().isRemoved(assoc2));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testBuildConstraint" mc="Standard.Operation" uid="8127831e-0ce4-46c4-828c-79f849041eb9"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testBuildConstraint]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="582b23e3-1d4c-4157-b329-3352a76f3c8c"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test buildConstraint().]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="eeba884a-a829-4b84-815e-fe698891bb20"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[try {
    Model.getCoreFactory().buildConstraint(null);
    fail("IllegalArgumentException should be thrown");
} catch (IllegalArgumentException i) {
    // Expected IllegalArgumentException seen
}
Object elem = Model.getModelManagementFactory().createModel();
Object con = Model.getCoreFactory().buildConstraint(elem);
    Model.getPump().flushModelEvents();
assertNull("Namespace is unexpectly set", Model.getFacade()
            .getNamespace(con));
assertTrue(
       "Constrained element is not set",
       !Model.getFacade().getConstrainedElements(con).isEmpty());
assertTrue("Constraint is not set", !Model.getFacade().getConstraints(
            elem).isEmpty());
    Model.getCoreHelper().setNamespace(elem,
            Model.getModelManagementFactory().createPackage());
con = Model.getCoreFactory().buildConstraint(elem);
    Model.getPump().flushModelEvents();
assertNotNull("Namespace is not set", Model.getFacade().getNamespace(
            con));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testBuildTemplate" mc="Standard.Operation" uid="8aef9eee-007d-4d33-bb60-606f2bba1333"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testBuildTemplate]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="d7f9493e-adb5-4730-b810-70c2d52a55e7"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test building a template ModelElement.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="633d83d9-dde5-4e36-afda-95dabb737fe3"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object templatedClass =
        Model.getCoreFactory().buildClass("Template", model);

Object parameterizedClass = Model.getCoreFactory().buildClass(
        "ParameterizedClass", model);
assertNotNull("Failed to create Class", parameterizedClass);
Object binding = Model.getCoreFactory().buildBinding(
        parameterizedClass, templatedClass, null);
assertNotNull("Failed to create build Binding with null arg list",
        binding);        

Object paramType1 = Model.getCoreFactory().buildClass("ParamType1");
Object paramType2 = Model.getCoreFactory().buildInterface("ParamType2");
Object paramType3 = Model.getCoreFactory().buildClass("ParamType3");

Object param1 = Model.getCoreFactory().createTemplateParameter();
assertNotNull("Failed to create Template Parameter", param1);
Object param2 = Model.getCoreFactory().createTemplateParameter();
Object param3 = Model.getCoreFactory().createTemplateParameter();

Model.getCoreHelper().setParameter(param1, paramType1);
assertEquals("Parameters don't match", paramType1, 
        Model.getFacade().getParameter(param1));
Model.getCoreHelper().setParameter(param2, paramType2);
Model.getCoreHelper().setParameter(param3, paramType3);

Object default1 = Model.getCoreFactory().buildClass("Default1");
Object default2 = Model.getCoreFactory().buildInterface("Default2");
Object default3 = Model.getCoreFactory().buildClass("Default3");

Model.getCoreHelper().setDefaultElement(param1, default1);
assertEquals("Default element doesn't match", default1, 
        Model.getFacade().getDefaultElement(param1));
Model.getCoreHelper().setDefaultElement(param2, default2);
Model.getCoreHelper().setDefaultElement(param3, default3);

Model.getCoreHelper().addTemplateParameter(templatedClass, param2);
Model.getCoreHelper().addTemplateParameter(templatedClass, param3);
Model.getCoreHelper().addTemplateParameter(templatedClass, 0, param1);

List params = new ArrayList();
params.add(param1);
params.add(param2);
params.add(param3);

assertEquals("TemplateParameter list is wrong", params,
        Model.getFacade().getTemplateParameters(templatedClass));

Model.getCoreHelper().removeTemplateParameter(templatedClass, param2);
params.remove(1);
assertEquals("removeTemplateParameter gave wrong result", params,
        Model.getFacade().getTemplateParameters(templatedClass));

Model.getCoreHelper().addTemplateParameter(templatedClass, 1, param2);
params.add(1, param2);
assertEquals("addTemplateParameter in middle gave wrong result",
        params, Model.getFacade().getTemplateParameters(templatedClass));

Object arg1 = Model.getCoreFactory().buildClass("Arg1");
Object arg2 = Model.getCoreFactory().buildInterface("Arg2");
Object arg3 = Model.getCoreFactory().buildClass("Arg3");

Object ta1 =  Model.getCoreFactory().buildTemplateArgument(arg1);
assertNotNull("buildTemplateArgument produced null result", ta1);
assertEquals("model element of template argument doesn't match", 
        arg1, Model.getFacade().getModelElement(ta1));
Object ta2 =  Model.getCoreFactory().buildTemplateArgument(arg2);
Object ta3 =  Model.getCoreFactory().buildTemplateArgument(arg3);

Model.getCoreHelper().addTemplateArgument(binding, ta2);
Model.getCoreHelper().addTemplateArgument(binding, ta3);
Model.getCoreHelper().addTemplateArgument(binding, 0, ta1);

List args = new ArrayList();
args.add(ta1);
args.add(ta2);
args.add(ta3);
assertEquals("Binding arguments don't match", args, 
        Model.getFacade().getArguments(binding));

Model.getCoreHelper().removeTemplateArgument(binding, ta2);
args.remove(ta2);
assertEquals("Binding arguments don't match", args, 
        Model.getFacade().getArguments(binding));

Model.getCoreHelper().addTemplateArgument(binding, 1, ta2);
args.add(1, ta2);
assertEquals("Binding arguments don't match", args, 
        Model.getFacade().getArguments(binding));

// A parameterized class can only be the client of a single binding
try {
    Model.getCoreFactory()
            .buildBinding(
                    parameterizedClass,
                    Model.getCoreFactory().buildClass(
                            "Template2", model), null);
    fail("Attempt to create 2nd binding for a client didn't fail "
            + "as expected.");
} catch (IllegalArgumentException e) {
    // exception expected - test success
}

// Create a different client to bind to the same supplier
Object parameterizedClass2 = Model.getCoreFactory().buildClass(
        "ParameterizedClass2", model);

args.remove(0);
try {
    Model.getCoreFactory().buildBinding(
            parameterizedClass2, templatedClass, args);
    fail("Expected exception for mismatched number of args & params");
} catch (IllegalArgumentException e) {
    // expected - test success
}

args.add(arg1);
try {
    Model.getCoreFactory().buildBinding(
            parameterizedClass2, templatedClass, args);
    fail("Expected exception for mismatched type/order of args "
            + "& params");
} catch (IllegalArgumentException e) {
    // expected - test success
}

// Create a new arg list with a different set of args (but same types)
args.clear();
// NOTE: Although it's not shown in the UML 1.4 spec, a TemplateArgument
// appears to be a datavalue (like MultiplicityRange) and can not be
// reused in multiple instances.  The UML diagrams don't show it as a
// composition, but it effectively is.
ta1 = Model.getCoreFactory().buildTemplateArgument(
        Model.getCoreFactory().buildClass("ta1a"));
ta2 = Model.getCoreFactory().buildTemplateArgument(
        Model.getCoreFactory().buildInterface("ta2a"));
ta3 = Model.getCoreFactory().buildTemplateArgument(
        Model.getCoreFactory().buildClass("ta3a"));
args.add(ta1);
args.add(ta2);
args.add(ta3);
Object binding2 = Model.getCoreFactory().buildBinding(
        parameterizedClass2, templatedClass, args);
assertNotNull("Failed to create 2nd binding to same template", 
        binding2);
assertEquals("Binding arguments don't match", args, 
        Model.getFacade().getArguments(binding2));

Collection deps =
        Model.getFacade().getClientDependencies(parameterizedClass2);
assertEquals(1, deps.size());
Object dep = deps.iterator().next();
assertEquals(binding2, dep);
Collection suppliers =  Model.getFacade().getSuppliers(dep);
assertEquals(1, suppliers.size());
Collection clients =  Model.getFacade().getClients(dep);
assertEquals(1, clients.size());
assertEquals(templatedClass, suppliers.iterator().next());
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testBuildAssociation" mc="Standard.Operation" uid="ad68ed23-c671-410f-9264-fe77e86fc0e2"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testBuildAssociation]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="94843bf2-ccbb-48bc-801f-36235753f826"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test building an association between classes in two different packages
and verify that the]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="5423e63f-6da3-4cb1-ace7-2173ad4ca0b0"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object packA = Model.getModelManagementFactory().buildPackage(
        "package-a");
Object packB = Model.getModelManagementFactory().buildPackage(
        "package-b");
Object packC = Model.getModelManagementFactory().buildPackage(
        "package-c");

Model.getCoreHelper().setNamespace(packA, model);
Model.getCoreHelper().setNamespace(packB, packA);
Model.getCoreHelper().setNamespace(packC, packA);
Object class1 = Model.getCoreFactory().buildClass(packB);
Object class2 = Model.getCoreFactory().buildClass(packC);
Model.getModelManagementFactory().buildElementImport(packB, class2);

Object assoc = Model.getCoreFactory().buildAssociation(class1, class2);
assertTrue("buildAssociation() and isValidNamespace() don't agree on "
        + "namespace for an Association", 
        Model.getCoreHelper().isValidNamespace(assoc, 
                Model.getFacade().getNamespace(assoc)));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testBuildRealization" mc="Standard.Operation" uid="aff8c272-2da2-4c66-b06f-220f3803340f"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testBuildRealization]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="f7e5f975-fee5-433e-bb5d-493a6162462c"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test buildRealization and buildAbstraction]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="66719b0a-54e6-43f2-8fb7-6b9a71f4ccd8"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object client = Model.getCoreFactory().buildClass("ClassA", model);
Object supplier = Model.getCoreFactory().buildInterface("InterfaceB",
        model);
Object realization = Model.getCoreFactory().buildRealization(client,
        supplier, model);

assertTrue(Model.getFacade().isAAbstraction(realization));
assertTrue(Model.getExtensionMechanismsHelper().hasStereotype(
        realization, "realize"));

try {
    Model.getCoreFactory().buildRealization(supplier, supplier, model);
    fail("buildRealization to self didn't throw exception");
} catch (Exception e) {
    // success
}

Object abstraction = Model.getCoreFactory().buildAbstraction("foo", 
        supplier, client);
assertTrue(Model.getFacade().isAAbstraction(abstraction));

try {
    Model.getCoreFactory().buildAbstraction("foo2", supplier, supplier);
    fail("buildAbstraction to self didn't throw exception");
} catch (Exception e) {
    // success
}
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testBuildGeneralization" mc="Standard.Operation" uid="aebbbc31-e950-4c2a-b74f-a316dc04c5e5"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testBuildGeneralization]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="16477af8-8c2e-420f-9430-b1b362286586"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Test buildGeneralization]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="8d72e34a-411f-436e-8b77-dc32872ac6d8"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object client = Model.getCoreFactory().buildClass("ClassA", model);
Object supplier = Model.getCoreFactory().buildInterface("ClassB",
        model);

try {
    Model.getCoreFactory().buildGeneralization(supplier, supplier);
    fail("buildGeneralization to self didn't throw exception");
} catch (Exception e) {
    // success
}

try {
    Model.getCoreFactory().buildGeneralization(client, client);
    fail("buildGeneralization to self didn't throw exception");
} catch (Exception e) {
    // success
}

Object generalization = Model.getCoreFactory().buildGeneralization(
        client, supplier);
assertTrue(Model.getFacade().isAGeneralization(generalization));

try {
    Model.getCoreFactory().buildGeneralization(supplier, client);
    fail("circular buildGeneralization didn't throw exception");
} catch (Exception e) {
    // success
}

Model.getUmlFactory().delete(supplier);
assertTrue(Model.getUmlFactory().isRemoved(generalization));
Model.getUmlFactory().delete(model);
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="testBuildAssociationEnd" mc="Standard.Operation" uid="e0465fce-9e27-46ff-8b18-44808de0de0c"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">false</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[testBuildAssociationEnd]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="f73f9788-6194-4040-90df-42192873b01e"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[Object model = Model.getModelManagementFactory().createModel();
Object class1 = Model.getCoreFactory().buildClass("Class1", model);
Object class2 = Model.getCoreFactory().buildClass("Class2", model);
Object assoc = Model.getCoreFactory().createAssociation();
      Object ordering = Model.getOrderingKind().getUnordered();
Object aggComposite = Model.getAggregationKind().getComposite();
Object scope = Model.getScopeKind().getInstance(); // not static
Object changeable = Model.getChangeableKind().getChangeable();
Object visibility = Model.getVisibilityKind().getPrivate();
try {
    Model.getCoreFactory().buildAssociationEnd(assoc, "End", class1,
            new Integer[] {0, -1}, null, false, ordering, aggComposite,
            scope, changeable, visibility);
    fail("Creation of aggregate association end with multiplicity "
            + "of 'unlimited' should throw an exception");
} catch (IllegalArgumentException e) {
    // Test passed
}

try {
    Model.getCoreFactory().buildAssociationEnd(assoc, "End", class1,
            new Integer[] {0, 2}, null, false, ordering, aggComposite,
            scope, changeable, visibility);
    fail("Creation of aggregate association end with multiplicity "
            + "of 2 should throw an exception");
} catch (IllegalArgumentException e) {
    // Test passed
}

Object aggNone = Model.getAggregationKind().getNone();
Object ae = Model.getCoreFactory().buildAssociationEnd(assoc, "End",
        class1, new Integer[] {0, 2}, null, false, ordering, aggNone,
        scope, changeable, visibility);
assertTrue(Model.getFacade().isAAssociationEnd(ae));

ae = null;
ae = Model.getCoreFactory().buildAssociationEnd(assoc, "End", class1,
        new Integer[] {0, 1}, null, false, ordering, aggComposite, scope,
        changeable, visibility);
assertTrue(Model.getFacade().isAAssociationEnd(ae));
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <COMP relation="OwnedAttribute">
        <OBJECT>
          <ID name="allModelElements" mc="Standard.Attribute" uid="7a5312e9-597a-4b05-8ca2-4887a4752728"/>
          <ATTRIBUTES>
            <ATT name="TypeConstraint"></ATT>
            <ATT name="Value"><![CDATA[{
	"Abstraction",
	"Association",
	"AssociationClass",
	"AssociationEnd",
	"Attribute",
	"BehavioralFeature",
	"Binding",
	"Class",
	"Classifier",
	"Comment",
	"Component",
	"Constraint",
	"DataType",
	"Dependency",
	"Element",
	"ElementResidence",
	"Feature",
	"Flow",
	"GeneralizableElement",
	"Generalization",
	"Interface",
	"Method",
	"ModelElement",
	"Namespace",
	"Node",
	"Operation",
	"Parameter",
//	"Permission",
	"PresentationElement",
	"Relationship",
	"StructuralFeature",
        "TemplateArgument",
	"TemplateParameter",
	"Usage",
    }]]></ATT>
            <ATT name="TargetIsClass">false</ATT>
            <ATT name="Changeable">AccesNone</ATT>
            <ATT name="IsDerived">false</ATT>
            <ATT name="IsOrdered">false</ATT>
            <ATT name="IsUnique">false</ATT>
            <ATT name="MultiplicityMin"><![CDATA[0]]></ATT>
            <ATT name="MultiplicityMax"><![CDATA[*]]></ATT>
            <ATT name="Visibility">Private</ATT>
            <ATT name="IsClass">true</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[allModelElements]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Tag">
              <OBJECT>
                <ID name="" mc="Infrastructure.TaggedValue" uid="1f2fc36c-4c1b-4266-9a25-fcf573657627"/>
                <ATTRIBUTES>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Actual">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TagParameter" uid="8433faf7-e181-4479-8e96-9c3267f79aea"/>
                      <ATTRIBUTES>
                        <ATT name="Value"><![CDATA[Array]]></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES></DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <LINK relation="Definition">
                    <FOREIGNID name="type" mc="Infrastructure.TagType" uid="00000000-0000-3765-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TaggedValue" uid="862b4aee-eb05-4c1d-9b54-cd12b3d8bee6"/>
                <ATTRIBUTES>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Actual">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TagParameter" uid="d7c1c5ee-ffd2-455a-8f91-a485da7eccd9"/>
                      <ATTRIBUTES>
                        <ATT name="Value"><![CDATA[String]]></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES></DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                  <LINK relation="Definition">
                    <FOREIGNID name="JavaTypeExpr" mc="Infrastructure.TagType" uid="003800a8-0000-0165-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="28a7e2c1-aa15-444e-a660-ac2f43767aef"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[The UML 1.4 model elements to test.

TODO: This needs to be updated with a version for UML 2.x.]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015f-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <LINK relation="Extension">
        <FOREIGNID name="JavaClass" mc="Infrastructure.Stereotype" uid="01ec23a8-0000-0258-0000-000000000000"/>
      </LINK>
      <COMP relation="Tag">
        <OBJECT>
          <ID name="" mc="Infrastructure.TaggedValue" uid="99e2fbed-491e-4207-92a0-48a0d8e2ca1f"/>
          <ATTRIBUTES>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Actual">
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="47257dc4-778c-4012-88a8-9230cd9545a2"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[TestCase]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
            </COMP>
            <LINK relation="Definition">
              <FOREIGNID name="JavaExtends" mc="Infrastructure.TagType" uid="003800a8-0000-0154-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Infrastructure.TaggedValue" uid="435a271d-bba5-4857-962c-77fb5aa2be97"/>
          <ATTRIBUTES>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Actual">
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="89512abc-874a-44e8-bbf0-499fd95fd221"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.util.ArrayList]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="e3e6fbf8-c2ff-46ef-8551-13c808517b9c"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.util.Arrays]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="ed90035e-16fa-46bf-a773-71a2b8749da3"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.util.Collection]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="a41dec7e-f28f-4d34-b260-353f86affaf0"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.util.List]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="cd284e65-e13a-4105-9d8e-a51de36660f5"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[junit.framework.TestCase]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
            </COMP>
            <LINK relation="Definition">
              <FOREIGNID name="JavaImport" mc="Infrastructure.TagType" uid="003800a8-0000-0155-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <COMP relation="Descriptor">
        <OBJECT>
          <ID name="" mc="Infrastructure.Note" uid="a7d2659c-6699-42cf-a579-9f1bcc8b15c0"/>
          <ATTRIBUTES>
            <ATT name="Content"><![CDATA[Test the CoreFactory interface and implementation beyond.]]></ATT>
            <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="Model">
              <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015d-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Infrastructure.Note" uid="b537b622-c340-4d47-a583-c57fcb0bdc24"/>
          <ATTRIBUTES>
            <ATT name="Content"><![CDATA[// Rights Reserved. Permission to use, copy, modify, and distribute this
// software and its documentation without fee, and without a written
// agreement is hereby granted, provided that the above copyright notice
// and this paragraph appear in all copies.  This software program and
// documentation are copyrighted by The Regents of the University of
// California. The software program and documentation are supplied "AS
// IS", without any accompanying services from The Regents. The Regents
// does not warrant that the operation of the program will be
// uninterrupted or error-free. The end-user understands that the program
// was developed for research purposes and is advised not to rely
// exclusively on the program for any reason.  IN NO EVENT SHALL THE
// UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
// SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,
// ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
// THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
// PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
// CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
// UPDATES, ENHANCEMENTS, OR MODIFICATIONS.]]></ATT>
            <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="Model">
              <FOREIGNID name="JavaTop" mc="Infrastructure.NoteType" uid="01840500-0000-a2a0-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
    </DEPENDENCIES>
  </OBJECT>
</EXT>