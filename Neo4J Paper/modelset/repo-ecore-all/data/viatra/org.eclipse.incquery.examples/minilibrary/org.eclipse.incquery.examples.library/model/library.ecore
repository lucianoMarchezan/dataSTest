<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="eiqlibrary" nsURI="http:///org/incquery/examples/library/1.0"
    nsPrefix="eiqlib">
  <eClassifiers xsi:type="ecore:EClass" name="Library">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="address" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="writers" upperBound="-1"
        eType="#//Writer" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="sumOfPages" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="EList&lt;Book> allBooks = getBooks();&#xD;&#xA;int sumOfPages = 0;&#xD;&#xA;for (Book book : allBooks) {&#xD;&#xA;  sumOfPages += book.getPages();&#xD;&#xA;}&#xD;&#xA;return sumOfPages;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="books" upperBound="-1"
        eType="#//Book" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="internalRequestCount" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        transient="true" defaultValueLiteral="1">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="suppressedGetVisibility" value="true"/>
        <details key="suppressedSetVisibility" value="true"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="requestCount" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="internalRequestCount++;&#xD;&#xA;return internalRequestCount;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="someBooks" upperBound="-1"
        eType="#//Book" changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="int count = internalRequestCount;&#xD;&#xA;java.util.List&lt;Book> someBooks = new java.util.ArrayList&lt;Book>();&#xD;&#xA;&#xD;&#xA;Book[] books = getBooks().toArray(new Book[0]);&#xD;&#xA;for (int i = 0; i &lt; books.length; i++) {&#xD;&#xA;    Book book = books[i];&#xD;&#xA;    if(i%count == 0) {&#xD;&#xA;        someBooks.add(book);&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;return org.eclipse.emf.common.util.ECollections.asEList(someBooks);"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Book">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="title" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="pages" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="category" upperBound="-1"
        eType="#//BookCategory"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="authors" upperBound="-1"
        eType="#//Writer" eOpposite="#//Writer/books"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Writer">
    <eStructuralFeatures xsi:type="ecore:EReference" name="books" upperBound="-1"
        eType="#//Book" eOpposite="#//Book/authors"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="firstBook" eType="#//Book"
        changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="EList&lt;Book> allBooks = getBooks();&#xD;&#xA;if(!allBooks.isEmpty()){&#xD;&#xA;  return allBooks.get(0);&#xD;&#xA;}&#xD;&#xA;return null;"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="scifiBooks" upperBound="-1"
        eType="#//Book" changeable="false" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="get" value="EList&lt;Book> allBooks = getBooks();&#xD;&#xA;java.util.List&lt;Book> scifiBooks = new java.util.ArrayList&lt;Book>();&#xD;&#xA;for (Book book : allBooks) {&#xD;&#xA;  if(book.getCategory().contains(org.eclipse.incquery.examples.eiqlibrary.BookCategory.SCI_FI)) {&#xD;&#xA;     scifiBooks.add(book);&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;return org.eclipse.emf.common.util.ECollections.asEList(scifiBooks);"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="BookCategory">
    <eLiterals name="Drama"/>
    <eLiterals name="History" value="1"/>
    <eLiterals name="Art" value="2"/>
    <eLiterals name="SciFi" value="3"/>
  </eClassifiers>
</ecore:EPackage>
