<?xml version="1.0" ?>
<!--GENERATED FILE, PLEASE DO NOT EDIT!!!--><EXT object="TestAll" version="4">
  <OBJECT>
    <ID name="TestAll" mc="Standard.Class" uid="c52a840e-50f3-4558-9df1-659313109daf"/>
    <PID name="testTaximoduleDriver" mc="Standard.Package" uid="39518de1-6823-45b3-9411-976d07df7999"/>
    <ATTRIBUTES>
      <ATT name="IsActive">false</ATT>
      <ATT name="IsMain">false</ATT>
      <ATT name="IsElementary">false</ATT>
      <ATT name="IsAbstract">false</ATT>
      <ATT name="IsLeaf">false</ATT>
      <ATT name="IsRoot">false</ATT>
      <ATT name="Visibility">Public</ATT>
      <ATT name="Name"><![CDATA[TestAll]]></ATT>
      <ATT name="status">1970354901745664</ATT>
    </ATTRIBUTES>
    <DEPENDENCIES>
      <COMP relation="OwnedOperation">
        <OBJECT>
          <ID name="main" mc="Standard.Operation" uid="ff92887e-b4c5-4235-a347-d0b80937727e"/>
          <ATTRIBUTES>
            <ATT name="Concurrency">false</ATT>
            <ATT name="Final">false</ATT>
            <ATT name="Passing">MethodOut</ATT>
            <ATT name="Visibility">Public</ATT>
            <ATT name="IsClass">true</ATT>
            <ATT name="IsAbstract">false</ATT>
            <ATT name="Name"><![CDATA[main]]></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="IO">
              <OBJECT>
                <ID name="args" mc="Standard.Parameter" uid="d899b73d-f9fd-4527-9bea-846f16e6ceb8"/>
                <ATTRIBUTES>
                  <ATT name="ParameterPassing">In</ATT>
                  <ATT name="MultiplicityMin"><![CDATA[0]]></ATT>
                  <ATT name="MultiplicityMax"><![CDATA[*]]></ATT>
                  <ATT name="TypeConstraint"></ATT>
                  <ATT name="DefaultValue"></ATT>
                  <ATT name="IsOrdered">false</ATT>
                  <ATT name="IsUnique">false</ATT>
                  <ATT name="IsException">false</ATT>
                  <ATT name="IsStream">false</ATT>
                  <ATT name="Effect">ReadEffect</ATT>
                  <ATT name="Name"><![CDATA[args]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <COMP relation="Tag">
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="a97d0012-62f3-4b8b-97fa-df57f273fe8a"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="54c96c1d-89b6-4d8c-8eb0-298cd2bdc4fd"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[Array]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="type" mc="Infrastructure.TagType" uid="00000000-0000-3767-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                    <OBJECT>
                      <ID name="" mc="Infrastructure.TaggedValue" uid="42c9acc7-65ee-4af9-9468-401b94c6a0f3"/>
                      <ATTRIBUTES>
                        <ATT name="Name"></ATT>
                        <ATT name="status">1970354901745664</ATT>
                      </ATTRIBUTES>
                      <DEPENDENCIES>
                        <COMP relation="Actual">
                          <OBJECT>
                            <ID name="" mc="Infrastructure.TagParameter" uid="d2ff8815-997d-4677-82cf-ac1d83012208"/>
                            <ATTRIBUTES>
                              <ATT name="Value"><![CDATA[String]]></ATT>
                              <ATT name="status">1970354901745664</ATT>
                            </ATTRIBUTES>
                            <DEPENDENCIES></DEPENDENCIES>
                          </OBJECT>
                        </COMP>
                        <LINK relation="Definition">
                          <FOREIGNID name="JavaTypeExpr" mc="Infrastructure.TagType" uid="00380080-0000-01a4-0000-000000000000"/>
                        </LINK>
                      </DEPENDENCIES>
                    </OBJECT>
                  </COMP>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
            <COMP relation="Descriptor">
              <OBJECT>
                <ID name="" mc="Infrastructure.Note" uid="429623b5-83ad-4d76-821b-c5ca09d78858"/>
                <ATTRIBUTES>
                  <ATT name="Content"><![CDATA[final int MAXPOINTS = 166;
int successful = 0;
int failed = 0;
int totalPoints = 0;
Hashtable tests = new Hashtable();
Hashtable points = new Hashtable();
System.out.println(Randomizer.num);
/* TESTS WITH ACCEPTANCE */
/* 1 */
System.out.println("**** DriverLogin ****");
try {
    tests.put("DriverLogin", new Boolean(new TestDriverLogin().test()));
    points.put("DriverLogin", new Integer(TestDriverLogin.p));
}
catch (Throwable e1) {
    tests.put("DriverLogin", new Boolean(false));
}
/* 2 */
System.out.println("**** DriverStartAlarm ****");
try {
    tests.put("DriverStartAlarm", new Boolean(new TestDriverStartAlarm().test()));
    points.put("DriverStartAlarm", new Integer(TestDriverStartAlarm.p));
}
catch (Throwable e1) {
    tests.put("DriverStartAlarm", new Boolean(false));
}
/* 3 */
System.out.println("**** DriverNewOrder ****");
try {
    tests.put("DriverNewOrder", new Boolean(new TestDriverNewOrder().test()));
    points.put("DriverNewOrder", new Integer(TestDriverNewOrder.p));
}
catch (Throwable e1) {
    tests.put("DriverNewOrder", new Boolean(false));
}
/* 4 */
System.out.println("**** DriverRequestViewDriver ****");
try {
    tests.put("DriverRequestViewDriver", new Boolean(new TestDriverRequestViewDriver().test()));
    points.put("DriverRequestViewDriver", new Integer(TestDriverRequestViewDriver.p));
}
catch (Throwable e1) {
    tests.put("DriverRequestViewDriver", new Boolean(false));
}
/* 5 */
System.out.println("**** DriverRequestZoneInfo ****");
try {
    tests.put("DriverRequestZoneInfo", new Boolean(new TestDriverRequestZoneInfo().test()));
    points.put("DriverRequestZoneInfo", new Integer(TestDriverRequestZoneInfo.p));
}
catch (Throwable e1) {
    tests.put("DriverRequestZoneInfo", new Boolean(false));
}
/* 6 */
System.out.println("**** DriverSendVoice ****");
try {
    tests.put("DriverSendVoice", new Boolean(new TestDriverSendVoice().test()));
    points.put("DriverSendVoice", new Integer(TestDriverSendVoice.p));
}
catch (Throwable e1) {
    tests.put("DriverSendVoice", new Boolean(false));
}
/* 7 */
System.out.println("**** DriverStartVoice ****");
try {
    tests.put("DriverStartVoice", new Boolean(new TestDriverStartVoice().test()));
    points.put("DriverStartVoice", new Integer(TestDriverStartVoice.p));
}
catch (Throwable e1) {
    tests.put("DriverStartVoice", new Boolean(false));
}
/* 8 */
System.out.println("**** DriverStopVoice ****");
try {
    tests.put("DriverStopVoice", new Boolean(new TestDriverStopVoice().test()));
    points.put("DriverStopVoice", new Integer(TestDriverStopVoice.p));
}
catch (Throwable e1) {
    tests.put("DriverStopVoice", new Boolean(false));
}
/* 9 */
System.out.println("**** DriverTerminateVoice ****");
try {
    tests.put("DriverTerminateVoice", new Boolean(new TestDriverTerminateVoice().test()));
    points.put("DriverTerminateVoice", new Integer(TestDriverTerminateVoice.p));
}
catch (Throwable e1) {
    tests.put("DriverTerminateVoice", new Boolean(false));
}
/* 10 */
System.out.println("**** DriverVoiceMessage ****");
try {
    tests.put("DriverVoiceMessage", new Boolean(new TestDriverVoiceMessage().test()));
    points.put("DriverVoiceMessage", new Integer(TestDriverVoiceMessage.p));
}
catch (Throwable e1) {
    tests.put("DriverVoiceMessage", new Boolean(false));
}
/* ******************* */
/* TESTS WITH REJECTANCE */
/* 11 */
System.out.println("**** DriverLogin2 ****");
try {
    tests.put("DriverLogin2", new Boolean(new TestDriverLogin2().test()));
    points.put("DriverLogin2", new Integer(TestDriverLogin2.p));
}
catch (Throwable e1) {
    tests.put("DriverLogin2", new Boolean(false));
}
/* 23 */
System.out.println("**** DriverNewOrder2 ****");
try {
    tests.put("DriverNewOrder2", new Boolean(new TestDriverNewOrder2().test()));
    points.put("DriverNewOrder2", new Integer(TestDriverNewOrder2.p));
}
catch (Throwable e1) {
    tests.put("DriverNewOrder", new Boolean(false));
}
/* 12 */
System.out.println("**** DriverStartVoice2 ****");
try {
    tests.put("DriverStartVoice2", new Boolean(new TestDriverStartVoice2().test()));
    points.put("DriverStartVoice2", new Integer(TestDriverStartVoice2.p));
}
catch (Throwable e1) {
    tests.put("DriverStartVoice2", new Boolean(false));
}
/* ******************* */
/* TESTS WITH SIGNALS INITIATED BY CENTRAL */
/* 13 */
System.out.println("**** ComLinkNewOrder ****");
try {
    tests.put("ComLinkNewOrder", new Boolean(new TestComLinkNewOrder().test()));
    points.put("ComLinkNewOrder", new Integer(TestComLinkNewOrder.p));
}
catch (Throwable e1) {
    tests.put("ComLinkNewOrder", new Boolean(false));
}
/* 14 */
System.out.println("**** ComLinkStartVoice ****");
try {
    tests.put("ComLinkStartVoice", new Boolean(new TestComLinkStartVoice().test()));
    points.put("ComLinkStartVoice", new Integer(TestComLinkStartVoice.p));
}
catch (Throwable e1) {
    tests.put("ComLinkStartVoice", new Boolean(false));
}
/* 15 */
System.out.println("**** ComLinkSendVoice ****");
try {
    tests.put("ComLinkSendVoice", new Boolean(new TestComLinkSendVoice().test()));
    points.put("ComLinkSendVoice", new Integer(TestComLinkSendVoice.p));
}
catch (Throwable e1) {
    tests.put("ComLinkSendVoice", new Boolean(false));
}
/* 16 */
System.out.println("**** ComLinkStopVoice ****");
try {
    tests.put("ComLinkStopVoice", new Boolean(new TestComLinkStopVoice().test()));
    points.put("ComLinkStopVoice", new Integer(TestComLinkStopVoice.p));
}
catch (Throwable e1) {
    tests.put("ComLinkStopVoice", new Boolean(false));
}
/* 17 */
System.out.println("**** ComLinkTerminateVoice ****");
try {
    tests.put("ComLinkTerminateVoice", new Boolean(new TestComLinkTerminateVoice().test()));
    points.put("ComLinkTerminateVoice", new Integer(TestComLinkTerminateVoice.p));
}
catch (Throwable e1) {
    tests.put("ComLinkTerminateVoice", new Boolean(false));
}
/* 18 */
System.out.println("**** ComLinkVoiceMessage ****");
try {
    tests.put("ComLinkVoiceMessage", new Boolean(new TestComLinkVoiceMessage().test()));
    points.put("ComLinkVoiceMessage", new Integer(TestComLinkVoiceMessage.p));
}
catch (Throwable e1) {
    tests.put("ComLinkVoiceMessage", new Boolean(false));
}
/* ******************* */
/* TESTS WITH SIGNALS INITIATED BY CENTRAL REFUSED BY DRIVER */
/* 19 */
System.out.println("**** ComLinkNewOrder2 ****");
try {
    tests.put("ComLinkNewOrder2", new Boolean(new TestComLinkNewOrder2().test()));
    points.put("ComLinkNewOrder2", new Integer(TestComLinkNewOrder2.p));
}
catch (Throwable e1) {
    tests.put("ComLinkNewOrder2", new Boolean(false));
}
/* 20 */
System.out.println("**** ComLinkSendVoice2 ****");
try {
    tests.put("ComLinkSendVoice2", new Boolean(new TestComLinkSendVoice2().test()));
    points.put("ComLinkSendVoice2", new Integer(TestComLinkSendVoice2.p));
}
catch (Throwable e1) {
    tests.put("ComLinkSendVoice2", new Boolean(false));
}
/* 21 */
System.out.println("**** ComLinkStartVoice2 ****");
try {
    tests.put("ComLinkStartVoice2", new Boolean(new TestComLinkStartVoice2().test()));
    points.put("ComLinkStartVoice2", new Integer(TestComLinkStartVoice2.p));
}
catch (Throwable e1) {
    tests.put("ComLinkStartVoice2", new Boolean(false));
}
/* 22 */
System.out.println("**** ComLinkStopVoice2 ****");
try {
    tests.put("ComLinkStopVoice2", new Boolean(new TestComLinkStopVoice2().test()));
    points.put("ComLinkStopVoice2", new Integer(TestComLinkStopVoice2.p));
}
catch (Throwable e1) {
    tests.put("ComLinkStopVoice2", new Boolean(false));
}
/* ******************* */
System.out.println(Randomizer.num);
Enumeration keys = tests.keys();
String s = null;
String result = "********** RESULT **********\n\n";
while (keys.hasMoreElements()) {
    s = (String) keys.nextElement();
    if (((Boolean) tests.get(s)).equals(new Boolean(true))) {
        totalPoints += ((Integer) points.get(s)).intValue();
        successful++;
        System.out.println(s + " succesful");
        result += s + " succesful\n";
    }
    else {
        failed++;
        System.out.println(s + " failed");
        result += s + " failed\n";
    }
}
System.out.println("--------------------------------\n" + successful + " Tests ok\n" + failed + " Tests failed"
                    + "\n\nPoints: " + totalPoints + " / " + MAXPOINTS);
result += "--------------------------------\n" + successful + " Tests ok\n" + failed + " Tests failed"
            + "\n\nPoints: " + totalPoints + " / " + MAXPOINTS;
//write results to file
File out = new File("results.txt");
BufferedWriter bw;
try {
    bw = new BufferedWriter(new FileWriter(out));
    bw.write(result);
    bw.close();
}
catch (IOException e) {
    // TODO Auto-generated catch block
    e.printStackTrace();
}
System.exit(0);
]]></ATT>
                  <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
                  <ATT name="Name"></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES>
                  <LINK relation="Model">
                    <FOREIGNID name="JavaCode" mc="Infrastructure.NoteType" uid="003800a8-0000-018e-0000-000000000000"/>
                  </LINK>
                </DEPENDENCIES>
              </OBJECT>
            </COMP>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <COMP relation="OwnedImport">
        <OBJECT>
          <ID name="" mc="Standard.ElementImport" uid="c3eeed42-bc3f-457c-97cf-a87de0c2ad81"/>
          <ATTRIBUTES>
            <ATT name="Visibility">Private</ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="ImportedElement">
              <ID name="Randomizer" mc="Standard.Class" uid="eaa8424e-27c5-4fb0-a668-3e7cc4528063"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <LINK relation="Extension">
        <FOREIGNID name="JavaClass" mc="Infrastructure.Stereotype" uid="01ec23a8-0000-0258-0000-000000000000"/>
      </LINK>
      <COMP relation="Tag">
        <OBJECT>
          <ID name="" mc="Infrastructure.TaggedValue" uid="5ff80fa3-7100-4288-9d68-75d85f1b1ed0"/>
          <ATTRIBUTES>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <COMP relation="Actual">
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="6dd1f58c-b955-44a2-855a-111bf91490f2"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.io.BufferedWriter]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="8db59579-6927-4f53-a39f-339b3957210e"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.io.File]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="71b95e0e-f030-485b-b1df-62aeb93542bf"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.io.FileWriter]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="81cd3976-b5a9-4c8a-bd2b-a3088c1c3bd2"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.io.IOException]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="7b6bfa94-20fd-4a6b-9b08-b059f28fabf1"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.util.Enumeration]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
              <OBJECT>
                <ID name="" mc="Infrastructure.TagParameter" uid="ad46d7e9-6b4f-4e70-8e25-b5549acff297"/>
                <ATTRIBUTES>
                  <ATT name="Value"><![CDATA[java.util.Hashtable]]></ATT>
                  <ATT name="status">1970354901745664</ATT>
                </ATTRIBUTES>
                <DEPENDENCIES></DEPENDENCIES>
              </OBJECT>
            </COMP>
            <LINK relation="Definition">
              <FOREIGNID name="JavaImport" mc="Infrastructure.TagType" uid="003800a8-0000-0155-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
      <COMP relation="Descriptor">
        <OBJECT>
          <ID name="" mc="Infrastructure.Note" uid="2f9b9855-102d-4863-b6d0-07d629d6fac9"/>
          <ATTRIBUTES>
            <ATT name="Content"><![CDATA[@author Thomas Misar e0025068@stud3.tuwien.ac.at]]></ATT>
            <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="Model">
              <FOREIGNID name="Javadoc" mc="Infrastructure.NoteType" uid="003800a8-0000-015d-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
        <OBJECT>
          <ID name="" mc="Infrastructure.Note" uid="c57cdd83-18ce-4a77-8711-96c367be4c66"/>
          <ATTRIBUTES>
            <ATT name="Content"><![CDATA[/*
 * Created on 01.09.2004
 */]]></ATT>
            <ATT name="MimeType"><![CDATA[text/plain]]></ATT>
            <ATT name="Name"></ATT>
            <ATT name="status">1970354901745664</ATT>
          </ATTRIBUTES>
          <DEPENDENCIES>
            <LINK relation="Model">
              <FOREIGNID name="JavaTop" mc="Infrastructure.NoteType" uid="01840500-0000-a2a0-0000-000000000000"/>
            </LINK>
          </DEPENDENCIES>
        </OBJECT>
      </COMP>
    </DEPENDENCIES>
  </OBJECT>
</EXT>