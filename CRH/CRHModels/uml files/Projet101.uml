<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xmi:id="_d9DocPZKEeS1bO4bMzbjfg" name="model">
  <packagedElement xmi:type="uml:Model" xmi:id="_0fON0PZKEeS1bO4bMzbjfg" name="generated"/>
  <packagedElement xmi:type="uml:Model" xmi:id="_0fiW4PZKEeS1bO4bMzbjfg" name="diagramdrawer">
    <packagedElement xmi:type="uml:Package" xmi:id="_0fi98PZKEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_0fi98fZKEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_0fi98vZKEeS1bO4bMzbjfg" name="papyrus">
          <packagedElement xmi:type="uml:Package" xmi:id="_0fjlAPZKEeS1bO4bMzbjfg" name="diagramdrawer">
            <packagedElement xmi:type="uml:Package" xmi:id="_0fjlAfZKEeS1bO4bMzbjfg" name="helpers">
              <packagedElement xmi:type="uml:Class" xmi:id="_0fkMEPZKEeS1bO4bMzbjfg" name="UmlModelHelper" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_0fkzIPZKEeS1bO4bMzbjfg">
                  <body>
 * Provides methods useful to modify a model.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_0fwZUPZKEeS1bO4bMzbjfg" name="model" visibility="private" type="_0fvyQPZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_0fxAYPZKEeS1bO4bMzbjfg">
                    <body>
	 * The UML model.
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_0f6xYPZKEeS1bO4bMzbjfg" name="delete" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_0f7YcPZKEeS1bO4bMzbjfg">
                    <body>
	 * Deletes an element on the model referenced of this helper.
	 * 
	 * @param element
	 *            the element to delete
	 * 
	 * @throws NotFoundException
	 *             if the element cannot be found
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_0f7_gPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_4sUgYPZKEeS1bO4bMzbjfg" name="handlers">
              <packagedElement xmi:type="uml:Class" xmi:id="_4sW8oPZKEeS1bO4bMzbjfg" name="DefaultDiagramHandler" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_4sYKwPZKEeS1bO4bMzbjfg">
                  <body>
 * Drawer used to handle elements on a diagram.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_4tNRMfZKEeS1bO4bMzbjfg" name="DEFAULT_LOCATION" visibility="protected" type="_4tNRMPZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tN4QPZKEeS1bO4bMzbjfg">
                    <body>
	 * Default location to display element without location.
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_4tOfUPZKEeS1bO4bMzbjfg" name="model" visibility="protected" type="_0fvyQPZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tOfUfZKEeS1bO4bMzbjfg">
                    <body>
	 * The diagram model.
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_4tQ7kfZKEeS1bO4bMzbjfg" name="diagrameditPart" visibility="protected" type="_4tQ7kPZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tRioPZKEeS1bO4bMzbjfg">
                    <body>
	 * the Diagram Edit Part that is handled.
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_4tTX0PZKEeS1bO4bMzbjfg" name="ted" visibility="protected" type="_4tSwwvZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tT-4PZKEeS1bO4bMzbjfg">
                    <body>
	 * Transactional editing domain.
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_4tLcAPZKEeS1bO4bMzbjfg" name="DefaultDiagramHandler implements IDiagramHandler" client="_4sW8oPZKEeS1bO4bMzbjfg" supplier="_4sYx0PZKEeS1bO4bMzbjfg" contract="_4sYx0PZKEeS1bO4bMzbjfg"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tVNAPZKEeS1bO4bMzbjfg" name="draw" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tVNAfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#draw(org.eclipse.uml2.uml.Element, boolean)
	 *
	 * @param element
	 * @param cascade
	 * @return
	 * @throws TargetOrSourceNotDrawnException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tWbIPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tWbIfZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tXCMPZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tXpQPZKEeS1bO4bMzbjfg" name="draw" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tXpQfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#draw(org.eclipse.uml2.uml.Element, org.eclipse.draw2d.geometry.Point, boolean)
	 *
	 * @param element
	 * @param location
	 * @param cascade
	 * @return
	 * @throws NotAValidLocationException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tYQUPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tY3YPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tY3YfZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tZecPZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4taFgPZKEeS1bO4bMzbjfg" name="drawElementInside" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4taFgfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#drawElementInside(org.eclipse.gmf.runtime.notation.View, org.eclipse.uml2.uml.Element, boolean)
	 *
	 * @param container
	 * @param element
	 * @param cascade
	 * @return
	 * @throws InvalidContainerException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4taskPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4taskfZKEeS1bO4bMzbjfg" name="container" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tbToPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tb6sPZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tchwPZKEeS1bO4bMzbjfg" name="drawElementInsideAtLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tchwfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#drawElementInsideAtLocation(org.eclipse.gmf.runtime.notation.View, org.eclipse.uml2.uml.Element, org.eclipse.draw2d.geometry.Point, boolean)
	 *
	 * @param container
	 * @param element
	 * @param location
	 * @param cascade
	 * @return
	 * @throws InvalidContainerException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tchwvZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tdI0PZKEeS1bO4bMzbjfg" name="container" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tdv4PZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tdv4fZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4teW8PZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4te-APZKEeS1bO4bMzbjfg" name="drawElementInside" visibility="private">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4te-AfZKEeS1bO4bMzbjfg">
                    <body>
	 * Draws the view of the element inside a view at a given location.
	 * The view must be a valid location for the element which means that the view must be a parent representation of the element.
	 * Otherwise, an exception is thrown.
	 * @param container The view n which the element will be drawn
	 * @param element The element to be drawn in the view
	 * @param location the location in the container
	 * @param cascade True if all contents in the element must be drawn in the same time, False in the other case
	 * @throws InvalidContainerException if the element cannot be placed inside the container or the container does not exists
	 * @return A view representing the drawn element
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tflEPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tflEfZKEeS1bO4bMzbjfg" name="container" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tgMIPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tgzMPZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4thaQPZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tiBUPZKEeS1bO4bMzbjfg" name="drawAll" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tiBUfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#drawAll(java.util.List, java.util.List, boolean)
	 *
	 * @param elements
	 * @param locations
	 * @param cascade
	 * @return
	 * @throws IllegalArgumentException
	 * @throws NotAValidLocationException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tioYPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4tioYfZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4tjPcPZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tjPcfZKEeS1bO4bMzbjfg" name="elements" type="_0fzcofZKEeS1bO4bMzbjfg">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4tkdkPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4tkdkfZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tkdkvZKEeS1bO4bMzbjfg" name="locations" type="_4tNRMPZKEeS1bO4bMzbjfg">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4tlEoPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4tlEofZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tlrsPZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tmSwPZKEeS1bO4bMzbjfg" name="autoSize" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tmSwfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#autoSize(org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param view
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tmSwvZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tm50PZKEeS1bO4bMzbjfg" name="delete" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tm50fZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#delete(org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param view
	 * @throws NonExistantViewException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tng4PZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4toH8PZKEeS1bO4bMzbjfg" name="getViewByElement" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4toH8fZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getViewByElement(org.eclipse.uml2.uml.Element)
	 *
	 * @param element
	 * @return
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tovAPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4tovAfZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4tovAvZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tpWEPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tqkMPZKEeS1bO4bMzbjfg" name="getElementViewByName" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tqkMfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getElementViewByName(java.lang.String)
	 *
	 * @param name
	 * @return
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4trLQPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4trLQfZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4tryUPZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tryUfZKEeS1bO4bMzbjfg" name="name" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tsZYPZKEeS1bO4bMzbjfg" name="getElementByName" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tsZYfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getElementByName(java.lang.String)
	 *
	 * @param name
	 * @return
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4ttAcPZKEeS1bO4bMzbjfg" type="_0fzcofZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4ttngPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4ttngfZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4ttngvZKEeS1bO4bMzbjfg" name="name" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tuOkPZKEeS1bO4bMzbjfg" name="getLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tuOkfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getLocation(org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param view
	 * @return
	 * @throws LocationNotFoundException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tu1oPZKEeS1bO4bMzbjfg" type="_4tNRMPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tvcsPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tvcsfZKEeS1bO4bMzbjfg" name="setLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4twDwPZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#setLocation(org.eclipse.gmf.runtime.notation.View, org.eclipse.draw2d.geometry.Point)
	 *
	 * @param view
	 * @param location
	 * @throws UnmovableViewException
	 * @throws NotAValidLocationException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4twDwfZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4twq0PZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4txR4fZKEeS1bO4bMzbjfg" name="setAbscisse" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4txR4vZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#setAbscisse(org.eclipse.gmf.runtime.notation.View, int)
	 *
	 * @param view
	 * @param location
	 * @throws UnmovableViewException
	 * @throws NotAValidLocationException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tx48PZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tygAPZKEeS1bO4bMzbjfg" name="location" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tygAfZKEeS1bO4bMzbjfg" name="setOrdonnee" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4tygAvZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#setOrdonnee(org.eclipse.gmf.runtime.notation.View, int)
	 *
	 * @param view
	 * @param location
	 * @throws UnmovableViewException
	 * @throws NotAValidLocationException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tzHEPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4tzuIPZKEeS1bO4bMzbjfg" name="location" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4tzuIfZKEeS1bO4bMzbjfg" name="getWidth" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t0VMPZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getWidth(org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param view
	 * @return
	 * @throws NotDimensionedViewException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t0VMfZKEeS1bO4bMzbjfg" type="_4txR4PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t08QPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4t1jUPZKEeS1bO4bMzbjfg" name="getHeight" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t1jUfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getHeight(org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param view
	 * @return
	 * @throws NotDimensionedViewException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t2KYPZKEeS1bO4bMzbjfg" type="_4txR4PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t2xcPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4t3YgPZKEeS1bO4bMzbjfg" name="setHeight" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t3YgfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#setHeight(org.eclipse.gmf.runtime.notation.View, int)
	 *
	 * @param view
	 * @param newheight
	 * @throws NotResizableViewException
	 * @throws NotAValidSizeException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t3_kPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t4moPZKEeS1bO4bMzbjfg" name="newheight" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4t5NsPZKEeS1bO4bMzbjfg" name="setWidth" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t5NsfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#setWidth(org.eclipse.gmf.runtime.notation.View, int)
	 *
	 * @param view
	 * @param newwidth
	 * @throws NotResizableViewException
	 * @throws NotAValidSizeException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t50wPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t6b0PZKEeS1bO4bMzbjfg" name="newwidth" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4t7C4PZKEeS1bO4bMzbjfg" name="getSourceEdgeLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t7C4fZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getSourceEdgeLocation(org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param view
	 * @return
	 * @throws NotAnEdgeException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t7p8fZKEeS1bO4bMzbjfg" type="_4t7p8PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t8RAPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4t8RAfZKEeS1bO4bMzbjfg" name="getTargetEdgeLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t8RAvZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getTargetEdgeLocation(org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param view
	 * @return
	 * @throws NotAnEdgeException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t84EPZKEeS1bO4bMzbjfg" type="_4t7p8PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t9fIPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4t9fIfZKEeS1bO4bMzbjfg" name="setEdgeLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t-GMPZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#setEdgeLocation(org.eclipse.gmf.runtime.notation.View, org.eclipse.draw2d.geometry.PrecisionPoint, org.eclipse.draw2d.geometry.PrecisionPoint)
	 *
	 * @param view
	 * @param location_source
	 * @param location_target
	 * @throws NotAnEdgeException
	 * @throws NotAValidLocationException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t-GMfZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t-tQPZKEeS1bO4bMzbjfg" name="location_source" type="_4t7p8PZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t-tQfZKEeS1bO4bMzbjfg" name="location_target" type="_4t7p8PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4t_UUPZKEeS1bO4bMzbjfg" name="reconnectEdge" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4t_UUfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#reconnectEdge(org.eclipse.gmf.runtime.notation.View, org.eclipse.gmf.runtime.notation.View, org.eclipse.gmf.runtime.notation.View)
	 *
	 * @param Vedge
	 * @param Vsource
	 * @param Vtarget
	 * @throws NotAnEdgeException
	 * @throws ExecutionException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4t_7YPZKEeS1bO4bMzbjfg" name="Vedge" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uAicPZKEeS1bO4bMzbjfg" name="Vsource" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uAicfZKEeS1bO4bMzbjfg" name="Vtarget" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uBJgPZKEeS1bO4bMzbjfg" name="getModel" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uBJgfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getModel()
	 *
	 * @return
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uBwkPZKEeS1bO4bMzbjfg" type="_0fvyQPZKEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uBwkfZKEeS1bO4bMzbjfg" name="getDefaultLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uBwkvZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#getDefaultLocation()
	 *
	 * @return
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uCXoPZKEeS1bO4bMzbjfg" type="_4tNRMPZKEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uC-sPZKEeS1bO4bMzbjfg" name="setDefaultLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uC-sfZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#setDefaultLocation(org.eclipse.draw2d.geometry.Point)
	 *
	 * @param location
	 * @throws NotAValidLocationException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uDlwPZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uDlwfZKEeS1bO4bMzbjfg" name="isDrawn" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uEM0PZKEeS1bO4bMzbjfg">
                    <body>
	 * 
	 * @see org.eclipse.papyrus.diagramdrawer.handlers.IDiagramHandler#isDrawn(org.eclipse.uml2.uml.Element)
	 *
	 * @param element
	 * @return
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uEM0fZKEeS1bO4bMzbjfg" type="_4tUl8fZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uEz4PZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uFa8PZKEeS1bO4bMzbjfg" name="getElementByName" visibility="private">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uFa8fZKEeS1bO4bMzbjfg">
                    <body>
	 * Return all elements named by a specific name and contained in an element father.
	 * 
	 * @param name the name of elements searched
	 * @param elem the element father
	 * @return a list of element named &quot;name&quot;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uGCAPZKEeS1bO4bMzbjfg" type="_0fzcofZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4uGCAfZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4uGCAvZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uGpEPZKEeS1bO4bMzbjfg" name="name" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uGpEfZKEeS1bO4bMzbjfg" name="elem" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uHQIPZKEeS1bO4bMzbjfg" name="simpleDraw" visibility="private">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uH3MPZKEeS1bO4bMzbjfg">
                    <body>
	 * Draw an element at a specific location in a view father.
	 * 
	 * @param element the element to draw
	 * @param location the location of the element
	 * @param father the view father (or null if the element hasn't father)
	 * @return the view created
	 * @throws NonExistantViewException if the view doesn't exist
	 * @throws NotAValidLocationException if the location is not valid
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uH3MfZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uIeQPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uIeQfZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uJFUPZKEeS1bO4bMzbjfg" name="father" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uJsYPZKEeS1bO4bMzbjfg" name="getElementViewByName" visibility="private">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uJsYfZKEeS1bO4bMzbjfg">
                    <body>
	 * Return all view which contains an element named by a specific name
	 * and contained in an element father.
	 * 
	 * @param name the name of elements searched
	 * @param elem the element father
	 * @return a list of element named &quot;name&quot;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uKTcPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4uKTcfZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4uKTcvZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uK6gPZKEeS1bO4bMzbjfg" name="name" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uK6gfZKEeS1bO4bMzbjfg" name="elem" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uLhkPZKEeS1bO4bMzbjfg" name="viewToEditParts" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uMIoPZKEeS1bO4bMzbjfg">
                    <body>
	 * Convert a view to their EditParts.
	 * 
	 * @param view the view to convert
	 * @return EditParts associated to the view
	 * @throws NonExistantViewException if the view doesn't exist
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uN90fZKEeS1bO4bMzbjfg" type="_4uN90PZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4uOk4PZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4uOk4fZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uPL8PZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4uPzAPZKEeS1bO4bMzbjfg" name="isValidLocation" visibility="private">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4uQaEPZKEeS1bO4bMzbjfg">
                    <body>
	 * Check if the location is valid.
	 * A location is valid if x and y are positives.
	 * @param location the location to check.
	 * @return True | False
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uQaEfZKEeS1bO4bMzbjfg" type="_4tUl8fZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4uRBIPZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4u4sMPZKEeS1bO4bMzbjfg" name="autoSize"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4u-LwPZKEeS1bO4bMzbjfg" name="autoSize">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4u-y0PZKEeS1bO4bMzbjfg">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4u_Z4PZKEeS1bO4bMzbjfg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4u_Z4fZKEeS1bO4bMzbjfg" value="1"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4vAoAPZKEeS1bO4bMzbjfg" name="autoSize">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vBPEPZKEeS1bO4bMzbjfg" name="v">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vB2IPZKEeS1bO4bMzbjfg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vB2IfZKEeS1bO4bMzbjfg" value="1"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4vDEQPZKEeS1bO4bMzbjfg" name="autoSize">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vDrUPZKEeS1bO4bMzbjfg" name="v" type="_4tV0EPZKEeS1bO4bMzbjfg">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4vESYPZKEeS1bO4bMzbjfg" value="1"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4vESYfZKEeS1bO4bMzbjfg" value="1"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_4sYx0PZKEeS1bO4bMzbjfg" name="IDiagramHandler" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_4uo0kPZKEeS1bO4bMzbjfg">
                  <body>
 * Provides methods to draw elements inside a diagram.
 * A diagram handler is meant to handle one diagram.
 * Every view in the diagram can be also manipulated by resizing or relocating them.
 * @author Allan RAKOTOARIVONY
 * @author Thibaud VERBAERE
 * 
 * @version 1.8
 *
 </body>
                </ownedComment>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4upboPZKEeS1bO4bMzbjfg" name="autoSize" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4upbofZKEeS1bO4bMzbjfg">
                    <body>
		 * Sets the size of the view v to the maximum size of its contents.
		 * @param v the view
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4u9ksPZKEeS1bO4bMzbjfg" name="v" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4vFggPZKEeS1bO4bMzbjfg" name="draw" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4vFggfZKEeS1bO4bMzbjfg">
                    <body>
		 * Draws the requested element into the handled diagram.
		 * If the element is an inner element (for example properties inside a class),
		 * it will be automatically placed inside the view of its parent if it exists in the diagram.
		 * If it does not exist, it will be created.
		 * If the element is not an inner element, it will be automatically placed next to the last not inner element drawn.
		 * @param element The element to be drawn on the handled diagram
		 * @param cascade True if all contents in the element must be drawn in the same time, False in the other case
		 * @return A View representing the element in the diagram
		 * @throws TargetOrSourceNotDrawnException if the element to draw is a relationship and the source or the target element is not drawn
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vH8wPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vLAEPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vODYPZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4vRGsPZKEeS1bO4bMzbjfg" name="draw" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4vRGsfZKEeS1bO4bMzbjfg">
                    <body>
		 * Draws the requested element into the handled diagram at the given position.
		 * If the element is an inner element (for example properties inside a class),the location will be ignored and
		 * it will be automatically placed inside the view of its parent if it exists in the diagram.
		 * If it does not exist, it will be created.
		 * If the element is not an inner element, it will be placed to the requested position if it is free.
		 * If not an exception is thrown.
		 * @param element The element to be drawn on the handled diagram
		 * @param location The location of the element
		 * @param cascade True if all contents in the element must be drawn in the same time, False in the other case
		 * @return A view representing the drawn element
		 * @throws NotAValidLocationException 
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vTi8PZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vXNUPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vaQoPZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vd7APZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4vizgPZKEeS1bO4bMzbjfg" name="drawElementInside" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4vizgfZKEeS1bO4bMzbjfg">
                    <body>
		 * Draws the view of the element inside a view.
		 * The view must be a valid location for the element which means that the view must be a parent representation of the element.
		 * Otherwise, an exception is thrown.
		 * @param container The view n which the element will be drawn
		 * @param element The element to be drawn in the view
		 * @param cascade True if all contents in the element must be drawn in the same time, False in the other case
		 * @throws InvalidContainerException if the element cannot be placed inside the container or the container does not exists
		 * @return A view representing the drawn element
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vl20PZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vphMPZKEeS1bO4bMzbjfg" name="container" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vtLkPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4vw18PZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4v0gUPZKEeS1bO4bMzbjfg" name="drawElementInsideAtLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4v0gUfZKEeS1bO4bMzbjfg">
                    <body>
		 * Draws the view of the element inside a view at a given location.
		 * The view must be a valid location for the element which means that the view must be a parent representation of the element.
		 * Otherwise, an exception is thrown.
		 * @param container The view n which the element will be drawn
		 * @param element The element to be drawn in the view
		 * @param location the location in the container
		 * @param cascade True if all contents in the element must be drawn in the same time, False in the other case
		 * @throws InvalidContainerException if the element cannot be placed inside the container or the container does not exists
		 * @return A view representing the drawn element
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4v3joPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4v6m8PZKEeS1bO4bMzbjfg" name="container" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4v-RUPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wBUoPZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wE_APZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4wJQcPZKEeS1bO4bMzbjfg" name="drawAll" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4wJ3gPZKEeS1bO4bMzbjfg">
                    <body>
		 * Draws all elements at their locations.
		 * If an view of an element overlaps the location of another view, it will not be drawn.
		 * @param elements A list of elements to be drawn
		 * @param locations A list of location corresponding to the elements
		 * @param cascade True if all contents in the element must be drawn in the same time, False in the other case
		 * @throws IllegalArgumentException If the number of locations is smaller than the  number of elements
		 * @throws NotAValidLocationException If the location is not valid 
		 * @return A list of the drawn views
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wMTwPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4wOwAPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4wP-IPZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wRMQPZKEeS1bO4bMzbjfg" name="elements" type="_0fzcofZKEeS1bO4bMzbjfg">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4wTogPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4wU2oPZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wWEwPZKEeS1bO4bMzbjfg" name="locations" type="_4tNRMPZKEeS1bO4bMzbjfg">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4wYhAPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4wZvIPZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wa9QPZKEeS1bO4bMzbjfg" name="cascade" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4wenoPZKEeS1bO4bMzbjfg" name="delete" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4wenofZKEeS1bO4bMzbjfg">
                    <body>
		 * Deletes the view in the handled diagram.
		 * An exception is thrown if the view does not exists or cannot be deleted.
		 * @param view The view to delete from the handled diagram
		 * @throws NonExistantViewException If the view does not exists
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4whD4PZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4wjgIPZKEeS1bO4bMzbjfg" name="getViewByElement" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4wjgIfZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns a list of all views representing the element given as parameter.
		 * @param element The element which we want to get the views
		 * @return A list of views.
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wlVUPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4woYoPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4wpmwPZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wrb8PZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4wvtYPZKEeS1bO4bMzbjfg" name="getLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4wvtYfZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns the location of a view inside the handled diagram.
		 * @param view the view which we want to get the location
		 * @return A point representing the coordinate of the upper left-most point of the view
		 * @throws LocationNotFoundException If the view has no location or doesn't exist.
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4wyJoPZKEeS1bO4bMzbjfg" type="_4tNRMPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4w10APZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4w6FcPZKEeS1bO4bMzbjfg" name="setLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4w6FcfZKEeS1bO4bMzbjfg">
                    <body>
		 * Moves the view to the given location. The upper left-most point of the view is placed to the location given in parameter.
		 * @param view The view to move
		 * @param location The location where the view will be moved
		 * @throws UnmovableViewException If the view cannot be moved
		 * @throws NotAValidLocationException If the location is not valid 
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4w9v0PZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xCBQPZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4xG5wPZKEeS1bO4bMzbjfg" name="setYLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4xG5wfZKEeS1bO4bMzbjfg">
                    <body>
		 * Change the ordonnee of the view given in parameter.
		 * @param view The view to move
		 * @param location the new ordonnee
		 * @throws UnmovableViewException If the view cannot be moved
		 * @throws NotAValidLocationException If the location is not valid 
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xJ9EPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xO1kPZKEeS1bO4bMzbjfg" name="location" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4xTuEPZKEeS1bO4bMzbjfg" name="setXLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4xTuEfZKEeS1bO4bMzbjfg">
                    <body>
		 * 
		 * Change the abscisse of the view given in parameter.
		 * @param view The view to move
		 * @param location the new abscisse
		 * @throws UnmovableViewException If the view cannot be moved
		 * @throws NotAValidLocationException If the location is not valid 
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xWxYPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xbC0PZKEeS1bO4bMzbjfg" name="location" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4xetMPZKEeS1bO4bMzbjfg" name="getElementViewByName" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4xetMfZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns a list of all views representing the element which name is given as parameter.
		 * @param name The name of the element which we want to get the views
		 * @return A list of views.
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xhwgPZKEeS1bO4bMzbjfg" type="_4tV0EPZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4xkMwPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4xkz0PZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xla4PZKEeS1bO4bMzbjfg" name="name" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4xn3IPZKEeS1bO4bMzbjfg" name="getElementByName" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4xn3IfZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns a list of all elements representing in UML model the element which name is given as parameter.
		 * @param name The name of the element which we want to get the UML representation.
		 * @return A list of element.
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xpsUPZKEeS1bO4bMzbjfg" type="_0fzcofZKEeS1bO4bMzbjfg" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_4xsIkPZKEeS1bO4bMzbjfg"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_4xsvoPZKEeS1bO4bMzbjfg" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xt9wPZKEeS1bO4bMzbjfg" name="name" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4xvy8PZKEeS1bO4bMzbjfg" name="getWidth" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4xwaAPZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns the width of a view given as parameter.
		 * @param view the view which we want to get his width
		 * @return the width of the view
		 * @throws NotDimensionedViewException if the view hasn't dimensions
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4xxoIPZKEeS1bO4bMzbjfg" type="_4txR4PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4x0EYPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4x2goPZKEeS1bO4bMzbjfg" name="getHeight" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4x2gofZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns the height of a view given as parameter.
		 * @param view the view which we want to get his height
		 * @return the height of the view
		 * @throws NotDimensionedViewException if the view hasn't dimensions
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4x4V0PZKEeS1bO4bMzbjfg" type="_4txR4PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4x8AMPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4x_qkPZKEeS1bO4bMzbjfg" name="setHeight" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4yARoPZKEeS1bO4bMzbjfg">
                    <body>
		 * Changes the height of a view given as parameter.
		 * @param view the view which we want to change his height
		 * @param newheight the newest value of the height
		 * @throws NotResizableViewException if the view hasn't dimensions
		 * @throws NotAValidSizeException if the height is not valid
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yDU8PZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yGYQPZKEeS1bO4bMzbjfg" name="newheight" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4yJbkPZKEeS1bO4bMzbjfg" name="setWidth" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4yJbkfZKEeS1bO4bMzbjfg">
                    <body>
		 * Changes the width of a view given as parameter.
		 * @param view the view which we want to change his width
		 * @param newheight the newest value of the width
		 * @throws NotResizableViewException if the view hasn't dimensions
		 * @throws NotAValidSizeException if the width is not valid
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yLQwPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yOUEPZKEeS1bO4bMzbjfg" name="newwidth" type="_4txR4PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4yRXYPZKEeS1bO4bMzbjfg" name="getModel" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4yRXYfZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns the model of the diagram.
		 * @return the model.
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yTMkPZKEeS1bO4bMzbjfg" type="_0fvyQPZKEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4yVo0PZKEeS1bO4bMzbjfg" name="setDefaultLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4yWP4PZKEeS1bO4bMzbjfg">
                    <body>
		 * Changes the default location to display element.
		 * @param location the new default location
		 * @throws NotAValidLocationException if the location is not valid
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yYFEPZKEeS1bO4bMzbjfg" name="location" type="_4tNRMPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4yahUPZKEeS1bO4bMzbjfg" name="getDefaultLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4yahUfZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns the default location to display element.
		 * @return the location
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4ycWgPZKEeS1bO4bMzbjfg" type="_4tNRMPZKEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4yeLsPZKEeS1bO4bMzbjfg" name="isDrawn" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4yeywPZKEeS1bO4bMzbjfg">
                    <body>
		 * Checks if an element is drawn on the diagram.
		 * @param element the element
		 * @return True or False if the element is drawn
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4ygA4PZKEeS1bO4bMzbjfg" type="_4tUl8fZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yidIPZKEeS1bO4bMzbjfg" name="element" type="_0fzcofZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4ypK0PZKEeS1bO4bMzbjfg" name="setEdgeLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4ypx4PZKEeS1bO4bMzbjfg">
                    <body>
		 * Moves an edge which name is given as parameter.
		 * @param view the view of the edge
		 * @param location_source null or the new location of the source
		 * @param location_target null or the new location of the target
		 * @throws NotAnEdgeException if the view given is not an edge
		 * @throws NotAValidLocationException if locations are invalids
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4yrnEPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4ytcQPZKEeS1bO4bMzbjfg" name="location_source" type="_4t7p8PZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4ywfkPZKEeS1bO4bMzbjfg" name="location_target" type="_4t7p8PZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4yy70PZKEeS1bO4bMzbjfg" name="getTargetEdgeLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4yy70fZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns the target location of the view given as parameter.
		 * @param view the view of the edge
		 * @return a precise location of the target
		 * @throws NotAnEdgeException if the view given is not an edge
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4y0xAPZKEeS1bO4bMzbjfg" type="_4t7p8PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4y30UPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4y6QkPZKEeS1bO4bMzbjfg" name="getSourceEdgeLocation" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4y6QkfZKEeS1bO4bMzbjfg">
                    <body>
		 * Returns the source location of the view given as parameter.
		 * @param view the view of the edge
		 * @return a precise location of the source
		 * @throws NotAnEdgeException if the view given is not an edge
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4y8s0PZKEeS1bO4bMzbjfg" type="_4t7p8PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4zA-QPZKEeS1bO4bMzbjfg" name="view" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_4zFPsPZKEeS1bO4bMzbjfg" name="reconnectEdge" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_4zFPsfZKEeS1bO4bMzbjfg">
                    <body>
		 * Changes the source and/or the target of an edge whose the view is given as parameter.
		 * @param Vedge the view of the edge
		 * @param Vsource null or the view of the source
		 * @param Vtarget null or the view of the target
		 * @throws NotAnEdgeException  if the view given is not an edge
		 * @throws ExecutionException if the operation is forbidden
		 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4zITAPZKEeS1bO4bMzbjfg" name="Vedge" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4zMkcPZKEeS1bO4bMzbjfg" name="Vsource" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_4zQO0PZKEeS1bO4bMzbjfg" name="Vtarget" type="_4tV0EPZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5dUfgPZKEeS1bO4bMzbjfg" name="factories">
              <packagedElement xmi:type="uml:Class" xmi:id="_5dVtoPZKEeS1bO4bMzbjfg" name="DiagramFactory" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_5dWUsPZKEeS1bO4bMzbjfg">
                  <body>
 * Lets to create new papyrus diagram inside a project programatically. The main use is to call
 * the method build to create a new diagramHandler
 * 
 * @author Allan Rakotoarivony
 *
 </body>
                </ownedComment>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_5dW7wPZKEeS1bO4bMzbjfg" name="instance" visibility="public" isLeaf="true" isStatic="true" type="_5dVtoPZKEeS1bO4bMzbjfg" isUnique="false"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_5dYw8PZKEeS1bO4bMzbjfg" name="create" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_5dYw8fZKEeS1bO4bMzbjfg">
                    <body>
	 * Creates a new diagram inside the model modelname inside the project.
	 * @param diagramName
	 * @param diagramType
	 * @param papyrusEditor the editor in which the diagram will be created
	 * @return
	 * @throws CreationCommandNotFoundException
	 * @throws ServiceException
	 * @throws ExecutionException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5dZYAPZKEeS1bO4bMzbjfg" type="_4sYx0PZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5dZYAfZKEeS1bO4bMzbjfg" name="diagramName" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5dZ_EPZKEeS1bO4bMzbjfg" name="diagramType" type="_5dYJ4fZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5damIPZKEeS1bO4bMzbjfg" name="papyrusEditor" type="_5dYJ4vZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5de3kPZKEeS1bO4bMzbjfg" name="PapyrusEditorFactory" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_5de3kfZKEeS1bO4bMzbjfg">
                  <body>
 * Creates a new papyrus editor which contains a reference to the model
 * and the transactional editing domain.
 * @author rakotoarivony
 *
 </body>
                </ownedComment>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_5dfeoPZKEeS1bO4bMzbjfg" name="instance" visibility="public" isLeaf="true" isStatic="true" type="_5de3kPZKEeS1bO4bMzbjfg" isUnique="false"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_5dh64PZKEeS1bO4bMzbjfg" name="create" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_5dh64fZKEeS1bO4bMzbjfg">
                    <body>
	 * Creates a new papyrus editor inside the model of the given project.
	 * If the model doesn't exist, it will be automatically created
	 * @param project the project in which we want to create an editor
	 * @param modelname the name of the model in which we want to create a new papyrus editor
	 * @return a new papyrus editor
	 * @throws ExecutionException 
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5dih8PZKEeS1bO4bMzbjfg" type="_5dYJ4vZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5dih8fZKEeS1bO4bMzbjfg" name="project" type="_5dgswPZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5djJAPZKEeS1bO4bMzbjfg" name="modelname" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5dp2sPZKEeS1bO4bMzbjfg" name="ProjectFactory" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_5dp2sfZKEeS1bO4bMzbjfg">
                  <body>
 * Lets to create new papyrus project programatically.
 * The main use is to call the method build to create a new project
 * @author Allan Rakotoarivony
 *
 </body>
                </ownedComment>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_5dqdwPZKEeS1bO4bMzbjfg" name="instance" visibility="public" isLeaf="true" isStatic="true" type="_5dp2sPZKEeS1bO4bMzbjfg" isUnique="false"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_5drE0PZKEeS1bO4bMzbjfg" name="build" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_5drr4PZKEeS1bO4bMzbjfg">
                    <body>
	 * Creates a new eclipse project with the given project name or loads it if it exists in the workspace
	 * @param projectName
	 * @return
	 * @throws ExecutionException
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5dsS8PZKEeS1bO4bMzbjfg" type="_5dgswPZKEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_5ds6APZKEeS1bO4bMzbjfg" name="projectName" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5dYJ4PZKEeS1bO4bMzbjfg" name="utils">
              <packagedElement xmi:type="uml:Class" xmi:id="_5dYJ4fZKEeS1bO4bMzbjfg" name="DiagramType"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_5dYJ4vZKEeS1bO4bMzbjfg" name="PapyrusEditor" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_CtF6YPZOEeS1bO4bMzbjfg">
                  <body>&#xD;
 * This class allows to create a Papyrus Editor programmatically.&#xD;
 * The creation require the name of a project and the name of the model to create.&#xD;
 * This class is for use in tests.&#xD;
 *&#xD;
 * @author cedric dumoulin&#xD;
 *&#xD;
 </body>
                </ownedComment>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_CtHIgPZOEeS1bO4bMzbjfg" name="DEFAULT_PROJECT_NAME" visibility="protected" isLeaf="true" isStatic="true" type="_4tp9IvZKEeS1bO4bMzbjfg" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_CtIWoPZOEeS1bO4bMzbjfg" name="DEFAULT_MODEL_NAME" visibility="protected" isLeaf="true" isStatic="true" type="_4tp9IvZKEeS1bO4bMzbjfg" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_CtJkwPZOEeS1bO4bMzbjfg" name="modelName" visibility="protected" type="_4tp9IvZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtKy4PZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Name of the model to create.&#xD;
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_CtMBAvZOEeS1bO4bMzbjfg" name="page" visibility="protected" type="_CtMBAfZOEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtNPIPZOEeS1bO4bMzbjfg">
                    <body> The page. </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_CtPEUPZOEeS1bO4bMzbjfg" name="papyrusEditor" visibility="protected" type="_CtOdQvZOEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtPrYPZOEeS1bO4bMzbjfg">
                    <body> The papyrus editor. </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_CtQScPZOEeS1bO4bMzbjfg" name="eclipseProject" visibility="protected" type="_5dgswPZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtRgkPZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * An object representing an EclipseProject.&#xD;
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Ctb4oPZOEeS1bO4bMzbjfg" name="modelSet" visibility="private" type="_CtbRkvZOEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtdGwPZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Cached value of modelSet.&#xD;
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtRgkfZOEeS1bO4bMzbjfg" name="initResources" visibility="private">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtSHoPZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Init the resources.&#xD;
	 * The {@link #eclipseProject} should be initialized.&#xD;
	 *&#xD;
	 * @throws ExecutionException&#xD;
	 * @throws CoreException&#xD;
	 * @throws IOException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_CtSusPZOEeS1bO4bMzbjfg" name="deleteFileIfExists" type="_4tUl8fZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtSusfZOEeS1bO4bMzbjfg" name="createModel" visibility="protected">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtT80PZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Create a model suitable for Papyrus uml.&#xD;
	 * Save it in the provided file.&#xD;
	 *&#xD;
	 * @param file&#xD;
	 * @throws CoreException&#xD;
	 * @throws IOException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_CtUj4PZOEeS1bO4bMzbjfg" name="file" type="_-psWYPZNEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtVK8PZOEeS1bO4bMzbjfg" name="createEditor" visibility="protected">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtVyAPZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Create a papyrus editor.&#xD;
	 *&#xD;
	 * @return&#xD;
	 * @throws EditorCreationException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_CtWZEPZOEeS1bO4bMzbjfg" type="_CtOdQvZOEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtXAIPZOEeS1bO4bMzbjfg" name="dispose" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtXnMPZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Dispose the editor.&#xD;
	 </body>
                  </ownedComment>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtXnMfZOEeS1bO4bMzbjfg" name="getEditor" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtY1UPZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 *&#xD;
	 * @return&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_CtY1UfZOEeS1bO4bMzbjfg" type="_CtOdQvZOEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtZcYPZOEeS1bO4bMzbjfg" name="getServiceRegistry" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_CtaDcPZOEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Get the {@link ServicesRegistry} associated to the editor.&#xD;
	 *&#xD;
	 * @return The service registry.&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_CtbRkPZOEeS1bO4bMzbjfg" type="_CtaqgfZOEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtdGwfZOEeS1bO4bMzbjfg" name="getModelSet" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Cte78PZOEeS1bO4bMzbjfg" type="_CtbRkvZOEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtfjAPZOEeS1bO4bMzbjfg" name="undo" visibility="public"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtgxIPZOEeS1bO4bMzbjfg" name="redo" visibility="public"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Cth_QPZOEeS1bO4bMzbjfg" name="getIOperationHistory" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_CtkbgfZOEeS1bO4bMzbjfg" type="_CtkbgPZOEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_CtkbgvZOEeS1bO4bMzbjfg" name="getTransactionalEditingDomain" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_CtmQsPZOEeS1bO4bMzbjfg" type="_4tSwwvZKEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5dgswPZKEeS1bO4bMzbjfg" name="EclipseProject" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_-pSGsPZNEeS1bO4bMzbjfg">
                  <body>&#xD;
 * This class allows to create or load an Eclipse Project.&#xD;
 * This is the projects found in the project explorer.&#xD;
 * This class is mainly used in tests.&#xD;
 *&#xD;
 * @author cedric dumoulin&#xD;
 *&#xD;
 </body>
                </ownedComment>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_-pds4PZNEeS1bO4bMzbjfg" name="project" visibility="protected" type="_-pdF0PZNEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-pmPwPZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * The underlying Eclipse project.&#xD;
	 *&#xD;
	 </body>
                  </ownedComment>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_-pnd4fZNEeS1bO4bMzbjfg" name="monitor" visibility="protected" type="_-pnd4PZNEeS1bO4bMzbjfg" isUnique="false"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-posAPZNEeS1bO4bMzbjfg" name="initProject" visibility="protected">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-ppTEPZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Create or load the project.&#xD;
	 *&#xD;
	 * @param projectName&#xD;
	 * @throws ExecutionException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-ppTEfZNEeS1bO4bMzbjfg" name="projectName" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-pp6IPZNEeS1bO4bMzbjfg" name="getProject" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-pqhMPZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * @return the project&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-prIQPZNEeS1bO4bMzbjfg" type="_-pdF0PZNEeS1bO4bMzbjfg" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-prIQfZNEeS1bO4bMzbjfg" name="copyResource" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-prvUPZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 *&#xD;
	 * @param fromBundle&#xD;
	 * @param fromResourceName&#xD;
	 * @param toResourceName&#xD;
	 * @return&#xD;
	 * @throws ExecutionException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-psWYfZNEeS1bO4bMzbjfg" type="_-psWYPZNEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-ps9cPZNEeS1bO4bMzbjfg" name="fromBundle" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-ps9cfZNEeS1bO4bMzbjfg" name="fromResourceName" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-ptkgPZNEeS1bO4bMzbjfg" name="toResourceName" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-ptkgfZNEeS1bO4bMzbjfg" name="copyResource" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-puyoPZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Copy the specified resource from the specified bundle to this project.&#xD;
	 * Use the same path in src and target.&#xD;
	 *&#xD;
	 * @param fromBundle&#xD;
	 * @param fromResourceName&#xD;
	 * @return&#xD;
	 * @throws ExecutionException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-pvZsPZNEeS1bO4bMzbjfg" type="_-psWYPZNEeS1bO4bMzbjfg" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-pvZsfZNEeS1bO4bMzbjfg" name="fromBundle" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-pwAwPZNEeS1bO4bMzbjfg" name="fromResourceName" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-pwn0PZNEeS1bO4bMzbjfg" name="copyResources" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-pxO4PZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 *&#xD;
	 * @param fromBundle&#xD;
	 * @param fromResourceNames&#xD;
	 * @throws ExecutionException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-px18PZNEeS1bO4bMzbjfg" name="fromBundle" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-pydAPZNEeS1bO4bMzbjfg" name="fromResourceNames" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-pydAfZNEeS1bO4bMzbjfg" name="ensureFolders" visibility="protected">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-pzrIPZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Ensure that the intermediates folders exist in the project.&#xD;
	 *&#xD;
	 * @param project&#xD;
	 * @param name&#xD;
	 * @throws CoreException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-p0SMPZNEeS1bO4bMzbjfg" name="file" type="_-psWYPZNEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-p05QfZNEeS1bO4bMzbjfg" name="createFolder" visibility="private">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-p2ucPZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 *&#xD;
	 * @param folderPath&#xD;
	 * @throws CoreException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-p3VgPZNEeS1bO4bMzbjfg" name="folderPath" type="_-p05QPZNEeS1bO4bMzbjfg"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_-p38kPZNEeS1bO4bMzbjfg" name="createFolders" visibility="public">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_-p6Y0PZNEeS1bO4bMzbjfg">
                    <body>&#xD;
	 * Creates all the folders that are needed to contains the resource.&#xD;
	 *&#xD;
	 * @param modelName&#xD;
	 * @throws ExecutionException&#xD;
	 </body>
                  </ownedComment>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_-p6_4PZNEeS1bO4bMzbjfg" name="modelName" type="_4tp9IvZKEeS1bO4bMzbjfg"/>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_5_q-oPZKEeS1bO4bMzbjfg" name="exceptions">
              <packagedElement xmi:type="uml:Class" xmi:id="_5_sz0PZKEeS1bO4bMzbjfg" name="CreationCommandNotFoundException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_5_uB8PZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown when the creation command is not found.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_5_vQEPZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_5_xsUPZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5_upAPZKEeS1bO4bMzbjfg" name="DrawerException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_5_0IkPZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown during the plugin execution.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_5_0vofZKEeS1bO4bMzbjfg" general="_5_0voPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_5_1WsPZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5_19wPZKEeS1bO4bMzbjfg" name="InvalidContainerException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_5_2k0PZKEeS1bO4bMzbjfg">
                  <body>
 * Is thrown when an element cannot be placed in the container
 * @author rakotoarivony
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_5_2k0fZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_5_3L4PZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_5_3y8PZKEeS1bO4bMzbjfg">
                    <body>
	 *
	 </body>
                  </ownedComment>
                </ownedAttribute>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_5_4aAPZKEeS1bO4bMzbjfg" name="LocationNotFoundException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_5_5BEPZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown when getLocation is called on views without location.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_5_5BEfZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_5_5oIPZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6AA84PZKEeS1bO4bMzbjfg" name="NonExistantViewException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6ABj8PZKEeS1bO4bMzbjfg">
                  <body>
 * Is thrown when we want to access to a view that does not exists
 * @author rakotoarivony
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6ABj8fZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6ABj8vZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false">
                  <ownedComment xmi:type="uml:Comment" xmi:id="_6ACLAPZKEeS1bO4bMzbjfg">
                    <body>
	 *
	 </body>
                  </ownedComment>
                </ownedAttribute>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6ADZIPZKEeS1bO4bMzbjfg" name="NotAValidLocationException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6ADZIfZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown when an user want to display an element at a bad location.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6ADZIvZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6AEAMPZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6AFOUPZKEeS1bO4bMzbjfg" name="NotAValidSizeException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6AF1YPZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown when an user want to display an element with a bad size.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6AGccPZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6AHDgPZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6AIRoPZKEeS1bO4bMzbjfg" name="NotAnEdgeException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6AI4sPZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown when an user want to change or return the location of a
 * edge source/target.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6AJfwPZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6AKG0PZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6AL8APZKEeS1bO4bMzbjfg" name="NotDimensionedViewException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6AL8AfZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thown when getHeigth and getWidth are called on views with no dimensions.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6AMjEPZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6AMjEfZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6ANxMPZKEeS1bO4bMzbjfg" name="NotResizableViewException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6AOYQPZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown when resize is called on not a resizable views.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6AOYQfZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6AO_UPZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6AQNcPZKEeS1bO4bMzbjfg" name="TargetOrSourceNotDrawnException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6AQ0gPZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown when draw is called with cascade mode on a relationship but
 * the target or/and the source of this relationship is not drawn.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6AQ0gfZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6ARbkPZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_6ATQwPZKEeS1bO4bMzbjfg" name="UnmovableViewException" visibility="public">
                <ownedComment xmi:type="uml:Comment" xmi:id="_6ATQwfZKEeS1bO4bMzbjfg">
                  <body>
 * Exception thrown if a view is unmovable.
 * 
 * @author Thibaud VERBAERE
 *
 </body>
                </ownedComment>
                <generalization xmi:type="uml:Generalization" xmi:id="_6AT30PZKEeS1bO4bMzbjfg" general="_5_upAPZKEeS1bO4bMzbjfg"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_6AT30fZKEeS1bO4bMzbjfg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" type="_5_v3IPZKEeS1bO4bMzbjfg" isUnique="false"/>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_0ftWAPZKEeS1bO4bMzbjfg" name="uml">
    <packagedElement xmi:type="uml:Package" xmi:id="_0ftWAfZKEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_0ft9EPZKEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_0ft9EfZKEeS1bO4bMzbjfg" name="papyrus">
          <packagedElement xmi:type="uml:Package" xmi:id="_0fukIPZKEeS1bO4bMzbjfg" name="uml">
            <packagedElement xmi:type="uml:Package" xmi:id="_0fvLMPZKEeS1bO4bMzbjfg" name="tools">
              <packagedElement xmi:type="uml:Package" xmi:id="_0fvLMfZKEeS1bO4bMzbjfg" name="model">
                <packagedElement xmi:type="uml:Class" xmi:id="_0fvyQPZKEeS1bO4bMzbjfg" name="UmlModel"/>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_0fyOgPZKEeS1bO4bMzbjfg" name="uml2">
    <packagedElement xmi:type="uml:Package" xmi:id="_0fyOgfZKEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_0fy1kPZKEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_0fy1kfZKEeS1bO4bMzbjfg" name="uml2">
          <packagedElement xmi:type="uml:Package" xmi:id="_0fzcoPZKEeS1bO4bMzbjfg" name="uml">
            <packagedElement xmi:type="uml:Class" xmi:id="_0fzcofZKEeS1bO4bMzbjfg" name="Element"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_4tMDEPZKEeS1bO4bMzbjfg" name="draw2d">
    <packagedElement xmi:type="uml:Package" xmi:id="_4tMDEfZKEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_4tMqIPZKEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_4tMqIfZKEeS1bO4bMzbjfg" name="draw2d">
          <packagedElement xmi:type="uml:Package" xmi:id="_4tMqIvZKEeS1bO4bMzbjfg" name="geometry">
            <packagedElement xmi:type="uml:Class" xmi:id="_4tNRMPZKEeS1bO4bMzbjfg" name="Point"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_4t7p8PZKEeS1bO4bMzbjfg" name="PrecisionPoint"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_4tPGYPZKEeS1bO4bMzbjfg" name="gmf">
    <packagedElement xmi:type="uml:Package" xmi:id="_4tPGYfZKEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_4tPtcPZKEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_4tPtcfZKEeS1bO4bMzbjfg" name="gmf">
          <packagedElement xmi:type="uml:Package" xmi:id="_4tPtcvZKEeS1bO4bMzbjfg" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_4tQUgPZKEeS1bO4bMzbjfg" name="diagram">
              <packagedElement xmi:type="uml:Package" xmi:id="_4tQUgfZKEeS1bO4bMzbjfg" name="ui">
                <packagedElement xmi:type="uml:Package" xmi:id="_4tQUgvZKEeS1bO4bMzbjfg" name="editparts">
                  <packagedElement xmi:type="uml:Class" xmi:id="_4tQ7kPZKEeS1bO4bMzbjfg" name="DiagramEditPart"/>
                </packagedElement>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_4tVNAvZKEeS1bO4bMzbjfg" name="notation">
              <packagedElement xmi:type="uml:Class" xmi:id="_4tV0EPZKEeS1bO4bMzbjfg" name="View"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_4tSJsPZKEeS1bO4bMzbjfg" name="emf">
    <packagedElement xmi:type="uml:Package" xmi:id="_4tSJsfZKEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_4tSJsvZKEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_4tSwwPZKEeS1bO4bMzbjfg" name="emf">
          <packagedElement xmi:type="uml:Package" xmi:id="_4tSwwfZKEeS1bO4bMzbjfg" name="transaction">
            <packagedElement xmi:type="uml:Class" xmi:id="_4tSwwvZKEeS1bO4bMzbjfg" name="TransactionalEditingDomain"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_4tT-4fZKEeS1bO4bMzbjfg" name="datatype">
    <packagedElement xmi:type="uml:Package" xmi:id="_4tUl8PZKEeS1bO4bMzbjfg" name="datatype">
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_4tUl8fZKEeS1bO4bMzbjfg" name="Boolean"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_4txR4PZKEeS1bO4bMzbjfg" name="Integer"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_5_v3IPZKEeS1bO4bMzbjfg" name="Long"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_4tpWEfZKEeS1bO4bMzbjfg" name="java">
    <packagedElement xmi:type="uml:Package" xmi:id="_4tp9IPZKEeS1bO4bMzbjfg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_4tp9IfZKEeS1bO4bMzbjfg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_4tp9IvZKEeS1bO4bMzbjfg" name="String"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_5_0voPZKEeS1bO4bMzbjfg" name="Exception"/>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_4uMvsPZKEeS1bO4bMzbjfg" name="gef">
    <packagedElement xmi:type="uml:Package" xmi:id="_4uMvsfZKEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_4uNWwPZKEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_4uNWwfZKEeS1bO4bMzbjfg" name="gef">
          <packagedElement xmi:type="uml:Class" xmi:id="_4uN90PZKEeS1bO4bMzbjfg" name="EditPart"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_-paCgPZNEeS1bO4bMzbjfg" name="core">
    <packagedElement xmi:type="uml:Package" xmi:id="_-papkPZNEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_-pbQoPZNEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_-pb3sPZNEeS1bO4bMzbjfg" name="core">
          <packagedElement xmi:type="uml:Package" xmi:id="_-pcewPZNEeS1bO4bMzbjfg" name="resources">
            <packagedElement xmi:type="uml:Interface" xmi:id="_-pdF0PZNEeS1bO4bMzbjfg" name="IProject"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_-psWYPZNEeS1bO4bMzbjfg" name="IFile"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_-pm20PZNEeS1bO4bMzbjfg" name="runtime">
            <packagedElement xmi:type="uml:Interface" xmi:id="_-pnd4PZNEeS1bO4bMzbjfg" name="IProgressMonitor"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_-p05QPZNEeS1bO4bMzbjfg" name="IPath"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_Ctj0cPZOEeS1bO4bMzbjfg" name="commands">
            <packagedElement xmi:type="uml:Package" xmi:id="_Ctj0cfZOEeS1bO4bMzbjfg" name="operations">
              <packagedElement xmi:type="uml:Interface" xmi:id="_CtkbgPZOEeS1bO4bMzbjfg" name="IOperationHistory"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_CtLZ8PZOEeS1bO4bMzbjfg" name="ui">
    <packagedElement xmi:type="uml:Package" xmi:id="_CtLZ8fZOEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_CtLZ8vZOEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_CtMBAPZOEeS1bO4bMzbjfg" name="ui">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CtMBAfZOEeS1bO4bMzbjfg" name="IWorkbenchPage"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Model" xmi:id="_CtNPIfZOEeS1bO4bMzbjfg" name="infra">
    <packagedElement xmi:type="uml:Package" xmi:id="_CtN2MPZOEeS1bO4bMzbjfg" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_CtN2MfZOEeS1bO4bMzbjfg" name="eclipse">
        <packagedElement xmi:type="uml:Package" xmi:id="_CtN2MvZOEeS1bO4bMzbjfg" name="papyrus">
          <packagedElement xmi:type="uml:Package" xmi:id="_CtN2M_ZOEeS1bO4bMzbjfg" name="infra">
            <packagedElement xmi:type="uml:Package" xmi:id="_CtOdQPZOEeS1bO4bMzbjfg" name="core">
              <packagedElement xmi:type="uml:Package" xmi:id="_CtOdQfZOEeS1bO4bMzbjfg" name="editor">
                <packagedElement xmi:type="uml:Interface" xmi:id="_CtOdQvZOEeS1bO4bMzbjfg" name="IMultiDiagramEditor"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_CtaqgPZOEeS1bO4bMzbjfg" name="services">
                <packagedElement xmi:type="uml:Class" xmi:id="_CtaqgfZOEeS1bO4bMzbjfg" name="ServicesRegistry"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_CtbRkfZOEeS1bO4bMzbjfg" name="resource">
                <packagedElement xmi:type="uml:Class" xmi:id="_CtbRkvZOEeS1bO4bMzbjfg" name="ModelSet"/>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
  </packagedElement>
</uml:Model>
