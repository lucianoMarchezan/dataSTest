idcrs,model_name,name,context,def,number_of_dependencies,dependencies
1,Shuttle,CR01,<InstanceType-Message{887}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR20 && CR13 && CR09 && CR16 && CR19 && CR26 && CR18 && CR15 && CR27 && CR17 &&"
2,Shuttle,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
3,Shuttle,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
4,Shuttle,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
5,Shuttle,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
6,Shuttle,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
7,Shuttle,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
8,Shuttle,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
9,Shuttle,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR10 && CR20 && CR13 && CR19 && CR11 && CR26 && CR18 && CR14 && CR01 &&"
10,Shuttle,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
11,Shuttle,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR09 && CR14 && CR02 &&"
12,Shuttle,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
13,Shuttle,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR09 && CR16 && CR19 && CR26 && CR18 && CR01 &&"
14,Shuttle,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
15,Shuttle,CR15,<InstanceType-Lifeline{884}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
16,Shuttle,CR16,<InstanceType-Message{887}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR20 && CR13 && CR19 && CR18 && CR01 && CR15 && CR27 && CR17 &&"
17,Shuttle,CR17,<InstanceType-Lifeline{884}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
18,Shuttle,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR13 && CR09 && CR16 && CR19 && CR01 &&"
19,Shuttle,CR19,<InstanceType-Message{887}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR13 && CR09 && CR16 && CR26 && CR18 && CR01 &&"
20,Shuttle,CR20,<InstanceType-Message{887}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR09 && CR08 && CR16 && CR19 && CR18 && CR01 &&"
21,Shuttle,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
22,Shuttle,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR21 && CR24 &&"
23,Shuttle,CR23,<InstanceType-InteractionFragment{883}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
24,Shuttle,CR24,<InstanceType-InteractionFragment{883}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
25,Shuttle,CR25,<InstanceType-CreateLinkObjectAction{832}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
26,Shuttle,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR09 && CR19 && CR01 && CR27 &&"
27,Shuttle,CR27,<InstanceType-Lifeline{884}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR01 && CR15 &&"
28,Mafia,CR01,<InstanceType-Message{818}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR26 && CR20 && CR16 && CR19 && CR17 && CR13 && CR18 && CR27 && CR09 && CR15 &&"
29,Mafia,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
30,Mafia,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
31,Mafia,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
32,Mafia,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
33,Mafia,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
34,Mafia,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
35,Mafia,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
36,Mafia,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR11 && CR26 && CR20 && CR19 && CR10 && CR13 && CR14 && CR18 && CR01 &&"
37,Mafia,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
38,Mafia,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR10 && CR14 && CR09 &&"
39,Mafia,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
40,Mafia,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR26 && CR20 && CR16 && CR19 && CR18 && CR01 && CR09 &&"
41,Mafia,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR10 && CR09 &&"
42,Mafia,CR15,<InstanceType-Lifeline{815}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
43,Mafia,CR16,<InstanceType-Message{818}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR20 && CR19 && CR17 && CR13 && CR18 && CR01 && CR27 && CR15 &&"
44,Mafia,CR17,<InstanceType-Lifeline{815}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
45,Mafia,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR16 && CR19 && CR13 && CR01 && CR09 &&"
46,Mafia,CR19,<InstanceType-Message{818}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR26 && CR20 && CR16 && CR13 && CR18 && CR01 && CR09 &&"
47,Mafia,CR20,<InstanceType-Message{818}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR19 && CR13 && CR08 && CR18 && CR01 && CR09 &&"
48,Mafia,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
49,Mafia,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
50,Mafia,CR23,<InstanceType-InteractionFragment{814}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
51,Mafia,CR24,<InstanceType-InteractionFragment{814}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
52,Mafia,CR25,<InstanceType-CreateLinkObjectAction{1079}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
53,Mafia,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR13 && CR01 && CR27 && CR09 &&"
54,Mafia,CR27,<InstanceType-Lifeline{815}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR16 && CR01 && CR15 &&"
55,jacksonCore,CR01,<InstanceType-Message{887}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR15 && CR16 && CR17 && CR27 && CR19 && CR20 && CR09 && CR18 && CR26 &&"
56,jacksonCore,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
57,jacksonCore,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
58,jacksonCore,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
59,jacksonCore,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
60,jacksonCore,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
61,jacksonCore,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
62,jacksonCore,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
63,jacksonCore,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR10 && CR11 && CR14 && CR19 && CR20 && CR18 && CR01 && CR26 &&"
64,jacksonCore,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
65,jacksonCore,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR14 && CR02 && CR09 &&"
66,jacksonCore,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
67,jacksonCore,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR19 && CR20 && CR09 && CR18 && CR01 && CR26 &&"
68,jacksonCore,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR11 && CR09 &&"
69,jacksonCore,CR15,<InstanceType-Lifeline{884}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
70,jacksonCore,CR16,<InstanceType-Message{887}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR15 && CR17 && CR27 && CR19 && CR20 && CR18 && CR01 &&"
71,jacksonCore,CR17,<InstanceType-Lifeline{884}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
72,jacksonCore,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR16 && CR19 && CR20 && CR09 && CR01 &&"
73,jacksonCore,CR19,<InstanceType-Message{887}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR16 && CR20 && CR09 && CR18 && CR01 && CR26 &&"
74,jacksonCore,CR20,<InstanceType-Message{887}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR16 && CR19 && CR09 && CR18 && CR01 && CR08 &&"
75,jacksonCore,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
76,jacksonCore,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
77,jacksonCore,CR23,<InstanceType-InteractionFragment{883}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
78,jacksonCore,CR24,<InstanceType-InteractionFragment{883}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
79,jacksonCore,CR25,<InstanceType-CreateLinkObjectAction{832}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
80,jacksonCore,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR27 && CR19 && CR09 && CR01 &&"
81,jacksonCore,CR27,<InstanceType-Lifeline{884}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR16 && CR01 && CR26 &&"
82,gh4a,CR01,<InstanceType-Message{834}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR20 && CR17 && CR26 && CR09 && CR15 && CR18 && CR16 && CR19 && CR27 && CR13 &&"
83,gh4a,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR11 && CR04 &&"
84,gh4a,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
85,gh4a,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
86,gh4a,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
87,gh4a,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
88,gh4a,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
89,gh4a,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
90,gh4a,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR20 && CR11 && CR26 && CR18 && CR10 && CR01 && CR19 && CR14 && CR13 &&"
91,gh4a,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR09 && CR14 &&"
92,gh4a,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR09 && CR10 && CR14 &&"
93,gh4a,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
94,gh4a,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR26 && CR09 && CR18 && CR01 && CR16 && CR19 &&"
95,gh4a,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR09 && CR10 &&"
96,gh4a,CR15,<InstanceType-Lifeline{831}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR16 && CR27 &&"
97,gh4a,CR16,<InstanceType-Message{834}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR20 && CR17 && CR15 && CR18 && CR01 && CR19 && CR27 && CR13 &&"
98,gh4a,CR17,<InstanceType-Lifeline{831}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
99,gh4a,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR09 && CR01 && CR16 && CR19 && CR13 &&"
100,gh4a,CR19,<InstanceType-Message{834}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR26 && CR09 && CR18 && CR01 && CR16 && CR13 &&"
101,gh4a,CR20,<InstanceType-Message{834}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR18 && CR08 && CR01 && CR16 && CR19 && CR13 &&"
102,gh4a,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
103,gh4a,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
104,gh4a,CR23,<InstanceType-InteractionFragment{830}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
105,gh4a,CR24,<InstanceType-InteractionFragment{830}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
106,gh4a,CR25,<InstanceType-CreateLinkObjectAction{1143}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
107,gh4a,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR01 && CR19 && CR27 && CR13 &&"
108,gh4a,CR27,<InstanceType-Lifeline{831}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR15 && CR01 && CR16 &&"
109,PRT451Androidify,CR01,<InstanceType-Message{866}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR17 && CR18 && CR26 && CR19 && CR20 && CR13 && CR27 && CR16 && CR15 && CR09 &&"
110,PRT451Androidify,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
111,PRT451Androidify,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
112,PRT451Androidify,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR03 && CR02 &&"
113,PRT451Androidify,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
114,PRT451Androidify,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
115,PRT451Androidify,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
116,PRT451Androidify,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
117,PRT451Androidify,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR18 && CR26 && CR01 && CR10 && CR19 && CR20 && CR13 && CR14 && CR11 &&"
118,PRT451Androidify,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR09 && CR11 &&"
119,PRT451Androidify,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR02 && CR14 && CR09 &&"
120,PRT451Androidify,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
121,PRT451Androidify,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR18 && CR26 && CR01 && CR19 && CR20 && CR16 && CR09 &&"
122,PRT451Androidify,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
123,PRT451Androidify,CR15,<InstanceType-Lifeline{863}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
124,PRT451Androidify,CR16,<InstanceType-Message{866}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR17 && CR18 && CR01 && CR19 && CR20 && CR13 && CR27 && CR15 &&"
125,PRT451Androidify,CR17,<InstanceType-Lifeline{863}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
126,PRT451Androidify,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR01 && CR19 && CR20 && CR13 && CR16 && CR09 &&"
127,PRT451Androidify,CR19,<InstanceType-Message{866}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR18 && CR26 && CR01 && CR20 && CR13 && CR16 && CR09 &&"
128,PRT451Androidify,CR20,<InstanceType-Message{866}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR18 && CR01 && CR08 && CR19 && CR13 && CR16 && CR09 &&"
129,PRT451Androidify,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
130,PRT451Androidify,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
131,PRT451Androidify,CR23,<InstanceType-InteractionFragment{862}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
132,PRT451Androidify,CR24,<InstanceType-InteractionFragment{862}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
133,PRT451Androidify,CR25,<InstanceType-CreateLinkObjectAction{967}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
134,PRT451Androidify,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR19 && CR13 && CR27 && CR09 &&"
135,PRT451Androidify,CR27,<InstanceType-Lifeline{863}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR01 && CR16 && CR15 &&"
136,arthas,CR01,<InstanceType-Message{821}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR09 && CR19 && CR15 && CR20 && CR17 && CR13 && CR18 && CR26 && CR27 &&"
137,arthas,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
138,arthas,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
139,arthas,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
140,arthas,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
141,arthas,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
142,arthas,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
143,arthas,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
144,arthas,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR19 && CR01 && CR20 && CR11 && CR13 && CR10 && CR18 && CR26 && CR14 &&"
145,arthas,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
146,arthas,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR02 && CR10 && CR14 &&"
147,arthas,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
148,arthas,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR09 && CR19 && CR01 && CR20 && CR18 && CR26 &&"
149,arthas,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
150,arthas,CR15,<InstanceType-Lifeline{818}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
151,arthas,CR16,<InstanceType-Message{821}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR19 && CR01 && CR15 && CR20 && CR17 && CR13 && CR18 && CR27 &&"
152,arthas,CR17,<InstanceType-Lifeline{818}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
153,arthas,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR09 && CR19 && CR01 && CR20 && CR13 &&"
154,arthas,CR19,<InstanceType-Message{821}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR09 && CR01 && CR20 && CR13 && CR18 && CR26 &&"
155,arthas,CR20,<InstanceType-Message{821}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR09 && CR19 && CR01 && CR08 && CR13 && CR18 &&"
156,arthas,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
157,arthas,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
158,arthas,CR23,<InstanceType-InteractionFragment{817}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
159,arthas,CR24,<InstanceType-InteractionFragment{817}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
160,arthas,CR25,<InstanceType-CreateLinkObjectAction{1019}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
161,arthas,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR19 && CR01 && CR13 && CR27 &&"
162,arthas,CR27,<InstanceType-Lifeline{818}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR01 && CR15 && CR26 &&"
163,equalsVerifier,CR01,<InstanceType-Message{845}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR13 && CR27 && CR18 && CR09 && CR26 && CR20 && CR19 && CR17 && CR15 &&"
164,equalsVerifier,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
165,equalsVerifier,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
166,equalsVerifier,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
167,equalsVerifier,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
168,equalsVerifier,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
169,equalsVerifier,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
170,equalsVerifier,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
171,equalsVerifier,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR01 && CR10 && CR13 && CR18 && CR14 && CR11 && CR26 && CR20 && CR19 &&"
172,equalsVerifier,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
173,equalsVerifier,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR09 && CR14 && CR02 &&"
174,equalsVerifier,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
175,equalsVerifier,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR01 && CR18 && CR09 && CR26 && CR20 && CR19 &&"
176,equalsVerifier,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
177,equalsVerifier,CR15,<InstanceType-Lifeline{827}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
178,equalsVerifier,CR16,<InstanceType-Message{845}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR01 && CR13 && CR27 && CR18 && CR20 && CR19 && CR17 && CR15 &&"
179,equalsVerifier,CR17,<InstanceType-Lifeline{827}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
180,equalsVerifier,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR01 && CR13 && CR09 && CR20 && CR19 &&"
181,equalsVerifier,CR19,<InstanceType-Message{845}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR01 && CR13 && CR18 && CR09 && CR26 && CR20 &&"
182,equalsVerifier,CR20,<InstanceType-Message{845}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR08 && CR01 && CR13 && CR18 && CR09 && CR19 &&"
183,equalsVerifier,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
184,equalsVerifier,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR23 &&"
185,equalsVerifier,CR23,<InstanceType-InteractionFragment{828}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
186,equalsVerifier,CR24,<InstanceType-InteractionFragment{828}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
187,equalsVerifier,CR25,<InstanceType-CreateLinkObjectAction{1064}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
188,equalsVerifier,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR13 && CR27 && CR09 && CR19 &&"
189,equalsVerifier,CR27,<InstanceType-Lifeline{827}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR01 && CR26 && CR15 &&"
190,appsensor,CR01,<InstanceType-Message{821}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR26 && CR15 && CR13 && CR27 && CR19 && CR20 && CR17 && CR18 && CR09 &&"
191,appsensor,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
192,appsensor,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
193,appsensor,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
194,appsensor,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
195,appsensor,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
196,appsensor,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
197,appsensor,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
198,appsensor,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR26 && CR13 && CR10 && CR19 && CR20 && CR18 && CR11 && CR14 && CR01 &&"
199,appsensor,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
200,appsensor,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR10 && CR14 && CR09 &&"
201,appsensor,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
202,appsensor,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR26 && CR19 && CR20 && CR18 && CR01 && CR09 &&"
203,appsensor,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR11 && CR09 &&"
204,appsensor,CR15,<InstanceType-Lifeline{818}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
205,appsensor,CR16,<InstanceType-Message{821}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR13 && CR27 && CR19 && CR20 && CR17 && CR18 && CR01 &&"
206,appsensor,CR17,<InstanceType-Lifeline{818}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
207,appsensor,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR13 && CR19 && CR20 && CR01 && CR09 &&"
208,appsensor,CR19,<InstanceType-Message{821}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR26 && CR13 && CR20 && CR18 && CR01 && CR09 &&"
209,appsensor,CR20,<InstanceType-Message{821}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR13 && CR19 && CR18 && CR08 && CR01 && CR09 &&"
210,appsensor,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
211,appsensor,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR23 &&"
212,appsensor,CR23,<InstanceType-InteractionFragment{817}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
213,appsensor,CR24,<InstanceType-InteractionFragment{817}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
214,appsensor,CR25,<InstanceType-CreateLinkObjectAction{1019}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
215,appsensor,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR27 && CR19 && CR01 && CR09 &&"
216,appsensor,CR27,<InstanceType-Lifeline{818}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR15 && CR01 &&"
217,ribbon,CR01,<InstanceType-Message{858}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR09 && CR27 && CR18 && CR13 && CR26 && CR16 && CR17 && CR19 && CR20 && CR15 &&"
218,ribbon,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR04 && CR03 &&"
219,ribbon,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR04 && CR02 &&"
220,ribbon,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR03 && CR02 &&"
221,ribbon,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
222,ribbon,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
223,ribbon,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
224,ribbon,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
225,ribbon,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR18 && CR13 && CR11 && CR26 && CR10 && CR14 && CR19 && CR20 && CR01 &&"
226,ribbon,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
227,ribbon,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR10 && CR14 && CR02 &&"
228,ribbon,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
229,ribbon,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR18 && CR26 && CR16 && CR19 && CR20 && CR01 &&"
230,ribbon,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
231,ribbon,CR15,<InstanceType-Lifeline{840}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
232,ribbon,CR16,<InstanceType-Message{858}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR27 && CR18 && CR13 && CR17 && CR19 && CR20 && CR15 && CR01 &&"
233,ribbon,CR17,<InstanceType-Lifeline{840}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
234,ribbon,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR13 && CR16 && CR19 && CR20 && CR01 &&"
235,ribbon,CR19,<InstanceType-Message{858}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR18 && CR13 && CR26 && CR16 && CR20 && CR01 &&"
236,ribbon,CR20,<InstanceType-Message{858}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR18 && CR13 && CR16 && CR19 && CR01 && CR08 &&"
237,ribbon,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
238,ribbon,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR23 &&"
239,ribbon,CR23,<InstanceType-InteractionFragment{841}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR22 && CR24 && CR21 &&"
240,ribbon,CR24,<InstanceType-InteractionFragment{841}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
241,ribbon,CR25,<InstanceType-CreateLinkObjectAction{1061}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
242,ribbon,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR27 && CR13 && CR19 && CR01 &&"
243,ribbon,CR27,<InstanceType-Lifeline{840}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR16 && CR15 && CR01 &&"
244,parkJava,CR01,<InstanceType-Message{844}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR15 && CR18 && CR13 && CR17 && CR09 && CR27 && CR19 && CR20 && CR26 &&"
245,parkJava,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
246,parkJava,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
247,parkJava,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
248,parkJava,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
249,parkJava,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
250,parkJava,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
251,parkJava,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
252,parkJava,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR11 && CR10 && CR18 && CR01 && CR14 && CR13 && CR19 && CR20 && CR26 &&"
253,parkJava,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
254,parkJava,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR02 && CR14 && CR09 &&"
255,parkJava,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
256,parkJava,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR18 && CR01 && CR09 && CR19 && CR20 && CR26 &&"
257,parkJava,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR10 && CR09 &&"
258,parkJava,CR15,<InstanceType-Lifeline{841}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
259,parkJava,CR16,<InstanceType-Message{844}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR18 && CR01 && CR13 && CR17 && CR27 && CR19 && CR20 &&"
260,parkJava,CR17,<InstanceType-Lifeline{841}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
261,parkJava,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR01 && CR13 && CR09 && CR19 && CR20 &&"
262,parkJava,CR19,<InstanceType-Message{844}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR18 && CR01 && CR13 && CR09 && CR20 && CR26 &&"
263,parkJava,CR20,<InstanceType-Message{844}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR18 && CR01 && CR13 && CR09 && CR19 && CR08 &&"
264,parkJava,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
265,parkJava,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
266,parkJava,CR23,<InstanceType-InteractionFragment{840}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR22 &&"
267,parkJava,CR24,<InstanceType-InteractionFragment{840}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
268,parkJava,CR25,<InstanceType-CreateLinkObjectAction{1164}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
269,parkJava,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR13 && CR09 && CR27 && CR19 &&"
270,parkJava,CR27,<InstanceType-Lifeline{841}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR15 && CR01 && CR26 &&"
271,dbms,CR01,<InstanceType-Message{813}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR19 && CR20 && CR18 && CR27 && CR15 && CR16 && CR13 && CR09 && CR17 && CR26 &&"
272,dbms,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
273,dbms,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
274,dbms,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
275,dbms,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
276,dbms,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
277,dbms,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
278,dbms,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
279,dbms,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR19 && CR20 && CR18 && CR01 && CR11 && CR14 && CR10 && CR13 && CR26 &&"
280,dbms,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
281,dbms,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR14 && CR10 && CR09 &&"
282,dbms,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
283,dbms,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR19 && CR20 && CR18 && CR01 && CR16 && CR09 && CR26 &&"
284,dbms,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR10 && CR09 &&"
285,dbms,CR15,<InstanceType-Lifeline{810}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR01 && CR16 &&"
286,dbms,CR16,<InstanceType-Message{813}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR19 && CR20 && CR18 && CR27 && CR15 && CR01 && CR13 && CR17 &&"
287,dbms,CR17,<InstanceType-Lifeline{810}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
288,dbms,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR19 && CR20 && CR01 && CR16 && CR13 && CR09 &&"
289,dbms,CR19,<InstanceType-Message{813}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR18 && CR01 && CR16 && CR13 && CR09 && CR26 &&"
290,dbms,CR20,<InstanceType-Message{813}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR19 && CR18 && CR01 && CR16 && CR13 && CR09 && CR08 &&"
291,dbms,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
292,dbms,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
293,dbms,CR23,<InstanceType-InteractionFragment{809}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
294,dbms,CR24,<InstanceType-InteractionFragment{809}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
295,dbms,CR25,<InstanceType-CreateLinkObjectAction{1029}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
296,dbms,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR27 && CR01 && CR13 && CR09 &&"
297,dbms,CR27,<InstanceType-Lifeline{810}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR01 && CR16 && CR26 &&"
298,circuitjs1,CR01,<InstanceType-Message{825}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR18 && CR17 && CR15 && CR27 && CR20 && CR09 && CR19 && CR16 && CR26 &&"
299,circuitjs1,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR11 && CR04 &&"
300,circuitjs1,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
301,circuitjs1,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
302,circuitjs1,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
303,circuitjs1,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
304,circuitjs1,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
305,circuitjs1,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
306,circuitjs1,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR14 && CR18 && CR11 && CR10 && CR20 && CR01 && CR19 && CR26 &&"
307,circuitjs1,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR11 && CR09 &&"
308,circuitjs1,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR14 && CR10 && CR09 &&"
309,circuitjs1,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
310,circuitjs1,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR18 && CR20 && CR09 && CR01 && CR19 && CR16 && CR26 &&"
311,circuitjs1,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR10 && CR09 &&"
312,circuitjs1,CR15,<InstanceType-Lifeline{822}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR01 && CR16 &&"
313,circuitjs1,CR16,<InstanceType-Message{825}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR18 && CR17 && CR15 && CR27 && CR20 && CR01 && CR19 &&"
314,circuitjs1,CR17,<InstanceType-Lifeline{822}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
315,circuitjs1,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR20 && CR09 && CR01 && CR19 && CR16 &&"
316,circuitjs1,CR19,<InstanceType-Message{825}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR18 && CR20 && CR09 && CR01 && CR16 && CR26 &&"
317,circuitjs1,CR20,<InstanceType-Message{825}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR18 && CR08 && CR09 && CR01 && CR19 && CR16 &&"
318,circuitjs1,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
319,circuitjs1,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR23 &&"
320,circuitjs1,CR23,<InstanceType-InteractionFragment{821}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
321,circuitjs1,CR24,<InstanceType-InteractionFragment{821}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
322,circuitjs1,CR25,<InstanceType-CreateLinkObjectAction{1039}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
323,circuitjs1,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR27 && CR09 && CR01 && CR19 &&"
324,circuitjs1,CR27,<InstanceType-Lifeline{822}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR01 && CR16 && CR26 &&"
325,safewatchGlobalAndroid,CR01,<InstanceType-Message{834}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR17 && CR16 && CR09 && CR19 && CR27 && CR13 && CR15 && CR18 && CR26 && CR20 &&"
326,safewatchGlobalAndroid,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
327,safewatchGlobalAndroid,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
328,safewatchGlobalAndroid,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR03 && CR02 &&"
329,safewatchGlobalAndroid,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
330,safewatchGlobalAndroid,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
331,safewatchGlobalAndroid,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
332,safewatchGlobalAndroid,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
333,safewatchGlobalAndroid,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR14 && CR19 && CR13 && CR18 && CR10 && CR11 && CR26 && CR01 && CR20 &&"
334,safewatchGlobalAndroid,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR09 && CR11 &&"
335,safewatchGlobalAndroid,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR14 && CR09 && CR02 && CR10 &&"
336,safewatchGlobalAndroid,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
337,safewatchGlobalAndroid,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR09 && CR19 && CR18 && CR26 && CR01 && CR20 &&"
338,safewatchGlobalAndroid,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
339,safewatchGlobalAndroid,CR15,<InstanceType-Lifeline{831}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
340,safewatchGlobalAndroid,CR16,<InstanceType-Message{834}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR17 && CR19 && CR27 && CR13 && CR15 && CR18 && CR01 && CR20 &&"
341,safewatchGlobalAndroid,CR17,<InstanceType-Lifeline{831}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
342,safewatchGlobalAndroid,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR09 && CR19 && CR13 && CR01 && CR20 &&"
343,safewatchGlobalAndroid,CR19,<InstanceType-Message{834}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR09 && CR13 && CR18 && CR26 && CR01 && CR20 &&"
344,safewatchGlobalAndroid,CR20,<InstanceType-Message{834}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR08 && CR16 && CR09 && CR19 && CR13 && CR18 && CR01 &&"
345,safewatchGlobalAndroid,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
346,safewatchGlobalAndroid,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
347,safewatchGlobalAndroid,CR23,<InstanceType-InteractionFragment{830}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
348,safewatchGlobalAndroid,CR24,<InstanceType-InteractionFragment{830}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
349,safewatchGlobalAndroid,CR25,<InstanceType-CreateLinkObjectAction{1113}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
350,safewatchGlobalAndroid,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR19 && CR27 && CR13 && CR01 &&"
351,safewatchGlobalAndroid,CR27,<InstanceType-Lifeline{831}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR15 && CR26 && CR01 &&"
352,traccar,CR01,<InstanceType-Message{860}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR20 && CR26 && CR17 && CR27 && CR16 && CR15 && CR13 && CR19 && CR18 && CR09 &&"
353,traccar,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
354,traccar,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
355,traccar,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
356,traccar,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
357,traccar,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
358,traccar,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
359,traccar,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
360,traccar,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR20 && CR26 && CR10 && CR01 && CR11 && CR13 && CR19 && CR18 && CR14 &&"
361,traccar,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
362,traccar,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR14 && CR09 && CR02 &&"
363,traccar,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
364,traccar,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR26 && CR16 && CR01 && CR19 && CR18 && CR09 &&"
365,traccar,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR11 && CR09 &&"
366,traccar,CR15,<InstanceType-Lifeline{864}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
367,traccar,CR16,<InstanceType-Message{860}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR20 && CR17 && CR27 && CR01 && CR15 && CR13 && CR19 && CR18 &&"
368,traccar,CR17,<InstanceType-Lifeline{864}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
369,traccar,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR16 && CR01 && CR13 && CR19 && CR09 &&"
370,traccar,CR19,<InstanceType-Message{860}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR26 && CR16 && CR01 && CR13 && CR18 && CR09 &&"
371,traccar,CR20,<InstanceType-Message{860}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR08 && CR01 && CR13 && CR19 && CR18 && CR09 &&"
372,traccar,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
373,traccar,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
374,traccar,CR23,<InstanceType-InteractionFragment{863}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
375,traccar,CR24,<InstanceType-InteractionFragment{863}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
376,traccar,CR25,<InstanceType-CreateLinkObjectAction{1161}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
377,traccar,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR27 && CR01 && CR13 && CR19 && CR09 &&"
378,traccar,CR27,<InstanceType-Lifeline{864}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR16 && CR01 && CR15 &&"
379,buzzAndroid,CR01,<InstanceType-Message{809}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR19 && CR09 && CR27 && CR13 && CR16 && CR18 && CR26 && CR20 && CR15 && CR17 &&"
380,buzzAndroid,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
381,buzzAndroid,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
382,buzzAndroid,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
383,buzzAndroid,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
384,buzzAndroid,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
385,buzzAndroid,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
386,buzzAndroid,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
387,buzzAndroid,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR19 && CR13 && CR14 && CR01 && CR18 && CR10 && CR26 && CR20 && CR11 &&"
388,buzzAndroid,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
389,buzzAndroid,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR14 && CR02 && CR10 &&"
390,buzzAndroid,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
391,buzzAndroid,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR19 && CR09 && CR16 && CR01 && CR18 && CR26 && CR20 &&"
392,buzzAndroid,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
393,buzzAndroid,CR15,<InstanceType-Lifeline{806}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
394,buzzAndroid,CR16,<InstanceType-Message{809}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR19 && CR27 && CR13 && CR01 && CR18 && CR20 && CR15 && CR17 &&"
395,buzzAndroid,CR17,<InstanceType-Lifeline{806}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
396,buzzAndroid,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR19 && CR09 && CR13 && CR16 && CR01 && CR20 &&"
397,buzzAndroid,CR19,<InstanceType-Message{809}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR13 && CR16 && CR01 && CR18 && CR26 && CR20 &&"
398,buzzAndroid,CR20,<InstanceType-Message{809}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR19 && CR09 && CR13 && CR16 && CR01 && CR18 && CR08 &&"
399,buzzAndroid,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
400,buzzAndroid,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
401,buzzAndroid,CR23,<InstanceType-InteractionFragment{805}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
402,buzzAndroid,CR24,<InstanceType-InteractionFragment{805}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
403,buzzAndroid,CR25,<InstanceType-CreateLinkObjectAction{1068}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
404,buzzAndroid,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR09 && CR27 && CR13 && CR01 &&"
405,buzzAndroid,CR27,<InstanceType-Lifeline{806}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR01 && CR26 && CR15 &&"
406,disruptor,CR01,<InstanceType-Message{821}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR26 && CR16 && CR15 && CR18 && CR17 && CR09 && CR19 && CR27 && CR13 && CR20 &&"
407,disruptor,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
408,disruptor,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
409,disruptor,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
410,disruptor,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
411,disruptor,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
412,disruptor,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
413,disruptor,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
414,disruptor,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR26 && CR14 && CR10 && CR18 && CR19 && CR11 && CR01 && CR13 && CR20 &&"
415,disruptor,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR09 && CR11 &&"
416,disruptor,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR14 && CR10 && CR09 &&"
417,disruptor,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
418,disruptor,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR26 && CR16 && CR18 && CR09 && CR19 && CR01 && CR20 &&"
419,disruptor,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
420,disruptor,CR15,<InstanceType-Lifeline{818}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
421,disruptor,CR16,<InstanceType-Message{821}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR18 && CR17 && CR19 && CR27 && CR01 && CR13 && CR20 &&"
422,disruptor,CR17,<InstanceType-Lifeline{818}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
423,disruptor,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR09 && CR19 && CR01 && CR13 && CR20 &&"
424,disruptor,CR19,<InstanceType-Message{821}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR26 && CR16 && CR18 && CR09 && CR01 && CR13 && CR20 &&"
425,disruptor,CR20,<InstanceType-Message{821}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR18 && CR09 && CR19 && CR08 && CR01 && CR13 &&"
426,disruptor,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
427,disruptor,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
428,disruptor,CR23,<InstanceType-InteractionFragment{817}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
429,disruptor,CR24,<InstanceType-InteractionFragment{817}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
430,disruptor,CR25,<InstanceType-CreateLinkObjectAction{1174}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
431,disruptor,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR19 && CR27 && CR01 && CR13 &&"
432,disruptor,CR27,<InstanceType-Lifeline{818}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR16 && CR15 && CR01 &&"
433,jgitFlow,CR01,<InstanceType-Message{856}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR20 && CR13 && CR09 && CR27 && CR15 && CR18 && CR19 && CR26 && CR17 &&"
434,jgitFlow,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
435,jgitFlow,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
436,jgitFlow,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
437,jgitFlow,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
438,jgitFlow,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
439,jgitFlow,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
440,jgitFlow,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
441,jgitFlow,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR01 && CR20 && CR13 && CR10 && CR14 && CR18 && CR19 && CR11 && CR26 &&"
442,jgitFlow,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
443,jgitFlow,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR10 && CR14 && CR02 &&"
444,jgitFlow,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
445,jgitFlow,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR01 && CR20 && CR09 && CR18 && CR19 && CR26 &&"
446,jgitFlow,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
447,jgitFlow,CR15,<InstanceType-Lifeline{853}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
448,jgitFlow,CR16,<InstanceType-Message{856}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR01 && CR20 && CR13 && CR27 && CR15 && CR18 && CR19 && CR17 &&"
449,jgitFlow,CR17,<InstanceType-Lifeline{853}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
450,jgitFlow,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR01 && CR20 && CR13 && CR09 && CR19 &&"
451,jgitFlow,CR19,<InstanceType-Message{856}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR01 && CR20 && CR13 && CR09 && CR18 && CR26 &&"
452,jgitFlow,CR20,<InstanceType-Message{856}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR01 && CR13 && CR09 && CR08 && CR18 && CR19 &&"
453,jgitFlow,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
454,jgitFlow,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR21 && CR24 &&"
455,jgitFlow,CR23,<InstanceType-InteractionFragment{852}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR22 &&"
456,jgitFlow,CR24,<InstanceType-InteractionFragment{852}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
457,jgitFlow,CR25,<InstanceType-CreateLinkObjectAction{981}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
458,jgitFlow,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR13 && CR09 && CR27 && CR19 &&"
459,jgitFlow,CR27,<InstanceType-Lifeline{853}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR01 && CR15 && CR26 &&"
460,spadiesProcessor,CR01,<InstanceType-Message{842}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR17 && CR09 && CR13 && CR27 && CR16 && CR18 && CR19 && CR15 && CR20 && CR26 &&"
461,spadiesProcessor,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
462,spadiesProcessor,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
463,spadiesProcessor,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR02 && CR03 &&"
464,spadiesProcessor,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
465,spadiesProcessor,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
466,spadiesProcessor,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
467,spadiesProcessor,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
468,spadiesProcessor,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR10 && CR01 && CR13 && CR18 && CR11 && CR14 && CR19 && CR20 && CR26 &&"
469,spadiesProcessor,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
470,spadiesProcessor,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR02 && CR10 && CR14 &&"
471,spadiesProcessor,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
472,spadiesProcessor,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR01 && CR16 && CR18 && CR19 && CR20 && CR26 &&"
473,spadiesProcessor,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
474,spadiesProcessor,CR15,<InstanceType-Lifeline{846}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
475,spadiesProcessor,CR16,<InstanceType-Message{842}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR17 && CR01 && CR13 && CR27 && CR18 && CR19 && CR15 && CR20 &&"
476,spadiesProcessor,CR17,<InstanceType-Lifeline{846}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
477,spadiesProcessor,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR01 && CR13 && CR16 && CR19 && CR20 &&"
478,spadiesProcessor,CR19,<InstanceType-Message{842}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR01 && CR13 && CR16 && CR18 && CR20 && CR26 &&"
479,spadiesProcessor,CR20,<InstanceType-Message{842}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR08 && CR01 && CR13 && CR16 && CR18 && CR19 &&"
480,spadiesProcessor,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
481,spadiesProcessor,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
482,spadiesProcessor,CR23,<InstanceType-InteractionFragment{845}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
483,spadiesProcessor,CR24,<InstanceType-InteractionFragment{845}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
484,spadiesProcessor,CR25,<InstanceType-CreateLinkObjectAction{1113}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
485,spadiesProcessor,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR01 && CR13 && CR27 && CR19 &&"
486,spadiesProcessor,CR27,<InstanceType-Lifeline{846}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR16 && CR15 && CR26 &&"
487,klikkitAndroid,CR01,<InstanceType-Message{714}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR17 && CR19 && CR16 && CR26 && CR13 && CR20 && CR15 && CR27 && CR09 && CR18 &&"
488,klikkitAndroid,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
489,klikkitAndroid,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
490,klikkitAndroid,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
491,klikkitAndroid,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
492,klikkitAndroid,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
493,klikkitAndroid,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
494,klikkitAndroid,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
495,klikkitAndroid,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR19 && CR26 && CR01 && CR14 && CR10 && CR13 && CR20 && CR11 && CR18 &&"
496,klikkitAndroid,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR11 && CR09 &&"
497,klikkitAndroid,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR14 && CR10 && CR09 &&"
498,klikkitAndroid,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
499,klikkitAndroid,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR19 && CR16 && CR26 && CR01 && CR20 && CR09 && CR18 &&"
500,klikkitAndroid,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR11 && CR09 &&"
501,klikkitAndroid,CR15,<InstanceType-Lifeline{711}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
502,klikkitAndroid,CR16,<InstanceType-Message{714}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR17 && CR19 && CR01 && CR13 && CR20 && CR15 && CR27 && CR18 &&"
503,klikkitAndroid,CR17,<InstanceType-Lifeline{711}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
504,klikkitAndroid,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR19 && CR16 && CR01 && CR13 && CR20 && CR09 &&"
505,klikkitAndroid,CR19,<InstanceType-Message{714}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR26 && CR01 && CR13 && CR20 && CR09 && CR18 &&"
506,klikkitAndroid,CR20,<InstanceType-Message{714}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR19 && CR16 && CR01 && CR13 && CR09 && CR08 && CR18 &&"
507,klikkitAndroid,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
508,klikkitAndroid,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
509,klikkitAndroid,CR23,<InstanceType-InteractionFragment{710}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR22 &&"
510,klikkitAndroid,CR24,<InstanceType-InteractionFragment{710}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
511,klikkitAndroid,CR25,<InstanceType-CreateLinkObjectAction{1079}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
512,klikkitAndroid,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR01 && CR13 && CR27 && CR09 &&"
513,klikkitAndroid,CR27,<InstanceType-Lifeline{711}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR01 && CR15 &&"
514,LetsChat,CR01,<InstanceType-Message{856}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR19 && CR15 && CR13 && CR16 && CR26 && CR09 && CR27 && CR18 && CR20 && CR17 &&"
515,LetsChat,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR11 && CR04 &&"
516,LetsChat,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
517,LetsChat,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
518,LetsChat,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
519,LetsChat,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
520,LetsChat,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
521,LetsChat,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
522,LetsChat,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR19 && CR13 && CR01 && CR26 && CR14 && CR18 && CR20 && CR10 && CR11 &&"
523,LetsChat,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR09 && CR11 &&"
524,LetsChat,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR14 && CR09 && CR10 &&"
525,LetsChat,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
526,LetsChat,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR19 && CR01 && CR16 && CR26 && CR09 && CR18 && CR20 &&"
527,LetsChat,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
528,LetsChat,CR15,<InstanceType-Lifeline{860}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR16 && CR27 &&"
529,LetsChat,CR16,<InstanceType-Message{856}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR19 && CR15 && CR13 && CR01 && CR27 && CR18 && CR20 && CR17 &&"
530,LetsChat,CR17,<InstanceType-Lifeline{860}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
531,LetsChat,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR19 && CR13 && CR01 && CR16 && CR09 && CR20 &&"
532,LetsChat,CR19,<InstanceType-Message{856}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR01 && CR16 && CR26 && CR09 && CR18 && CR20 &&"
533,LetsChat,CR20,<InstanceType-Message{856}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR19 && CR13 && CR08 && CR01 && CR16 && CR09 && CR18 &&"
534,LetsChat,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
535,LetsChat,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
536,LetsChat,CR23,<InstanceType-InteractionFragment{859}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
537,LetsChat,CR24,<InstanceType-InteractionFragment{859}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
538,LetsChat,CR25,<InstanceType-CreateLinkObjectAction{956}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
539,LetsChat,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR13 && CR01 && CR09 && CR27 &&"
540,LetsChat,CR27,<InstanceType-Lifeline{860}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR01 && CR16 && CR26 &&"
541,absmis,CR01,<InstanceType-Message{703}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR20 && CR19 && CR27 && CR16 && CR13 && CR26 && CR09 && CR17 && CR15 && CR18 &&"
542,absmis,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR04 && CR03 &&"
543,absmis,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR04 && CR02 &&"
544,absmis,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
545,absmis,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
546,absmis,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
547,absmis,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
548,absmis,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
549,absmis,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR20 && CR19 && CR10 && CR13 && CR26 && CR14 && CR11 && CR01 && CR18 &&"
550,absmis,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR09 && CR11 &&"
551,absmis,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR14 && CR09 && CR02 &&"
552,absmis,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
553,absmis,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR19 && CR16 && CR26 && CR09 && CR01 && CR18 &&"
554,absmis,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
555,absmis,CR15,<InstanceType-Lifeline{707}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
556,absmis,CR16,<InstanceType-Message{703}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR20 && CR19 && CR27 && CR13 && CR17 && CR15 && CR01 && CR18 &&"
557,absmis,CR17,<InstanceType-Lifeline{707}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
558,absmis,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR19 && CR16 && CR13 && CR09 && CR01 &&"
559,absmis,CR19,<InstanceType-Message{703}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR16 && CR13 && CR26 && CR09 && CR01 && CR18 &&"
560,absmis,CR20,<InstanceType-Message{703}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR19 && CR16 && CR13 && CR09 && CR08 && CR01 && CR18 &&"
561,absmis,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
562,absmis,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
563,absmis,CR23,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
564,absmis,CR24,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
565,absmis,CR25,<InstanceType-CreateLinkObjectAction{918}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
566,absmis,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR27 && CR13 && CR09 && CR01 &&"
567,absmis,CR27,<InstanceType-Lifeline{707}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR15 && CR01 &&"
568,mj,CR01,<InstanceType-Message{857}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR09 && CR17 && CR26 && CR27 && CR13 && CR18 && CR19 && CR15 && CR20 &&"
569,mj,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
570,mj,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
571,mj,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
572,mj,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
573,mj,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
574,mj,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
575,mj,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
576,mj,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR10 && CR26 && CR13 && CR01 && CR18 && CR11 && CR19 && CR14 && CR20 &&"
577,mj,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
578,mj,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR09 && CR02 && CR14 &&"
579,mj,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
580,mj,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR09 && CR26 && CR01 && CR18 && CR19 && CR20 &&"
581,mj,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
582,mj,CR15,<InstanceType-Lifeline{861}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
583,mj,CR16,<InstanceType-Message{857}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR17 && CR27 && CR13 && CR01 && CR18 && CR19 && CR15 && CR20 &&"
584,mj,CR17,<InstanceType-Lifeline{861}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
585,mj,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR09 && CR13 && CR01 && CR19 && CR20 &&"
586,mj,CR19,<InstanceType-Message{857}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR09 && CR26 && CR13 && CR01 && CR18 && CR20 &&"
587,mj,CR20,<InstanceType-Message{857}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR09 && CR08 && CR13 && CR01 && CR18 && CR19 &&"
588,mj,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
589,mj,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
590,mj,CR23,<InstanceType-InteractionFragment{860}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
591,mj,CR24,<InstanceType-InteractionFragment{860}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
592,mj,CR25,<InstanceType-CreateLinkObjectAction{1180}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
593,mj,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR27 && CR13 && CR01 && CR19 &&"
594,mj,CR27,<InstanceType-Lifeline{861}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR01 && CR15 &&"
595,weCareApp,CR01,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR19 && CR09 && CR16 && CR17 && CR26 && CR18 && CR20 && CR27 && CR15 &&"
596,weCareApp,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
597,weCareApp,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
598,weCareApp,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
599,weCareApp,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
600,weCareApp,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
601,weCareApp,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
602,weCareApp,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
603,weCareApp,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR14 && CR19 && CR11 && CR26 && CR18 && CR01 && CR10 && CR20 &&"
604,weCareApp,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR11 && CR09 &&"
605,weCareApp,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR14 && CR09 && CR02 && CR10 &&"
606,weCareApp,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
607,weCareApp,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR19 && CR09 && CR16 && CR26 && CR18 && CR01 && CR20 &&"
608,weCareApp,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR09 && CR10 &&"
609,weCareApp,CR15,<InstanceType-Lifeline{707}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
610,weCareApp,CR16,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR19 && CR17 && CR18 && CR01 && CR20 && CR27 && CR15 &&"
611,weCareApp,CR17,<InstanceType-Lifeline{707}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
612,weCareApp,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR19 && CR09 && CR16 && CR01 && CR20 &&"
613,weCareApp,CR19,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR09 && CR16 && CR26 && CR18 && CR01 && CR20 &&"
614,weCareApp,CR20,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR19 && CR09 && CR16 && CR18 && CR01 && CR08 &&"
615,weCareApp,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
616,weCareApp,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
617,weCareApp,CR23,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
618,weCareApp,CR24,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
619,weCareApp,CR25,<InstanceType-CreateLinkObjectAction{1096}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
620,weCareApp,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR19 && CR09 && CR01 && CR27 &&"
621,weCareApp,CR27,<InstanceType-Lifeline{707}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR01 && CR15 &&"
622,gizmoball,CR01,<InstanceType-Message{852}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR18 && CR17 && CR13 && CR19 && CR15 && CR27 && CR09 && CR26 && CR20 &&"
623,gizmoball,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
624,gizmoball,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
625,gizmoball,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
626,gizmoball,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
627,gizmoball,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
628,gizmoball,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
629,gizmoball,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
630,gizmoball,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR18 && CR13 && CR19 && CR14 && CR10 && CR01 && CR26 && CR11 && CR20 &&"
631,gizmoball,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR09 && CR11 &&"
632,gizmoball,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR14 && CR10 && CR09 && CR02 &&"
633,gizmoball,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
634,gizmoball,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR18 && CR19 && CR09 && CR01 && CR26 && CR20 &&"
635,gizmoball,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
636,gizmoball,CR15,<InstanceType-Lifeline{849}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
637,gizmoball,CR16,<InstanceType-Message{852}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR18 && CR17 && CR13 && CR19 && CR15 && CR27 && CR01 && CR20 &&"
638,gizmoball,CR17,<InstanceType-Lifeline{849}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
639,gizmoball,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR13 && CR19 && CR09 && CR01 && CR20 &&"
640,gizmoball,CR19,<InstanceType-Message{852}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR18 && CR13 && CR09 && CR01 && CR26 && CR20 &&"
641,gizmoball,CR20,<InstanceType-Message{852}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR08 && CR16 && CR18 && CR13 && CR19 && CR09 && CR01 &&"
642,gizmoball,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
643,gizmoball,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR23 &&"
644,gizmoball,CR23,<InstanceType-InteractionFragment{848}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
645,gizmoball,CR24,<InstanceType-InteractionFragment{848}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
646,gizmoball,CR25,<InstanceType-CreateLinkObjectAction{1139}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
647,gizmoball,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR19 && CR27 && CR09 && CR01 &&"
648,gizmoball,CR27,<InstanceType-Lifeline{849}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR15 && CR01 && CR26 &&"
649,listentogether,CR01,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR17 && CR20 && CR27 && CR16 && CR19 && CR09 && CR18 && CR26 && CR13 &&"
650,listentogether,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
651,listentogether,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
652,listentogether,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
653,listentogether,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
654,listentogether,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
655,listentogether,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
656,listentogether,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
657,listentogether,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR20 && CR19 && CR11 && CR18 && CR26 && CR10 && CR14 && CR13 && CR01 &&"
658,listentogether,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR09 && CR14 &&"
659,listentogether,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR10 && CR14 && CR02 &&"
660,listentogether,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
661,listentogether,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR16 && CR19 && CR09 && CR18 && CR26 && CR01 &&"
662,listentogether,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR09 && CR10 &&"
663,listentogether,CR15,<InstanceType-Lifeline{704}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
664,listentogether,CR16,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR17 && CR20 && CR27 && CR19 && CR18 && CR13 && CR01 &&"
665,listentogether,CR17,<InstanceType-Lifeline{704}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
666,listentogether,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR16 && CR19 && CR09 && CR13 && CR01 &&"
667,listentogether,CR19,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR16 && CR09 && CR18 && CR26 && CR13 && CR01 &&"
668,listentogether,CR20,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR19 && CR09 && CR08 && CR18 && CR13 && CR01 &&"
669,listentogether,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
670,listentogether,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR23 &&"
671,listentogether,CR23,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
672,listentogether,CR24,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
673,listentogether,CR25,<InstanceType-CreateLinkObjectAction{1206}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
674,listentogether,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR27 && CR19 && CR09 && CR13 && CR01 &&"
675,listentogether,CR27,<InstanceType-Lifeline{704}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR16 && CR26 && CR01 &&"
676,propsyBackend,CR01,<InstanceType-Message{824}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR18 && CR19 && CR13 && CR09 && CR27 && CR16 && CR26 && CR15 && CR20 && CR17 &&"
677,propsyBackend,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR11 && CR04 &&"
678,propsyBackend,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
679,propsyBackend,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR03 && CR02 &&"
680,propsyBackend,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
681,propsyBackend,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
682,propsyBackend,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
683,propsyBackend,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
684,propsyBackend,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR01 && CR18 && CR19 && CR13 && CR10 && CR26 && CR14 && CR20 && CR11 &&"
685,propsyBackend,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
686,propsyBackend,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR09 && CR02 && CR14 &&"
687,propsyBackend,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
688,propsyBackend,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR01 && CR18 && CR19 && CR09 && CR16 && CR26 && CR20 &&"
689,propsyBackend,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
690,propsyBackend,CR15,<InstanceType-Lifeline{712}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
691,propsyBackend,CR16,<InstanceType-Message{824}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR01 && CR18 && CR19 && CR13 && CR27 && CR15 && CR20 && CR17 &&"
692,propsyBackend,CR17,<InstanceType-Lifeline{712}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
693,propsyBackend,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR01 && CR19 && CR13 && CR09 && CR16 && CR20 &&"
694,propsyBackend,CR19,<InstanceType-Message{824}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR01 && CR18 && CR13 && CR09 && CR16 && CR26 && CR20 &&"
695,propsyBackend,CR20,<InstanceType-Message{824}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR01 && CR18 && CR19 && CR13 && CR09 && CR08 && CR16 &&"
696,propsyBackend,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
697,propsyBackend,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
698,propsyBackend,CR23,<InstanceType-InteractionFragment{713}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
699,propsyBackend,CR24,<InstanceType-InteractionFragment{713}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
700,propsyBackend,CR25,<InstanceType-CreateLinkObjectAction{1144}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
701,propsyBackend,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR19 && CR13 && CR09 && CR27 &&"
702,propsyBackend,CR27,<InstanceType-Lifeline{712}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR16 && CR26 && CR15 &&"
703,SecureEventsForBerlin,CR01,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR20 && CR19 && CR26 && CR18 && CR17 && CR13 && CR15 && CR27 && CR16 && CR09 &&"
704,SecureEventsForBerlin,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR04 && CR03 &&"
705,SecureEventsForBerlin,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
706,SecureEventsForBerlin,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR02 && CR03 &&"
707,SecureEventsForBerlin,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
708,SecureEventsForBerlin,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
709,SecureEventsForBerlin,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
710,SecureEventsForBerlin,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
711,SecureEventsForBerlin,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR20 && CR19 && CR26 && CR10 && CR14 && CR18 && CR11 && CR13 && CR01 &&"
712,SecureEventsForBerlin,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR11 && CR09 &&"
713,SecureEventsForBerlin,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR02 && CR14 && CR09 &&"
714,SecureEventsForBerlin,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
715,SecureEventsForBerlin,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR19 && CR26 && CR18 && CR16 && CR01 && CR09 &&"
716,SecureEventsForBerlin,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR11 && CR09 &&"
717,SecureEventsForBerlin,CR15,<InstanceType-Lifeline{704}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
718,SecureEventsForBerlin,CR16,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR20 && CR19 && CR18 && CR17 && CR13 && CR15 && CR27 && CR01 &&"
719,SecureEventsForBerlin,CR17,<InstanceType-Lifeline{704}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
720,SecureEventsForBerlin,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR19 && CR13 && CR16 && CR01 && CR09 &&"
721,SecureEventsForBerlin,CR19,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR26 && CR18 && CR13 && CR16 && CR01 && CR09 &&"
722,SecureEventsForBerlin,CR20,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR08 && CR19 && CR18 && CR13 && CR16 && CR01 && CR09 &&"
723,SecureEventsForBerlin,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
724,SecureEventsForBerlin,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
725,SecureEventsForBerlin,CR23,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR22 && CR24 && CR21 &&"
726,SecureEventsForBerlin,CR24,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
727,SecureEventsForBerlin,CR25,<InstanceType-CreateLinkObjectAction{1167}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
728,SecureEventsForBerlin,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR13 && CR27 && CR01 && CR09 &&"
729,SecureEventsForBerlin,CR27,<InstanceType-Lifeline{704}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR15 && CR16 && CR01 &&"
730,group8,CR01,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR16 && CR15 && CR18 && CR09 && CR17 && CR19 && CR20 && CR26 && CR27 &&"
731,group8,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR04 && CR03 &&"
732,group8,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
733,group8,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
734,group8,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
735,group8,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
736,group8,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
737,group8,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
738,group8,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR11 && CR18 && CR14 && CR19 && CR20 && CR10 && CR26 && CR01 &&"
739,group8,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR09 && CR14 &&"
740,group8,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR02 && CR14 && CR10 &&"
741,group8,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
742,group8,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR18 && CR09 && CR19 && CR20 && CR26 && CR01 &&"
743,group8,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR09 && CR10 &&"
744,group8,CR15,<InstanceType-Lifeline{704}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
745,group8,CR16,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR15 && CR18 && CR17 && CR19 && CR20 && CR27 && CR01 &&"
746,group8,CR17,<InstanceType-Lifeline{704}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
747,group8,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR16 && CR09 && CR19 && CR20 && CR01 &&"
748,group8,CR19,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR16 && CR18 && CR09 && CR20 && CR26 && CR01 &&"
749,group8,CR20,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR16 && CR18 && CR09 && CR19 && CR08 && CR01 &&"
750,group8,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
751,group8,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
752,group8,CR23,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR22 && CR24 && CR21 &&"
753,group8,CR24,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
754,group8,CR25,<InstanceType-CreateLinkObjectAction{1206}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
755,group8,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR09 && CR19 && CR27 && CR01 &&"
756,group8,CR27,<InstanceType-Lifeline{704}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR15 && CR26 && CR01 &&"
757,sopraServer,CR01,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR09 && CR18 && CR19 && CR27 && CR15 && CR16 && CR17 && CR26 && CR13 && CR20 &&"
758,sopraServer,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
759,sopraServer,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
760,sopraServer,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
761,sopraServer,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
762,sopraServer,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
763,sopraServer,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
764,sopraServer,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
765,sopraServer,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR18 && CR01 && CR14 && CR10 && CR19 && CR26 && CR13 && CR20 && CR11 &&"
766,sopraServer,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
767,sopraServer,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR14 && CR10 && CR02 &&"
768,sopraServer,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
769,sopraServer,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR18 && CR01 && CR19 && CR16 && CR26 && CR20 &&"
770,sopraServer,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
771,sopraServer,CR15,<InstanceType-Lifeline{707}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
772,sopraServer,CR16,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR18 && CR01 && CR19 && CR27 && CR15 && CR17 && CR13 && CR20 &&"
773,sopraServer,CR17,<InstanceType-Lifeline{707}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
774,sopraServer,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR01 && CR19 && CR16 && CR13 && CR20 &&"
775,sopraServer,CR19,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR18 && CR01 && CR16 && CR26 && CR13 && CR20 &&"
776,sopraServer,CR20,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR18 && CR08 && CR01 && CR19 && CR16 && CR13 &&"
777,sopraServer,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
778,sopraServer,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR21 && CR24 &&"
779,sopraServer,CR23,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR22 && CR21 && CR24 &&"
780,sopraServer,CR24,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
781,sopraServer,CR25,<InstanceType-CreateLinkObjectAction{1005}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
782,sopraServer,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR01 && CR19 && CR27 && CR13 &&"
783,sopraServer,CR27,<InstanceType-Lifeline{707}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR15 && CR16 && CR26 &&"
784,testesPoc,CR01,<InstanceType-Message{823}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR17 && CR20 && CR09 && CR19 && CR16 && CR27 && CR18 && CR13 && CR26 &&"
785,testesPoc,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
786,testesPoc,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
787,testesPoc,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR03 && CR02 &&"
788,testesPoc,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
789,testesPoc,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
790,testesPoc,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
791,testesPoc,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
792,testesPoc,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR11 && CR20 && CR14 && CR10 && CR19 && CR01 && CR18 && CR13 && CR26 &&"
793,testesPoc,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
794,testesPoc,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR14 && CR09 && CR10 && CR02 &&"
795,testesPoc,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
796,testesPoc,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR09 && CR19 && CR16 && CR01 && CR18 && CR26 &&"
797,testesPoc,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR09 && CR10 &&"
798,testesPoc,CR15,<InstanceType-Lifeline{820}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
799,testesPoc,CR16,<InstanceType-Message{823}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR17 && CR20 && CR19 && CR01 && CR27 && CR18 && CR13 &&"
800,testesPoc,CR17,<InstanceType-Lifeline{820}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
801,testesPoc,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR09 && CR19 && CR16 && CR01 && CR13 &&"
802,testesPoc,CR19,<InstanceType-Message{823}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR09 && CR16 && CR01 && CR18 && CR13 && CR26 &&"
803,testesPoc,CR20,<InstanceType-Message{823}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR19 && CR16 && CR01 && CR08 && CR18 && CR13 &&"
804,testesPoc,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
805,testesPoc,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
806,testesPoc,CR23,<InstanceType-InteractionFragment{819}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
807,testesPoc,CR24,<InstanceType-InteractionFragment{819}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
808,testesPoc,CR25,<InstanceType-CreateLinkObjectAction{1186}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
809,testesPoc,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR19 && CR01 && CR27 && CR13 &&"
810,testesPoc,CR27,<InstanceType-Lifeline{820}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR16 && CR01 && CR26 &&"
811,p2pserver,CR01,<InstanceType-Message{805}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR09 && CR26 && CR19 && CR27 && CR18 && CR15 && CR17 && CR20 && CR13 &&"
812,p2pserver,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
813,p2pserver,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
814,p2pserver,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
815,p2pserver,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
816,p2pserver,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
817,p2pserver,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
818,p2pserver,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
819,p2pserver,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR26 && CR19 && CR18 && CR14 && CR01 && CR11 && CR20 && CR10 && CR13 &&"
820,p2pserver,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
821,p2pserver,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR02 && CR14 && CR10 &&"
822,p2pserver,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
823,p2pserver,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR09 && CR26 && CR19 && CR18 && CR01 && CR20 &&"
824,p2pserver,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
825,p2pserver,CR15,<InstanceType-Lifeline{809}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
826,p2pserver,CR16,<InstanceType-Message{805}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR19 && CR27 && CR18 && CR15 && CR01 && CR17 && CR20 && CR13 &&"
827,p2pserver,CR17,<InstanceType-Lifeline{809}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
828,p2pserver,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR09 && CR19 && CR01 && CR20 && CR13 &&"
829,p2pserver,CR19,<InstanceType-Message{805}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR09 && CR26 && CR18 && CR01 && CR20 && CR13 &&"
830,p2pserver,CR20,<InstanceType-Message{805}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR09 && CR19 && CR08 && CR18 && CR01 && CR13 &&"
831,p2pserver,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
832,p2pserver,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
833,p2pserver,CR23,<InstanceType-InteractionFragment{808}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
834,p2pserver,CR24,<InstanceType-InteractionFragment{808}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
835,p2pserver,CR25,<InstanceType-CreateLinkObjectAction{1078}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
836,p2pserver,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR19 && CR27 && CR01 && CR13 &&"
837,p2pserver,CR27,<InstanceType-Lifeline{809}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR15 && CR01 &&"
838,untitledmmo,CR01,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR09 && CR13 && CR18 && CR26 && CR19 && CR20 && CR17 && CR27 && CR15 && CR16 &&"
839,untitledmmo,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
840,untitledmmo,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
841,untitledmmo,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
842,untitledmmo,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
843,untitledmmo,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
844,untitledmmo,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
845,untitledmmo,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
846,untitledmmo,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR10 && CR14 && CR13 && CR11 && CR18 && CR26 && CR19 && CR20 && CR01 &&"
847,untitledmmo,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR09 && CR11 &&"
848,untitledmmo,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR14 && CR09 && CR02 &&"
849,untitledmmo,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
850,untitledmmo,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR18 && CR26 && CR19 && CR20 && CR16 && CR01 &&"
851,untitledmmo,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
852,untitledmmo,CR15,<InstanceType-Lifeline{704}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
853,untitledmmo,CR16,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR18 && CR19 && CR20 && CR17 && CR27 && CR15 && CR01 &&"
854,untitledmmo,CR17,<InstanceType-Lifeline{704}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
855,untitledmmo,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR13 && CR19 && CR20 && CR16 && CR01 &&"
856,untitledmmo,CR19,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR13 && CR18 && CR26 && CR20 && CR16 && CR01 &&"
857,untitledmmo,CR20,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR08 && CR09 && CR13 && CR18 && CR19 && CR16 && CR01 &&"
858,untitledmmo,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
859,untitledmmo,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR21 && CR24 &&"
860,untitledmmo,CR23,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR22 &&"
861,untitledmmo,CR24,<InstanceType-InteractionFragment{703}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
862,untitledmmo,CR25,<InstanceType-CreateLinkObjectAction{1150}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
863,untitledmmo,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR13 && CR19 && CR27 && CR01 &&"
864,untitledmmo,CR27,<InstanceType-Lifeline{704}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR15 && CR16 && CR01 &&"
865,sistrancito,CR01,<InstanceType-Message{855}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR17 && CR18 && CR19 && CR09 && CR27 && CR16 && CR26 && CR20 && CR15 &&"
866,sistrancito,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
867,sistrancito,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
868,sistrancito,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
869,sistrancito,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
870,sistrancito,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
871,sistrancito,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
872,sistrancito,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
873,sistrancito,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR18 && CR10 && CR19 && CR01 && CR14 && CR26 && CR20 && CR11 &&"
874,sistrancito,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
875,sistrancito,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR09 && CR02 && CR14 &&"
876,sistrancito,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
877,sistrancito,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR18 && CR19 && CR09 && CR01 && CR16 && CR26 && CR20 &&"
878,sistrancito,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
879,sistrancito,CR15,<InstanceType-Lifeline{859}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
880,sistrancito,CR16,<InstanceType-Message{855}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR17 && CR18 && CR19 && CR01 && CR27 && CR20 && CR15 &&"
881,sistrancito,CR17,<InstanceType-Lifeline{859}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
882,sistrancito,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR19 && CR09 && CR01 && CR16 && CR20 &&"
883,sistrancito,CR19,<InstanceType-Message{855}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR18 && CR09 && CR01 && CR16 && CR26 && CR20 &&"
884,sistrancito,CR20,<InstanceType-Message{855}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR18 && CR19 && CR09 && CR01 && CR08 && CR16 &&"
885,sistrancito,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
886,sistrancito,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
887,sistrancito,CR23,<InstanceType-InteractionFragment{858}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
888,sistrancito,CR24,<InstanceType-InteractionFragment{858}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
889,sistrancito,CR25,<InstanceType-CreateLinkObjectAction{1123}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
890,sistrancito,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR19 && CR09 && CR01 && CR27 &&"
891,sistrancito,CR27,<InstanceType-Lifeline{859}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR16 && CR26 && CR15 &&"
892,FlappyBird,CR01,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR09 && CR13 && CR18 && CR19 && CR17 && CR27 && CR16 && CR26 && CR20 &&"
893,FlappyBird,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
894,FlappyBird,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
895,FlappyBird,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR02 && CR03 &&"
896,FlappyBird,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
897,FlappyBird,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
898,FlappyBird,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
899,FlappyBird,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
900,FlappyBird,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR18 && CR19 && CR11 && CR14 && CR26 && CR10 && CR20 && CR01 &&"
901,FlappyBird,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
902,FlappyBird,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR02 && CR14 && CR10 &&"
903,FlappyBird,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
904,FlappyBird,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR18 && CR19 && CR16 && CR26 && CR20 && CR01 &&"
905,FlappyBird,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
906,FlappyBird,CR15,<InstanceType-Lifeline{707}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
907,FlappyBird,CR16,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR13 && CR18 && CR19 && CR17 && CR27 && CR20 && CR01 &&"
908,FlappyBird,CR17,<InstanceType-Lifeline{707}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
909,FlappyBird,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR13 && CR19 && CR16 && CR20 && CR01 &&"
910,FlappyBird,CR19,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR13 && CR18 && CR16 && CR26 && CR20 && CR01 &&"
911,FlappyBird,CR20,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR13 && CR18 && CR19 && CR08 && CR16 && CR01 &&"
912,FlappyBird,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
913,FlappyBird,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
914,FlappyBird,CR23,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
915,FlappyBird,CR24,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
916,FlappyBird,CR25,<InstanceType-CreateLinkObjectAction{894}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
917,FlappyBird,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR13 && CR19 && CR27 && CR01 &&"
918,FlappyBird,CR27,<InstanceType-Lifeline{707}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR16 && CR26 && CR01 &&"
919,MAAO,CR01,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR27 && CR20 && CR16 && CR09 && CR13 && CR19 && CR18 && CR26 && CR17 &&"
920,MAAO,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
921,MAAO,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
922,MAAO,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR02 && CR03 &&"
923,MAAO,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
924,MAAO,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
925,MAAO,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
926,MAAO,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
927,MAAO,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR20 && CR11 && CR14 && CR13 && CR01 && CR19 && CR18 && CR26 && CR10 &&"
928,MAAO,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
929,MAAO,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR14 && CR09 && CR02 && CR10 &&"
930,MAAO,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
931,MAAO,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR16 && CR09 && CR01 && CR19 && CR18 && CR26 &&"
932,MAAO,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR09 && CR10 &&"
933,MAAO,CR15,<InstanceType-Lifeline{711}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR16 && CR01 &&"
934,MAAO,CR16,<InstanceType-Message{707}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR27 && CR20 && CR13 && CR01 && CR19 && CR18 && CR17 &&"
935,MAAO,CR17,<InstanceType-Lifeline{711}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
936,MAAO,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR16 && CR09 && CR13 && CR01 && CR19 &&"
937,MAAO,CR19,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR16 && CR09 && CR13 && CR01 && CR18 && CR26 &&"
938,MAAO,CR20,<InstanceType-Message{707}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR09 && CR13 && CR08 && CR01 && CR19 && CR18 &&"
939,MAAO,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
940,MAAO,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
941,MAAO,CR23,<InstanceType-InteractionFragment{710}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
942,MAAO,CR24,<InstanceType-InteractionFragment{710}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
943,MAAO,CR25,<InstanceType-CreateLinkObjectAction{1080}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
944,MAAO,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR27 && CR09 && CR13 && CR01 && CR19 &&"
945,MAAO,CR27,<InstanceType-Lifeline{711}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR16 && CR01 && CR26 &&"
946,umlAthena,CR01,<InstanceType-Message{815}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR18 && CR09 && CR15 && CR27 && CR26 && CR17 && CR16 && CR13 && CR19 && CR20 &&"
947,umlAthena,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
948,umlAthena,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
949,umlAthena,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
950,umlAthena,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
951,umlAthena,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
952,umlAthena,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
953,umlAthena,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
954,umlAthena,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR18 && CR01 && CR26 && CR14 && CR10 && CR13 && CR11 && CR19 && CR20 &&"
955,umlAthena,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
956,umlAthena,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR02 && CR14 && CR10 &&"
957,umlAthena,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
958,umlAthena,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR18 && CR09 && CR01 && CR26 && CR16 && CR19 && CR20 &&"
959,umlAthena,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
960,umlAthena,CR15,<InstanceType-Lifeline{703}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
961,umlAthena,CR16,<InstanceType-Message{815}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR18 && CR15 && CR01 && CR27 && CR17 && CR13 && CR19 && CR20 &&"
962,umlAthena,CR17,<InstanceType-Lifeline{703}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
963,umlAthena,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR01 && CR16 && CR13 && CR19 && CR20 &&"
964,umlAthena,CR19,<InstanceType-Message{815}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR18 && CR09 && CR01 && CR26 && CR16 && CR13 && CR20 &&"
965,umlAthena,CR20,<InstanceType-Message{815}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR18 && CR09 && CR01 && CR16 && CR13 && CR08 && CR19 &&"
966,umlAthena,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
967,umlAthena,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR23 && CR24 && CR21 &&"
968,umlAthena,CR23,<InstanceType-InteractionFragment{704}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
969,umlAthena,CR24,<InstanceType-InteractionFragment{704}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
970,umlAthena,CR25,<InstanceType-CreateLinkObjectAction{1014}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
971,umlAthena,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR01 && CR27 && CR13 && CR19 &&"
972,umlAthena,CR27,<InstanceType-Lifeline{703}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR01 && CR26 && CR16 &&"
973,AutoCRUD,CR01,<InstanceType-Message{813}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR27 && CR09 && CR20 && CR19 && CR18 && CR16 && CR26 && CR17 && CR15 && CR13 &&"
974,AutoCRUD,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
975,AutoCRUD,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
976,AutoCRUD,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
977,AutoCRUD,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
978,AutoCRUD,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
979,AutoCRUD,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
980,AutoCRUD,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
981,AutoCRUD,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR20 && CR01 && CR11 && CR19 && CR18 && CR10 && CR26 && CR14 && CR13 &&"
982,AutoCRUD,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
983,AutoCRUD,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR02 && CR10 && CR14 &&"
984,AutoCRUD,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
985,AutoCRUD,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR20 && CR01 && CR19 && CR18 && CR16 && CR26 &&"
986,AutoCRUD,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
987,AutoCRUD,CR15,<InstanceType-Lifeline{817}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR01 && CR16 &&"
988,AutoCRUD,CR16,<InstanceType-Message{813}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR27 && CR20 && CR01 && CR19 && CR18 && CR17 && CR15 && CR13 &&"
989,AutoCRUD,CR17,<InstanceType-Lifeline{817}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
990,AutoCRUD,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR20 && CR01 && CR19 && CR16 && CR13 &&"
991,AutoCRUD,CR19,<InstanceType-Message{813}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR20 && CR01 && CR18 && CR16 && CR26 && CR13 &&"
992,AutoCRUD,CR20,<InstanceType-Message{813}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR08 && CR01 && CR19 && CR18 && CR16 && CR13 &&"
993,AutoCRUD,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
994,AutoCRUD,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
995,AutoCRUD,CR23,<InstanceType-InteractionFragment{816}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR22 && CR21 &&"
996,AutoCRUD,CR24,<InstanceType-InteractionFragment{816}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
997,AutoCRUD,CR25,<InstanceType-CreateLinkObjectAction{1060}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
998,AutoCRUD,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR27 && CR09 && CR01 && CR19 && CR13 &&"
999,AutoCRUD,CR27,<InstanceType-Lifeline{817}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR16 && CR26 && CR15 &&"
1000,EyeNeedPAO,CR01,<InstanceType-Message{813}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR16 && CR09 && CR17 && CR19 && CR15 && CR26 && CR18 && CR27 && CR20 &&"
1001,EyeNeedPAO,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
1002,EyeNeedPAO,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR04 && CR02 &&"
1003,EyeNeedPAO,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR06 && CR02 &&"
1004,EyeNeedPAO,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1005,EyeNeedPAO,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
1006,EyeNeedPAO,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1007,EyeNeedPAO,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
1008,EyeNeedPAO,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR10 && CR13 && CR11 && CR19 && CR26 && CR18 && CR14 && CR20 && CR01 &&"
1009,EyeNeedPAO,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
1010,EyeNeedPAO,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR09 && CR14 && CR02 &&"
1011,EyeNeedPAO,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1012,EyeNeedPAO,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR09 && CR19 && CR26 && CR18 && CR20 && CR01 &&"
1013,EyeNeedPAO,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
1014,EyeNeedPAO,CR15,<InstanceType-Lifeline{817}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
1015,EyeNeedPAO,CR16,<InstanceType-Message{813}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR17 && CR19 && CR15 && CR18 && CR27 && CR20 && CR01 &&"
1016,EyeNeedPAO,CR17,<InstanceType-Lifeline{817}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
1017,EyeNeedPAO,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR16 && CR09 && CR19 && CR20 && CR01 &&"
1018,EyeNeedPAO,CR19,<InstanceType-Message{813}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR16 && CR09 && CR26 && CR18 && CR20 && CR01 &&"
1019,EyeNeedPAO,CR20,<InstanceType-Message{813}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR16 && CR09 && CR19 && CR18 && CR08 && CR01 &&"
1020,EyeNeedPAO,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
1021,EyeNeedPAO,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
1022,EyeNeedPAO,CR23,<InstanceType-InteractionFragment{816}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR22 &&"
1023,EyeNeedPAO,CR24,<InstanceType-InteractionFragment{816}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
1024,EyeNeedPAO,CR25,<InstanceType-CreateLinkObjectAction{1060}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1025,EyeNeedPAO,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR09 && CR19 && CR27 && CR01 &&"
1026,EyeNeedPAO,CR27,<InstanceType-Lifeline{817}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR15 && CR26 && CR01 &&"
1027,MachiavelliSynchronous,CR01,<InstanceType-Message{806}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR19 && CR26 && CR16 && CR18 && CR27 && CR15 && CR09 && CR17 && CR20 &&"
1028,MachiavelliSynchronous,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR03 && CR11 &&"
1029,MachiavelliSynchronous,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
1030,MachiavelliSynchronous,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
1031,MachiavelliSynchronous,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1032,MachiavelliSynchronous,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
1033,MachiavelliSynchronous,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1034,MachiavelliSynchronous,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
1035,MachiavelliSynchronous,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR19 && CR26 && CR18 && CR01 && CR11 && CR14 && CR10 && CR20 &&"
1036,MachiavelliSynchronous,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR14 && CR09 &&"
1037,MachiavelliSynchronous,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR14 && CR09 && CR10 &&"
1038,MachiavelliSynchronous,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1039,MachiavelliSynchronous,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR19 && CR26 && CR16 && CR18 && CR01 && CR09 && CR20 &&"
1040,MachiavelliSynchronous,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR09 && CR10 &&"
1041,MachiavelliSynchronous,CR15,<InstanceType-Lifeline{810}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
1042,MachiavelliSynchronous,CR16,<InstanceType-Message{806}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR19 && CR18 && CR01 && CR27 && CR15 && CR17 && CR20 &&"
1043,MachiavelliSynchronous,CR17,<InstanceType-Lifeline{810}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
1044,MachiavelliSynchronous,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR19 && CR16 && CR01 && CR09 && CR20 &&"
1045,MachiavelliSynchronous,CR19,<InstanceType-Message{806}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR26 && CR16 && CR18 && CR01 && CR09 && CR20 &&"
1046,MachiavelliSynchronous,CR20,<InstanceType-Message{806}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR19 && CR08 && CR16 && CR18 && CR01 && CR09 &&"
1047,MachiavelliSynchronous,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1048,MachiavelliSynchronous,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
1049,MachiavelliSynchronous,CR23,<InstanceType-InteractionFragment{809}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
1050,MachiavelliSynchronous,CR24,<InstanceType-InteractionFragment{809}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1051,MachiavelliSynchronous,CR25,<InstanceType-CreateLinkObjectAction{1164}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1052,MachiavelliSynchronous,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR19 && CR01 && CR27 && CR09 &&"
1053,MachiavelliSynchronous,CR27,<InstanceType-Lifeline{810}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR16 && CR01 && CR15 &&"
1054,Bike3S,CR01,<InstanceType-Message{816}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR13 && CR26 && CR09 && CR19 && CR16 && CR17 && CR20 && CR18 && CR27 &&"
1055,Bike3S,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
1056,Bike3S,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
1057,Bike3S,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR02 && CR03 &&"
1058,Bike3S,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1059,Bike3S,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
1060,Bike3S,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1061,Bike3S,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
1062,Bike3S,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR26 && CR01 && CR11 && CR19 && CR10 && CR20 && CR18 && CR14 &&"
1063,Bike3S,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
1064,Bike3S,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR10 && CR02 && CR14 &&"
1065,Bike3S,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1066,Bike3S,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR26 && CR01 && CR09 && CR19 && CR16 && CR20 && CR18 &&"
1067,Bike3S,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
1068,Bike3S,CR15,<InstanceType-Lifeline{813}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR16 && CR27 &&"
1069,Bike3S,CR16,<InstanceType-Message{816}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR13 && CR01 && CR19 && CR17 && CR20 && CR18 && CR27 &&"
1070,Bike3S,CR17,<InstanceType-Lifeline{813}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
1071,Bike3S,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR01 && CR09 && CR19 && CR16 && CR20 &&"
1072,Bike3S,CR19,<InstanceType-Message{816}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR26 && CR01 && CR09 && CR16 && CR20 && CR18 &&"
1073,Bike3S,CR20,<InstanceType-Message{816}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR13 && CR01 && CR09 && CR19 && CR16 && CR18 && CR08 &&"
1074,Bike3S,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1075,Bike3S,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
1076,Bike3S,CR23,<InstanceType-InteractionFragment{812}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR22 &&"
1077,Bike3S,CR24,<InstanceType-InteractionFragment{812}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1078,Bike3S,CR25,<InstanceType-CreateLinkObjectAction{1051}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1079,Bike3S,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR01 && CR09 && CR19 && CR27 &&"
1080,Bike3S,CR27,<InstanceType-Lifeline{813}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR26 && CR01 && CR16 &&"
1081,jhipsterSampleApp,CR01,<InstanceType-Message{806}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR09 && CR16 && CR19 && CR27 && CR26 && CR18 && CR13 && CR17 && CR20 && CR15 &&"
1082,jhipsterSampleApp,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
1083,jhipsterSampleApp,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
1084,jhipsterSampleApp,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
1085,jhipsterSampleApp,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1086,jhipsterSampleApp,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
1087,jhipsterSampleApp,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1088,jhipsterSampleApp,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
1089,jhipsterSampleApp,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR11 && CR10 && CR14 && CR19 && CR26 && CR18 && CR13 && CR20 && CR01 &&"
1090,jhipsterSampleApp,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
1091,jhipsterSampleApp,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR10 && CR14 && CR02 &&"
1092,jhipsterSampleApp,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1093,jhipsterSampleApp,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR16 && CR19 && CR26 && CR18 && CR20 && CR01 &&"
1094,jhipsterSampleApp,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
1095,jhipsterSampleApp,CR15,<InstanceType-Lifeline{810}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
1096,jhipsterSampleApp,CR16,<InstanceType-Message{806}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR19 && CR27 && CR18 && CR13 && CR17 && CR20 && CR15 && CR01 &&"
1097,jhipsterSampleApp,CR17,<InstanceType-Lifeline{810}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
1098,jhipsterSampleApp,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR09 && CR16 && CR19 && CR13 && CR20 && CR01 &&"
1099,jhipsterSampleApp,CR19,<InstanceType-Message{806}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR16 && CR26 && CR18 && CR13 && CR20 && CR01 &&"
1100,jhipsterSampleApp,CR20,<InstanceType-Message{806}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR09 && CR08 && CR16 && CR19 && CR18 && CR13 && CR01 &&"
1101,jhipsterSampleApp,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1102,jhipsterSampleApp,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
1103,jhipsterSampleApp,CR23,<InstanceType-InteractionFragment{809}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
1104,jhipsterSampleApp,CR24,<InstanceType-InteractionFragment{809}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1105,jhipsterSampleApp,CR25,<InstanceType-CreateLinkObjectAction{1164}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1106,jhipsterSampleApp,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR19 && CR27 && CR13 && CR01 &&"
1107,jhipsterSampleApp,CR27,<InstanceType-Lifeline{810}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR26 && CR15 && CR01 &&"
1108,openhrm,CR01,<InstanceType-Message{808}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR13 && CR27 && CR17 && CR09 && CR18 && CR19 && CR15 && CR16 && CR20 && CR26 &&"
1109,openhrm,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
1110,openhrm,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
1111,openhrm,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR02 && CR03 &&"
1112,openhrm,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1113,openhrm,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
1114,openhrm,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1115,openhrm,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
1116,openhrm,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR13 && CR14 && CR18 && CR11 && CR01 && CR19 && CR10 && CR20 && CR26 &&"
1117,openhrm,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
1118,openhrm,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR14 && CR10 && CR02 &&"
1119,openhrm,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1120,openhrm,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR09 && CR18 && CR01 && CR19 && CR16 && CR20 && CR26 &&"
1121,openhrm,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
1122,openhrm,CR15,<InstanceType-Lifeline{805}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR01 && CR16 &&"
1123,openhrm,CR16,<InstanceType-Message{808}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR13 && CR27 && CR17 && CR18 && CR01 && CR19 && CR15 && CR20 &&"
1124,openhrm,CR17,<InstanceType-Lifeline{805}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
1125,openhrm,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR09 && CR01 && CR19 && CR16 && CR20 &&"
1126,openhrm,CR19,<InstanceType-Message{808}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR13 && CR09 && CR18 && CR01 && CR16 && CR20 && CR26 &&"
1127,openhrm,CR20,<InstanceType-Message{808}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR08 && CR13 && CR09 && CR18 && CR01 && CR19 && CR16 &&"
1128,openhrm,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1129,openhrm,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
1130,openhrm,CR23,<InstanceType-InteractionFragment{804}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
1131,openhrm,CR24,<InstanceType-InteractionFragment{804}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1132,openhrm,CR25,<InstanceType-CreateLinkObjectAction{900}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1133,openhrm,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR27 && CR09 && CR01 && CR19 &&"
1134,openhrm,CR27,<InstanceType-Lifeline{805}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR15 && CR16 && CR26 &&"
1135,school,CR01,<InstanceType-Message{831}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR16 && CR17 && CR19 && CR18 && CR13 && CR20 && CR15 && CR09 && CR27 && CR26 &&"
1136,school,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
1137,school,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
1138,school,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
1139,school,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1140,school,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
1141,school,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1142,school,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
1143,school,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR19 && CR18 && CR14 && CR13 && CR10 && CR20 && CR01 && CR11 && CR26 &&"
1144,school,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR14 && CR11 && CR09 &&"
1145,school,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR14 && CR10 && CR09 &&"
1146,school,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1147,school,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR16 && CR19 && CR18 && CR20 && CR01 && CR09 && CR26 &&"
1148,school,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR11 && CR09 &&"
1149,school,CR15,<InstanceType-Lifeline{828}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
1150,school,CR16,<InstanceType-Message{831}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR17 && CR19 && CR18 && CR13 && CR20 && CR15 && CR01 && CR27 &&"
1151,school,CR17,<InstanceType-Lifeline{828}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
1152,school,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR19 && CR13 && CR20 && CR01 && CR09 &&"
1153,school,CR19,<InstanceType-Message{831}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR16 && CR18 && CR13 && CR20 && CR01 && CR09 && CR26 &&"
1154,school,CR20,<InstanceType-Message{831}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR19 && CR18 && CR13 && CR01 && CR08 && CR09 &&"
1155,school,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
1156,school,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
1157,school,CR23,<InstanceType-InteractionFragment{827}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
1158,school,CR24,<InstanceType-InteractionFragment{827}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
1159,school,CR25,<InstanceType-CreateLinkObjectAction{1102}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1160,school,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR13 && CR01 && CR09 && CR27 &&"
1161,school,CR27,<InstanceType-Lifeline{828}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR15 && CR01 && CR26 &&"
1162,GoFit,CR01,<InstanceType-Message{708}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR26 && CR18 && CR15 && CR16 && CR17 && CR19 && CR27 && CR09 && CR13 && CR20 &&"
1163,GoFit,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
1164,GoFit,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR02 && CR05 &&"
1165,GoFit,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR03 && CR02 &&"
1166,GoFit,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1167,GoFit,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
1168,GoFit,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1169,GoFit,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
1170,GoFit,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR26 && CR11 && CR01 && CR18 && CR10 && CR19 && CR14 && CR13 && CR20 &&"
1171,GoFit,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR09 && CR14 &&"
1172,GoFit,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR09 && CR02 && CR14 &&"
1173,GoFit,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1174,GoFit,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR26 && CR01 && CR18 && CR16 && CR19 && CR09 && CR20 &&"
1175,GoFit,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR11 && CR10 && CR09 &&"
1176,GoFit,CR15,<InstanceType-Lifeline{705}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR16 && CR27 &&"
1177,GoFit,CR16,<InstanceType-Message{708}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR01 && CR18 && CR15 && CR17 && CR19 && CR27 && CR13 && CR20 &&"
1178,GoFit,CR17,<InstanceType-Lifeline{705}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
1179,GoFit,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR01 && CR16 && CR19 && CR09 && CR13 && CR20 &&"
1180,GoFit,CR19,<InstanceType-Message{708}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR26 && CR01 && CR18 && CR16 && CR09 && CR13 && CR20 &&"
1181,GoFit,CR20,<InstanceType-Message{708}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR08 && CR01 && CR18 && CR16 && CR19 && CR09 && CR13 &&"
1182,GoFit,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
1183,GoFit,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
1184,GoFit,CR23,<InstanceType-InteractionFragment{704}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR22 && CR21 && CR24 &&"
1185,GoFit,CR24,<InstanceType-InteractionFragment{704}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
1186,GoFit,CR25,<InstanceType-CreateLinkObjectAction{1146}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1187,GoFit,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR19 && CR27 && CR09 && CR13 &&"
1188,GoFit,CR27,<InstanceType-Lifeline{705}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR26 && CR01 && CR15 && CR16 &&"
1189,Logger,CR01,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR19 && CR17 && CR09 && CR20 && CR27 && CR26 && CR13 && CR18 && CR16 &&"
1190,Logger,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR11 && CR04 &&"
1191,Logger,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
1192,Logger,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
1193,Logger,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1194,Logger,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
1195,Logger,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1196,Logger,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
1197,Logger,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR19 && CR10 && CR20 && CR14 && CR26 && CR13 && CR01 && CR11 && CR18 &&"
1198,Logger,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
1199,Logger,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR10 && CR09 && CR14 &&"
1200,Logger,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1201,Logger,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR19 && CR09 && CR20 && CR26 && CR01 && CR18 && CR16 &&"
1202,Logger,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR09 && CR11 &&"
1203,Logger,CR15,<InstanceType-Lifeline{707}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR27 && CR01 && CR16 &&"
1204,Logger,CR16,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR19 && CR17 && CR20 && CR27 && CR13 && CR01 && CR18 &&"
1205,Logger,CR17,<InstanceType-Lifeline{707}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
1206,Logger,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR19 && CR09 && CR20 && CR13 && CR01 && CR16 &&"
1207,Logger,CR19,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR09 && CR20 && CR26 && CR13 && CR01 && CR18 && CR16 &&"
1208,Logger,CR20,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR19 && CR09 && CR08 && CR13 && CR01 && CR18 && CR16 &&"
1209,Logger,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1210,Logger,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR23 && CR21 &&"
1211,Logger,CR23,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR22 &&"
1212,Logger,CR24,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1213,Logger,CR25,<InstanceType-CreateLinkObjectAction{894}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1214,Logger,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR19 && CR09 && CR27 && CR13 && CR01 &&"
1215,Logger,CR27,<InstanceType-Lifeline{707}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR26 && CR01 && CR16 &&"
1216,xkgl,CR01,<InstanceType-Message{837}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR09 && CR15 && CR27 && CR16 && CR19 && CR26 && CR17 && CR13 && CR18 && CR20 &&"
1217,xkgl,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR04 && CR11 &&"
1218,xkgl,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR05 && CR02 && CR04 &&"
1219,xkgl,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR03 && CR02 && CR06 &&"
1220,xkgl,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1221,xkgl,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
1222,xkgl,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1223,xkgl,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
1224,xkgl,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR01 && CR19 && CR26 && CR10 && CR13 && CR18 && CR20 && CR11 && CR14 &&"
1225,xkgl,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
1226,xkgl,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR10 && CR02 && CR14 &&"
1227,xkgl,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1228,xkgl,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR01 && CR09 && CR16 && CR19 && CR26 && CR18 && CR20 &&"
1229,xkgl,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR10 && CR11 &&"
1230,xkgl,CR15,<InstanceType-Lifeline{834}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
1231,xkgl,CR16,<InstanceType-Message{837}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR01 && CR15 && CR27 && CR19 && CR17 && CR13 && CR18 && CR20 &&"
1232,xkgl,CR17,<InstanceType-Lifeline{834}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
1233,xkgl,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR01 && CR09 && CR16 && CR19 && CR13 && CR20 &&"
1234,xkgl,CR19,<InstanceType-Message{837}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR01 && CR09 && CR16 && CR26 && CR13 && CR18 && CR20 &&"
1235,xkgl,CR20,<InstanceType-Message{837}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR01 && CR09 && CR16 && CR19 && CR08 && CR13 && CR18 &&"
1236,xkgl,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1237,xkgl,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
1238,xkgl,CR23,<InstanceType-InteractionFragment{833}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
1239,xkgl,CR24,<InstanceType-InteractionFragment{833}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1240,xkgl,CR25,<InstanceType-CreateLinkObjectAction{1204}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1241,xkgl,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR09 && CR27 && CR19 && CR13 &&"
1242,xkgl,CR27,<InstanceType-Lifeline{834}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR15 && CR16 && CR26 &&"
1243,JavaGame,CR01,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR26 && CR17 && CR16 && CR20 && CR09 && CR19 && CR13 && CR27 && CR18 &&"
1244,JavaGame,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR03 && CR04 &&"
1245,JavaGame,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
1246,JavaGame,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
1247,JavaGame,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1248,JavaGame,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
1249,JavaGame,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1250,JavaGame,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
1251,JavaGame,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR26 && CR20 && CR11 && CR14 && CR10 && CR01 && CR19 && CR13 && CR18 &&"
1252,JavaGame,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
1253,JavaGame,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR09 && CR14 && CR10 &&"
1254,JavaGame,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1255,JavaGame,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR26 && CR16 && CR20 && CR09 && CR01 && CR19 && CR18 &&"
1256,JavaGame,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
1257,JavaGame,CR15,<InstanceType-Lifeline{707}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR01 && CR27 &&"
1258,JavaGame,CR16,<InstanceType-Message{710}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR17 && CR20 && CR01 && CR19 && CR13 && CR27 && CR18 &&"
1259,JavaGame,CR17,<InstanceType-Lifeline{707}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
1260,JavaGame,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR16 && CR20 && CR09 && CR01 && CR19 && CR13 &&"
1261,JavaGame,CR19,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR26 && CR16 && CR20 && CR09 && CR01 && CR13 && CR18 &&"
1262,JavaGame,CR20,<InstanceType-Message{710}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR08 && CR09 && CR01 && CR19 && CR13 && CR18 &&"
1263,JavaGame,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1264,JavaGame,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR23 &&"
1265,JavaGame,CR23,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR24 && CR22 &&"
1266,JavaGame,CR24,<InstanceType-InteractionFragment{706}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1267,JavaGame,CR25,<InstanceType-CreateLinkObjectAction{1005}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1268,JavaGame,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR09 && CR01 && CR19 && CR13 && CR27 &&"
1269,JavaGame,CR27,<InstanceType-Lifeline{707}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR26 && CR16 && CR01 &&"
1270,BankingProject,CR01,<InstanceType-Message{711}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR18 && CR13 && CR09 && CR19 && CR15 && CR26 && CR20 && CR27 && CR17 && CR16 &&"
1271,BankingProject,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR04 && CR11 && CR03 &&"
1272,BankingProject,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR04 && CR05 && CR02 &&"
1273,BankingProject,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR06 && CR03 && CR02 &&"
1274,BankingProject,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1275,BankingProject,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR04 && CR08 &&"
1276,BankingProject,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1277,BankingProject,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR06 && CR20 &&"
1278,BankingProject,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR18 && CR13 && CR14 && CR01 && CR11 && CR19 && CR26 && CR20 && CR10 &&"
1279,BankingProject,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR14 && CR11 &&"
1280,BankingProject,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR09 && CR14 && CR10 && CR02 &&"
1281,BankingProject,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1282,BankingProject,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR18 && CR09 && CR01 && CR19 && CR26 && CR20 && CR16 &&"
1283,BankingProject,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
1284,BankingProject,CR15,<InstanceType-Lifeline{708}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR27 && CR16 &&"
1285,BankingProject,CR16,<InstanceType-Message{711}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR18 && CR13 && CR01 && CR19 && CR15 && CR20 && CR27 && CR17 &&"
1286,BankingProject,CR17,<InstanceType-Lifeline{708}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
1287,BankingProject,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR13 && CR09 && CR01 && CR19 && CR20 && CR16 &&"
1288,BankingProject,CR19,<InstanceType-Message{711}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR18 && CR13 && CR09 && CR01 && CR26 && CR20 && CR16 &&"
1289,BankingProject,CR20,<InstanceType-Message{711}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR18 && CR13 && CR09 && CR01 && CR08 && CR19 && CR16 &&"
1290,BankingProject,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
1291,BankingProject,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR24 && CR21 && CR23 &&"
1292,BankingProject,CR23,<InstanceType-InteractionFragment{707}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR22 && CR24 && CR21 &&"
1293,BankingProject,CR24,<InstanceType-InteractionFragment{707}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
1294,BankingProject,CR25,<InstanceType-CreateLinkObjectAction{1074}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1295,BankingProject,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR13 && CR09 && CR01 && CR19 && CR27 &&"
1296,BankingProject,CR27,<InstanceType-Lifeline{708}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR01 && CR15 && CR26 && CR16 &&"
1297,KEBA,CR01,<InstanceType-Message{711}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR20 && CR17 && CR16 && CR27 && CR13 && CR19 && CR18 && CR15 && CR09 && CR26 &&"
1298,KEBA,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR11 && CR04 && CR03 &&"
1299,KEBA,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR04 && CR05 &&"
1300,KEBA,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR03 && CR06 &&"
1301,KEBA,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1302,KEBA,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
1303,KEBA,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1304,KEBA,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
1305,KEBA,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR10 && CR20 && CR11 && CR13 && CR19 && CR18 && CR01 && CR14 && CR26 &&"
1306,KEBA,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR11 && CR09 && CR14 &&"
1307,KEBA,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR10 && CR02 && CR09 && CR14 &&"
1308,KEBA,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1309,KEBA,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR20 && CR16 && CR19 && CR18 && CR01 && CR09 && CR26 &&"
1310,KEBA,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR10 && CR11 && CR09 &&"
1311,KEBA,CR15,<InstanceType-Lifeline{708}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR16 && CR27 && CR01 &&"
1312,KEBA,CR16,<InstanceType-Message{711}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR20 && CR17 && CR27 && CR13 && CR19 && CR18 && CR15 && CR01 &&"
1313,KEBA,CR17,<InstanceType-Lifeline{708}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR16 && CR01 &&"
1314,KEBA,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR20 && CR16 && CR13 && CR19 && CR01 && CR09 &&"
1315,KEBA,CR19,<InstanceType-Message{711}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR20 && CR16 && CR13 && CR18 && CR01 && CR09 && CR26 &&"
1316,KEBA,CR20,<InstanceType-Message{711}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR16 && CR13 && CR19 && CR18 && CR08 && CR01 && CR09 &&"
1317,KEBA,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR23 && CR22 &&"
1318,KEBA,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
1319,KEBA,CR23,<InstanceType-InteractionFragment{707}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR22 && CR24 &&"
1320,KEBA,CR24,<InstanceType-InteractionFragment{707}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR23 && CR22 &&"
1321,KEBA,CR25,<InstanceType-CreateLinkObjectAction{1070}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1322,KEBA,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR27 && CR13 && CR19 && CR01 && CR09 &&"
1323,KEBA,CR27,<InstanceType-Lifeline{708}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR16 && CR15 && CR01 && CR26 &&"
1324,bankVault,CR01,<InstanceType-Message{814}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(op| op.name=self.name))",10,"CR15 && CR16 && CR20 && CR09 && CR19 && CR26 && CR27 && CR13 && CR18 && CR17 &&"
1325,bankVault,CR02,<InstanceType-Association{523}>,"self.memberEnd.size() > 0 implies self.memberEnd->forAll(p | p.type <> null implies p.type.namespace = self.namespace)",3,"CR03 && CR11 && CR04 &&"
1326,bankVault,CR03,<InstanceType-Association{523}>,"self.memberEnd->forAll(p1,p2 : <root/types/UMLLoader3/Property>| p1 <> p2 implies p1.name <> p2.name)",3,"CR02 && CR05 && CR04 &&"
1327,bankVault,CR04,<InstanceType-Association{523}>,"self.memberEnd->size() > 0 implies self.memberEnd->select(p | p.aggregation.name = 'composite')->size() <= 1 or self.memberEnd->select(m | m.aggregation.name = 'shared')->size() <= 1",3,"CR02 && CR06 && CR03 &&"
1328,bankVault,CR05,<InstanceType-Class{379}>,"self.ownedAttribute->forAll(p1,p2:<root/types/UMLLoader3/Property> | p1 <> p2 implies p1.name <> p2.name)",1,"CR03 &&"
1329,bankVault,CR06,<InstanceType-Property{359}>,"(self.association <> null and self.aggregation.name='composite') implies (self.upper >= 0 and self.upper <= 1)",2,"CR08 && CR04 &&"
1330,bankVault,CR07,<InstanceType-Package{327}>,"self.packagedElement->forAll(e1,e2:<root/types/UMLLoader3/PackageableElement> | (e1 <> e2) and (e1.name <> '' and e2.name <> '') implies (e1.name <> e2.name))",0,"CR07 has no dependencies"
1331,bankVault,CR08,<InstanceType-Interface{386}>,"self.ownedAttribute->forAll(pr: <root/types/UMLLoader3/Property>| pr.association <> null or pr.visibility.name = 'public') and self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.visibility.name = 'public')",2,"CR20 && CR06 &&"
1332,bankVault,CR09,<InstanceType-Class{379}>,"self.ownedOperation->forAll( o1,o2 : <root/types/UMLLoader3/Operation> | o1 <> o2 implies (o1.name <> o2.name or o1.ownedParameter->size() <> o2.ownedParameter->size() or o1.ownedParameter->exists(t1:<root/types/UMLLoader3/Type> | o2.ownedParameter->excludes(t1)) or o2.ownedParameter->exists(t2:<root/types/UMLLoader3/Type> | o1.ownedParameter->excludes(t2))))",9,"CR01 && CR20 && CR19 && CR26 && CR11 && CR10 && CR13 && CR18 && CR14 &&"
1333,bankVault,CR10,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p1,p2:<root/types/UMLLoader3/Parameter>| p1 <> p2 implies p1.name <> p2.name)",3,"CR09 && CR11 && CR14 &&"
1334,bankVault,CR11,<InstanceType-Operation{380}>,"self.ownedParameter->forAll(p:<root/types/UMLLoader3/Parameter>|p.type <> null and self.owner.isTypeOf(<root/types/UMLLoader3/Class>) implies (p.type.namespace = self.owner.asType(<root/types/UMLLoader3/Class>).namespace))",4,"CR02 && CR09 && CR10 && CR14 &&"
1335,bankVault,CR12,<InstanceType-Generalization{621}>,"self.source->forAll(e1: <root/types/UMLLoader3/Element> | e1.isKindOf(<root/types/UMLLoader3/NamedElement>) implies self.target->forAll(e2 : <root/types/UMLLoader3/Element> | e2.isKindOf(<root/types/UMLLoader3/NamedElement>) and e1.asType(<root/types/UMLLoader3/NamedElement>).namespace = e2.asType(<root/types/UMLLoader3/NamedElement> ).namespace))",0,"CR12 has no dependencies"
1336,bankVault,CR13,<InstanceType-Transition{483}>,"let classifier : <root/types/UMLLoader3/BehavioredClassifier> = self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine.context in (self.owner.asType(<root/types/UMLLoader3/Region>).stateMachine <> null implies classifier.isTypeOf(<root/types/UMLLoader3/Class>) implies classifier.asType(<root/types/UMLLoader3/Class>).ownedOperation->exists(o:<root/types/UMLLoader3/Operation> | o.name = self.name))",7,"CR01 && CR16 && CR20 && CR09 && CR19 && CR26 && CR18 &&"
1337,bankVault,CR14,<InstanceType-Operation{380}>,"self.ownedParameter->select(p : <root/types/UMLLoader3/Parameter> | p.direction.name = 'return')->size() <= 1",3,"CR09 && CR11 && CR10 &&"
1338,bankVault,CR15,<InstanceType-Lifeline{811}>,self.represents.type.isTypeOf(<root/types/UMLLoader3/Class>),3,"CR01 && CR16 && CR27 &&"
1339,bankVault,CR16,<InstanceType-Message{814}>,"self.receiveEvent.asType(<root/types/UMLLoader3/InteractionFragment>).covered->forAll(r|r.represents.type.isTypeOf(<root/types/UMLLoader3/Class>) implies r.represents.type.asType(<root/types/UMLLoader3/Class>).ownedBehavior->exists(ob| ob.asType(<root/types/UMLLoader3/StateMachine>).region->exists(re|re.asType(<root/types/UMLLoader3/Region>).transition->exists(t|t.name=self.name))))",8,"CR15 && CR01 && CR20 && CR19 && CR27 && CR13 && CR18 && CR17 &&"
1340,bankVault,CR17,<InstanceType-Lifeline{811}>,"self.coveredBy->asList().size() > 0 implies self.coveredBy->asList()->first().asType(<root/types/UMLLoader3/InteractionFragment>).covered->isEmpty()",2,"CR01 && CR16 &&"
1341,bankVault,CR18,<InstanceType-Operation{380}>,"allInstances(<root/types/UMLLoader3/Action>)->exists(a1: <root/types/UMLLoader3/Action>|  allInstances(<root/types/UMLLoader3/Message>)->exists(m1: <root/types/UMLLoader3/Message>| (a1.name = self.name) and (m1.name = self.name) implies a1.name = m1.name))",6,"CR01 && CR16 && CR20 && CR09 && CR19 && CR13 &&"
1342,bankVault,CR19,<InstanceType-Message{814}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| self.name = op.name implies not op.isAbstract)",7,"CR01 && CR16 && CR20 && CR09 && CR26 && CR13 && CR18 &&"
1343,bankVault,CR20,<InstanceType-Message{814}>,"allInstances(<root/types/UMLLoader3/Operation>)->forAll(op:<root/types/UMLLoader3/Operation>| op.name = self.name implies ((self.visibility.name = 'public') and (op.visibility.name = 'public')) or ((self.visibility.name = 'private') and (op.visibility.name = 'private')) or ((self.visibility.name = 'protected') and (op.visibility.name = 'protected')))",7,"CR01 && CR16 && CR09 && CR19 && CR08 && CR13 && CR18 &&"
1344,bankVault,CR21,<InstanceType-Class{379}>,"allInstances(<root/types/UMLLoader3/Activity>)->exists(at:<root/types/UMLLoader3/Activity>|self.name = at.name)",2,"CR22 && CR23 &&"
1345,bankVault,CR22,<InstanceType-UseCase{636}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR21 && CR23 && CR24 &&"
1346,bankVault,CR23,<InstanceType-InteractionFragment{810}>,"allInstances(<root/types/UMLLoader3/Class>)->exists(ct:<root/types/UMLLoader3/Class>| ct.name = self.name)",3,"CR22 && CR21 && CR24 &&"
1347,bankVault,CR24,<InstanceType-InteractionFragment{810}>,"allInstances(<root/types/UMLLoader3/UseCase>)->exists(ut:<root/types/UMLLoader3/UseCase>| ut.name = self.name)",2,"CR22 && CR23 &&"
1348,bankVault,CR25,<InstanceType-CreateLinkObjectAction{1146}>,"allInstances(<root/types/UMLLoader3/Association>)->forAll(at:<root/types/UMLLoader3/Association>|  at.name = self.name implies self.result = at)",0,"CR25 has no dependencies"
1349,bankVault,CR26,<InstanceType-Class{379}>,"self.isAbstract = true implies  self.ownedOperation->forAll(o:<root/types/UMLLoader3/Operation>| o.isAbstract)",5,"CR01 && CR09 && CR19 && CR27 && CR13 &&"
1350,bankVault,CR27,<InstanceType-Lifeline{811}>,"allInstances(<root/types/UMLLoader3/Interface>)->forAll(it:<root/types/UMLLoader3/Interface>| self <> it implies allInstances(<root/types/UMLLoader3/Class>)->select(ct:<root/types/UMLLoader3/Class>| ct.isAbstract)->forAll(ab:<root/types/UMLLoader3/Class>| ab <> self.represents.type))",4,"CR15 && CR01 && CR16 && CR26 &&"
