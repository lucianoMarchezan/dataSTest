<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="compilator" nsURI="http:///compilator.ecore" nsPrefix="compilator">
  <eClassifiers xsi:type="ecore:EClass" name="ModelFactory">
    <eOperations name="loadExpression" eType="#//ModelFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="ModelFactory modelFactory = null;&#xD;&#xA;org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI.createURI(&quot;platform:/resource/test/model/expression.compilator&quot;);&#xD;&#xA;org.eclipse.emf.ecore.resource.ResourceSet resourceSet= new org.eclipse.emf.ecore.resource.impl.ResourceSetImpl();&#xD;&#xA;org.eclipse.emf.ecore.resource.Resource resource = resourceSet.createResource(uri);&#xD;&#xA;try {&#xD;&#xA;&#x9;resource.load(java.util.Collections.EMPTY_MAP);&#xD;&#xA;&#x9;modelFactory = (ModelFactory) resource.getContents().get(0);&#xD;&#xA;} catch (java.io.IOException e) {&#xD;&#xA;&#x9;// TO-DO Auto-generated catch block&#xD;&#xA;&#x9;e.printStackTrace();&#xD;&#xA;}&#xD;&#xA;return modelFactory;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="saveExpression">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="ModelFactory modelFactory = this;&#xD;&#xA;&#xD;&#xA;org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI.createURI(&quot;platform:/resource/test/model/expression.compilator&quot;);&#xD;&#xA;org.eclipse.emf.ecore.resource.ResourceSet resourceSet= new org.eclipse.emf.ecore.resource.impl.ResourceSetImpl();&#xD;&#xA;org.eclipse.emf.ecore.resource.Resource resource = resourceSet.createResource(uri);&#xD;&#xA;resource.getContents().add(modelFactory);&#xD;&#xA;try {&#xD;&#xA;&#x9;resource.save(java.util.Collections.EMPTY_MAP);&#xD;&#xA;} catch (java.io.IOException e) {&#xD;&#xA;&#x9;// TO-DO Auto-generated catch block&#xD;&#xA;&#x9;e.printStackTrace();&#xD;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="loadComponents" eType="#//ModelFactory">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="ModelFactory modelFactory = null;&#xD;&#xA;&#xD;&#xA;org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI.createURI(&quot;platform:/resource/test/model/components.compilator&quot;);&#xD;&#xA;org.eclipse.emf.ecore.resource.ResourceSet resourceSet= new org.eclipse.emf.ecore.resource.impl.ResourceSetImpl();&#xD;&#xA;org.eclipse.emf.ecore.resource.Resource resource = resourceSet.createResource(uri);&#xD;&#xA;try {&#xD;&#xA;&#x9;resource.load(java.util.Collections.EMPTY_MAP);&#xD;&#xA;&#x9;modelFactory = (ModelFactory) resource.getContents().get(0);&#xD;&#xA;} catch (java.io.IOException e) {&#xD;&#xA;&#x9;// TO-DO Auto-generated catch block&#xD;&#xA;&#x9;e.printStackTrace();&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return modelFactory;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="saveComponents">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="body" value="ModelFactory modelFactory = this;&#xD;&#xA;&#xD;&#xA;org.eclipse.emf.common.util.URI uri = org.eclipse.emf.common.util.URI.createURI(&quot;platform:/resource/test/model/components.compilator&quot;);&#xD;&#xA;org.eclipse.emf.ecore.resource.ResourceSet resourceSet= new org.eclipse.emf.ecore.resource.impl.ResourceSetImpl();&#xD;&#xA;org.eclipse.emf.ecore.resource.Resource resource = resourceSet.createResource(uri);&#xD;&#xA;resource.getContents().add(modelFactory);&#xD;&#xA;try {&#xD;&#xA;&#x9;resource.save(java.util.Collections.EMPTY_MAP);&#xD;&#xA;} catch (java.io.IOException e) {&#xD;&#xA;&#x9;// TO-DO Auto-generated catch block&#xD;&#xA;&#x9;e.printStackTrace();&#xD;&#xA;}"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="theDomainCompilator" lowerBound="1"
        eType="#//domain/Domain" containment="true" eOpposite="#//domain/Domain/theModelFactory"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="theUI" lowerBound="1" eType="#//ui/UI"
        containment="true" eOpposite="#//ui/UI/theModelFactory"/>
  </eClassifiers>
  <eSubpackages name="domain" nsURI="http:///compilator/domain.ecore" nsPrefix="compilator.domain">
    <eClassifiers xsi:type="ecore:EClass" name="Domain">
      <eOperations name="createComponent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="compilator.domain.generator.ExpressionModelManager emg = compilator.domain.generator.GeneratorFactory.eINSTANCE.createExpressionModelManager();&#xD;&#xA;emg.setTokens(tokens);&#xD;&#xA;emg.setElementStyle(elementStyle);&#xD;&#xA;&#xD;&#xA;compilator.domain.generator.ComponentModelGenerator componentGenerator = compilator.domain.generator.GeneratorFactory.eINSTANCE.createComponentModelGenerator();&#xD;&#xA;&#xD;&#xA;componentGenerator.setExpressionManager(emg);&#xD;&#xA;&#xD;&#xA;compilator.domain.shapes.Component c = componentGenerator.createComponent(nameComponent, expressionString, expressionString);&#xD;&#xA;getShapes().getListComponents().add(c);&#xD;&#xA;getTheModelFactory().saveComponents();&#xD;&#xA;"/>
        </eAnnotations>
        <eParameters name="nameComponent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="expressionString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyle" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eOperations name="createExpressionModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="compilator.domain.generator.ExpressionModelManager emg = compilator.domain.generator.GeneratorFactory.eINSTANCE.createExpressionModelManager();&#xD;&#xA;emg.setTokens(tokens);&#xD;&#xA;emg.setElementStyle(elementStyles);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;compilator.domain.generator.ExpressionModelGenerator generator = compilator.domain.generator.GeneratorFactory.eINSTANCE.createExpressionModelGenerator();&#xD;&#xA;generator.setComponents(components);&#xD;&#xA;generator.setExpressionManager(emg);&#xD;&#xA;&#xD;&#xA;compilator.domain.expression.Expression  ex = generator.createExpressionModel(expressionString, expressionString);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;String unpackedString = generator.unpackStringExpression(ex.getTheExpressionModel());&#xD;&#xA;String textStyles = generator.getTextComponentsStyles(elementStyles);&#xD;&#xA;&#xD;&#xA;ex.getTheSentence().setFullSentence(unpackedString);&#xD;&#xA;ex.getTheSentence().setTextStyles(textStyles);&#xD;&#xA;&#xD;&#xA;setTheExpression(ex);&#xD;&#xA;getTheModelFactory().saveExpression();&#xD;&#xA;return unpackedString;"/>
        </eAnnotations>
        <eParameters name="expressionString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="components" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eOperations name="unPackStyles" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return getTheExpression().getTheSentence().getTextStyles();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="createEModelFromUnpackedExpression" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="compilator.domain.generator.ExpressionModelManager emg = compilator.domain.generator.GeneratorFactory.eINSTANCE.createExpressionModelManager();&#xD;&#xA;emg.setTokens(tokens);&#xD;&#xA;emg.setElementStyle(elementStyles);&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#xD;&#xA;compilator.domain.generator.ExpressionModelGenerator generator = compilator.domain.generator.GeneratorFactory.eINSTANCE.createExpressionModelGenerator();&#xD;&#xA;generator.setComponents(components);&#xD;&#xA;generator.setExpressionManager(emg);&#xD;&#xA;&#xD;&#xA;compilator.domain.expression.Expression  ex = generator.createEModelFromUnpackedExpression(formatedString);&#x9;&#xD;&#xA;if(ex==null) return false;&#xD;&#xA;&#xD;&#xA;ex.getTheSentence().setFullSentence(formatedString);&#xD;&#xA;&#xD;&#xA;setTheExpression(ex);&#xD;&#xA;getTheModelFactory().saveExpression();&#xD;&#xA;&#xD;&#xA;return true;"/>
        </eAnnotations>
        <eParameters name="formatedString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="components" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theModelFactory" eType="#//ModelFactory"
          transient="true" eOpposite="#//ModelFactory/theDomainCompilator"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theUI" lowerBound="1"
          eType="#//ui/UI" eOpposite="#//ui/UI/theDomain"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theExpression" lowerBound="1"
          eType="#//domain/expression/Expression" containment="true" eOpposite="#//domain/expression/Expression/theDomain"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theLog" lowerBound="1"
          eType="#//domain/Log" containment="true" eOpposite="#//domain/Log/theDomain"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="Shapes" lowerBound="1"
          eType="#//domain/shapes/Shapes" containment="true" eOpposite="#//domain/shapes/Shapes/Domain"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Log">
      <eStructuralFeatures xsi:type="ecore:EReference" name="theDomain" eType="#//domain/Domain"
          transient="true" eOpposite="#//domain/Domain/theLog"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="listExpressions" upperBound="-1"
          eType="#//domain/expression/Expression" containment="true" eOpposite="#//domain/expression/Expression/Log"/>
    </eClassifiers>
    <eSubpackages name="expression" nsURI="http:///compilator/domain/expression.ecore"
        nsPrefix="compilator.domain.expression">
      <eClassifiers xsi:type="ecore:EClass" name="Expression">
        <eStructuralFeatures xsi:type="ecore:EReference" name="theDomain" eType="#//domain/Domain"
            transient="true" eOpposite="#//domain/Domain/theExpression"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="Log" eType="#//domain/Log"
            transient="true" eOpposite="#//domain/Log/listExpressions"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="theSentence" lowerBound="1"
            eType="#//domain/expression/sentence/Sentence" containment="true" eOpposite="#//domain/expression/sentence/Sentence/Expression"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="theExpressionModel"
            lowerBound="1" eType="#//domain/expression/expressionmodel/ExpressionModel"
            containment="true" eOpposite="#//domain/expression/expressionmodel/ExpressionModel/Expression"/>
      </eClassifiers>
      <eSubpackages name="expressionmodel" nsURI="http:///compilator/domain/expression/expressionmodel.ecore"
          nsPrefix="compilator.domain.expression.expressionmodel">
        <eClassifiers xsi:type="ecore:EClass" name="Element" abstract="true">
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ContainerElement"
              eType="#//domain/expression/expressionmodel/containercomponent/ContainerElement"
              transient="true" eOpposite="#//domain/expression/expressionmodel/containercomponent/ContainerElement/listElements"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="ExpressionModel"
              eType="#//domain/expression/expressionmodel/ExpressionModel" transient="true"
              eOpposite="#//domain/expression/expressionmodel/ExpressionModel/listElements"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="theStyle" lowerBound="1"
              eType="ecore:EClass ../../styles/model/styles.ecore#//domain/Style"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="Component" eType="#//domain/shapes/Component"
              transient="true" eOpposite="#//domain/shapes/Component/theElement"/>
        </eClassifiers>
        <eClassifiers xsi:type="ecore:EClass" name="ExpressionModel">
          <eStructuralFeatures xsi:type="ecore:EReference" name="Expression" eType="#//domain/expression/Expression"
              transient="true" eOpposite="#//domain/expression/Expression/theExpressionModel"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="theSentence" lowerBound="1"
              eType="#//domain/expression/sentence/Sentence" eOpposite="#//domain/expression/sentence/Sentence/theExpressionModel"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="listElements" upperBound="-1"
              eType="#//domain/expression/expressionmodel/Element" containment="true"
              eOpposite="#//domain/expression/expressionmodel/Element/ExpressionModel"/>
        </eClassifiers>
        <eSubpackages name="individualcomponent" nsURI="http:///compilator/domain/expression/expressionmodel/individualcomponent.ecore"
            nsPrefix="compilator.domain.expression.expressionmodel.individualcomponent">
          <eClassifiers xsi:type="ecore:EClass" name="Button" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement"/>
          <eClassifiers xsi:type="ecore:EClass" name="IndividualElement" abstract="true"
              eSuperTypes="#//domain/expression/expressionmodel/Element"/>
          <eClassifiers xsi:type="ecore:EClass" name="Label" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Attribute" eType="#//domain/expression/expressionmodel/individualcomponent/Attribute"
                transient="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/Attribute/theLabel"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="TextField" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Attribute" eType="#//domain/expression/expressionmodel/individualcomponent/Attribute"
                transient="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/Attribute/theTextField"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Column" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="Table" eType="#//domain/expression/expressionmodel/individualcomponent/Table"
                transient="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/Table/listColumn"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="ComboBox" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="theItem" upperBound="-1"
                eType="#//domain/expression/expressionmodel/individualcomponent/Item"
                containment="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/Item/ComboBox"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Table" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="listColumn" lowerBound="1"
                upperBound="-1" eType="#//domain/expression/expressionmodel/individualcomponent/Column"
                containment="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/Column/Table"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Item" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="ComboBox" eType="#//domain/expression/expressionmodel/individualcomponent/ComboBox"
                transient="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/ComboBox/theItem"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Attribute" eSuperTypes="#//domain/expression/expressionmodel/individualcomponent/IndividualElement">
            <eStructuralFeatures xsi:type="ecore:EReference" name="theTextField" lowerBound="1"
                eType="#//domain/expression/expressionmodel/individualcomponent/TextField"
                containment="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/TextField/Attribute"/>
            <eStructuralFeatures xsi:type="ecore:EReference" name="theLabel" lowerBound="1"
                eType="#//domain/expression/expressionmodel/individualcomponent/Label"
                containment="true" eOpposite="#//domain/expression/expressionmodel/individualcomponent/Label/Attribute"/>
          </eClassifiers>
        </eSubpackages>
        <eSubpackages name="containercomponent" nsURI="http:///compilator/domain/expression/expressionmodel/containercomponent.ecore"
            nsPrefix="compilator.domain.expression.expressionmodel.containercomponent">
          <eClassifiers xsi:type="ecore:EClass" name="ContainerElement" abstract="true"
              eSuperTypes="#//domain/expression/expressionmodel/Element">
            <eStructuralFeatures xsi:type="ecore:EReference" name="listElements" upperBound="-1"
                eType="#//domain/expression/expressionmodel/Element" containment="true"
                eOpposite="#//domain/expression/expressionmodel/Element/ContainerElement"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="orientation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
            <eStructuralFeatures xsi:type="ecore:EAttribute" name="isVisible" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"/>
          </eClassifiers>
          <eClassifiers xsi:type="ecore:EClass" name="Container" eSuperTypes="#//domain/expression/expressionmodel/containercomponent/ContainerElement"/>
        </eSubpackages>
        <eSubpackages name="appearance" nsURI="http:///compilator/domain/expression/expressionmodel/appearance.ecore"
            nsPrefix="compilator.domain.expression.expressionmodel.appearance"/>
      </eSubpackages>
      <eSubpackages name="sentence" nsURI="http:///compilator/domain/expression/sentence.ecore"
          nsPrefix="compilator.domain.expression.sentence">
        <eClassifiers xsi:type="ecore:EClass" name="Sentence">
          <eStructuralFeatures xsi:type="ecore:EReference" name="Expression" eType="#//domain/expression/Expression"
              transient="true" eOpposite="#//domain/expression/Expression/theSentence"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="theExpressionModel"
              lowerBound="1" eType="#//domain/expression/expressionmodel/ExpressionModel"
              eOpposite="#//domain/expression/expressionmodel/ExpressionModel/theSentence"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="compressedSentence"
              eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="fullSentence" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eStructuralFeatures xsi:type="ecore:EAttribute" name="textStyles" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eStructuralFeatures xsi:type="ecore:EReference" name="Component" eType="#//domain/shapes/Component"
              transient="true" eOpposite="#//domain/shapes/Component/theSentence"/>
        </eClassifiers>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="shapes" nsURI="http:///compilator/domain/shapes.ecore" nsPrefix="compilator.domain.shapes">
      <eClassifiers xsi:type="ecore:EClass" name="Shapes">
        <eStructuralFeatures xsi:type="ecore:EReference" name="Domain" eType="#//domain/Domain"
            transient="true" eOpposite="#//domain/Domain/Shapes"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="listComponents" upperBound="-1"
            eType="#//domain/shapes/Component" containment="true" eOpposite="#//domain/shapes/Component/Shapes"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="Component">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="Shapes" eType="#//domain/shapes/Shapes"
            transient="true" eOpposite="#//domain/shapes/Shapes/listComponents"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="theElement" lowerBound="1"
            eType="#//domain/expression/expressionmodel/Element" containment="true"
            eOpposite="#//domain/expression/expressionmodel/Element/Component"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="theSentence" lowerBound="1"
            eType="#//domain/expression/sentence/Sentence" containment="true" eOpposite="#//domain/expression/sentence/Sentence/Component"/>
      </eClassifiers>
    </eSubpackages>
    <eSubpackages name="datatypes" nsURI="http:///compilator/domain/datatypes.ecore"
        nsPrefix="compilator.domain.datatypes">
      <eSubpackages name="util" nsURI="http:///compilator/domain/datatypes/util.ecore"
          nsPrefix="compilator.domain.datatypes.util">
        <eClassifiers xsi:type="ecore:EDataType" name="TreeMap" instanceClassName="java.util.TreeMap"/>
        <eClassifiers xsi:type="ecore:EDataType" name="ArrayList" instanceClassName="java.util.ArrayList"/>
        <eClassifiers xsi:type="ecore:EDataType" name="TreeSet" instanceClassName="java.util.TreeSet"/>
        <eClassifiers xsi:type="ecore:EDataType" name="HashMap" instanceClassName="java.util.HashMap"/>
      </eSubpackages>
    </eSubpackages>
    <eSubpackages name="generator" nsURI="http:///compilator/domain/generator.ecore"
        nsPrefix="compilator.domain.generator">
      <eClassifiers xsi:type="ecore:EClass" name="ExpressionModelManager">
        <eOperations name="getName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="return s.split(&quot;_&quot;)[1];"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="createTable" eType="#//domain/expression/expressionmodel/individualcomponent/Table">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="Table table = compilator.domain.expression.expressionmodel.&#xD;&#xA;&#x9;&#x9;individualcomponent.IndividualcomponentFactory.eINSTANCE.createTable();&#xD;&#xA;String nameTable=&quot;&quot;,body=&quot;&quot;;&#xD;&#xA;int j =0;&#xD;&#xA;while(s.charAt(j)!='&lt;'){ nameTable+=s.charAt(j);j++;} j++;&#xD;&#xA;while(s.charAt(j)!='>'){body+=s.charAt(j);j++;}&#xD;&#xA;&#xD;&#xA;styles.domain.Style style = findStyleElement(nameTable);&#xD;&#xA;if(style!=null) table.setTheStyle(style);&#xD;&#xA;&#xD;&#xA;String [] columns = body.split(&quot;,&quot;);&#xD;&#xA;&#xD;&#xA;for(int i=0;i&lt;columns.length;i++){&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.individualcomponent.&#xD;&#xA;&#x9;&#x9;Column co = compilator.domain.expression.expressionmodel.individualcomponent.&#xD;&#xA;&#x9;&#x9;IndividualcomponentFactory.eINSTANCE.createColumn();&#xD;&#xA;&#x9;co.setName(columns[i]);&#xD;&#xA;&#x9;styles.domain.Style styleColumn = findStyleElement(columns[i]);&#xD;&#xA;&#x9;if(styleColumn!=null) co.setTheStyle(styleColumn);&#xD;&#xA;&#x9;table.getListColumn().add(co);&#xD;&#xA;}&#xD;&#xA;table.setName(nameTable);&#xD;&#xA;return table;"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="isContainer" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="return s.contains(&quot;[&quot;);"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="createIndividualElement" eType="#//domain/expression/expressionmodel/Element">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="Element e=null;&#xD;&#xA;styles.domain.Style style;&#xD;&#xA;&#xD;&#xA;if(tokens.get(s)!=null &amp;&amp; tokens.get(s).equals(&quot;Boton&quot;)){&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.individualcomponent.Button b = compilator.domain.expression.expressionmodel.individualcomponent.IndividualcomponentFactory.eINSTANCE.createButton();&#xD;&#xA;&#x9;b.setName(getName(s));&#xD;&#xA;&#x9;style = findStyleElement(s);&#xD;&#xA;&#x9;if(style!=null) b.setTheStyle(style);&#xD;&#xA;&#x9;e=b;&#xD;&#xA;}&#xD;&#xA;else if(tokens.get(s)!=null &amp;&amp; tokens.get(s).equals(&quot;ComboBox&quot;)){&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.individualcomponent.ComboBox cb = compilator.domain.expression.expressionmodel.individualcomponent.IndividualcomponentFactory.eINSTANCE.createComboBox();&#xD;&#xA;&#x9;cb.setName(s.substring(1));&#xD;&#xA;&#x9;style = findStyleElement(cb.getName());&#xD;&#xA;&#x9;if(style!=null) cb.setTheStyle(style);&#xD;&#xA;&#x9;e=cb;&#xD;&#xA;}&#xD;&#xA;else if(tokens.get(s)!=null &amp;&amp; tokens.get(s).equals(&quot;Campo de Texto&quot;)){&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.individualcomponent.TextField txt = compilator.domain.expression.expressionmodel.individualcomponent.IndividualcomponentFactory.eINSTANCE.createTextField();&#xD;&#xA;&#x9;txt.setName(getName(s));&#xD;&#xA;&#x9;style = findStyleElement(s);&#xD;&#xA;&#x9;if(style!=null) txt.setTheStyle(style);&#xD;&#xA;&#x9;e = txt;&#xD;&#xA;}&#xD;&#xA;else if(tokens.get(s)!=null &amp;&amp; tokens.get(s).equals(&quot;Label&quot;)){&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.individualcomponent.Label l = compilator.domain.expression.expressionmodel.individualcomponent.IndividualcomponentFactory.eINSTANCE.createLabel();&#xD;&#xA;&#x9;l.setName(getName(s));&#xD;&#xA;&#x9;style = findStyleElement(s);&#xD;&#xA;&#x9;if(style!=null) l.setTheStyle(style);&#xD;&#xA;&#x9;e=l;&#xD;&#xA;}else if(s.contains(&quot;&lt;&quot;)){&#xD;&#xA;&#x9;Table  t = createTable(s);&#xD;&#xA;&#x9;e = t;&#xD;&#xA;}&#xD;&#xA;return e;"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="split" eType="#//domain/datatypes/util/ArrayList">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="ArrayList&lt;String> components=new ArrayList&lt;String>();&#xD;&#xA;int f=0;&#xD;&#xA;String si=&quot;&quot;;&#xD;&#xA;for(int i=0;i&lt;s.length();i++){&#xD;&#xA;&#x9;if(s.charAt(i)==',' &amp;&amp; f==0){&#xD;&#xA;&#x9;&#x9;components.add(si);&#xD;&#xA;&#x9;&#x9;si=&quot;&quot;;&#xD;&#xA;&#x9;&#x9;continue;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;f = (s.charAt(i)=='[' ||s.charAt(i)=='&lt;' )? f+1:f;&#xD;&#xA;&#x9;f = (s.charAt(i)==']' ||s.charAt(i)=='>' )? f-1:f;&#xD;&#xA;&#x9;si+=s.charAt(i);&#xD;&#xA;}&#xD;&#xA;components.add(si);&#xD;&#xA;return components;"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="createContainer" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="String nameContainer=&quot;&quot;;&#xD;&#xA;String body=&quot;&quot;;&#xD;&#xA;int j =0;&#xD;&#xA;&#xD;&#xA;while(textElement.charAt(j)!='['){&#xD;&#xA;&#x9;nameContainer+=textElement.charAt(j);&#xD;&#xA;&#x9;j++;&#xD;&#xA;}&#xD;&#xA;j++;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;String orientation =&quot;|&quot;;&#xD;&#xA;int lenghtName = nameContainer.length()-1;&#xD;&#xA;&#xD;&#xA;if(nameContainer.charAt( lenghtName)=='|' || nameContainer.charAt(lenghtName)=='-'){&#xD;&#xA;&#x9;orientation = nameContainer.charAt(lenghtName)+&quot;&quot;;&#xD;&#xA;&#x9;nameContainer = nameContainer.substring(0, lenghtName);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;styles.domain.Style style = findStyleElement(nameContainer);&#xD;&#xA;if(style!=null) container.setTheStyle(style);&#xD;&#xA;&#xD;&#xA;int f=0;&#xD;&#xA;while(textElement.charAt(j)!=']' || f!=0){&#xD;&#xA;&#x9;f = (textElement.charAt(j)=='[')? f+1:f;&#xD;&#xA;&#x9;f = (textElement.charAt(j)==']')? f-1:f;&#xD;&#xA;&#x9;body+=textElement.charAt(j);j++;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;container.setName(nameContainer);&#xD;&#xA;container.setOrientation(orientation);&#xD;&#xA;container.setIsVisible( (textElement.charAt( textElement.length()-1)!=39 )  );&#xD;&#xA;return body;"/>
          </eAnnotations>
          <eParameters name="textElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eParameters name="container" eType="#//domain/expression/expressionmodel/containercomponent/Container"/>
        </eOperations>
        <eOperations name="findStyleElement" eType="ecore:EClass ../../styles/model/styles.ecore#//domain/Style">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="return (Style) elementStyle.get(element);"/>
          </eAnnotations>
          <eParameters name="element" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="elementStyle" eType="#//domain/datatypes/util/TreeMap"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expressionGenerator"
            lowerBound="1" eType="#//domain/generator/ExpressionModelGenerator" eOpposite="#//domain/generator/ExpressionModelGenerator/expressionManager"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentGenerator"
            lowerBound="1" eType="#//domain/generator/ComponentModelGenerator" eOpposite="#//domain/generator/ComponentModelGenerator/expressionManager"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ComponentModelGenerator">
        <eOperations name="exploreSentence">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="java.lang.Object [] elements = expressionManager.split(s).toArray();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for(int i=0;i&lt;elements.length;i++){&#xD;&#xA;&#x9;&#x9;&#x9;String textElement =  (String)elements[i];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if(expressionManager.isContainer(textElement)){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.containercomponent.Container container = compilator.domain.expression.expressionmodel.containercomponent.ContainercomponentFactory.eINSTANCE.createContainer();&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String body = expressionManager.createContainer(textElement,container);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;exploreSentence(body,container);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;parent.getListElements().add(container);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;parent.getListElements().add(expressionManager.createIndividualElement(textElement));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eParameters name="parent" eType="#//domain/expression/expressionmodel/containercomponent/Container"/>
        </eOperations>
        <eOperations name="createComponent" eType="#//domain/shapes/Component">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#x9;&#x9;compilator.domain.shapes.Component component = compilator.domain.shapes.ShapesFactory.eINSTANCE.createComponent();&#xD;&#xA;&#x9;&#x9;component.setName(nameComponent);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;compilator.domain.expression.sentence.Sentence sentence = compilator.domain.expression.sentence.SentenceFactory.eINSTANCE.createSentence();&#xD;&#xA;&#x9;&#x9;sentence.setFullSentence(unformatedSentence);&#xD;&#xA;&#x9;&#x9;component.setTheSentence(sentence);&#xD;&#xA;&#x9;&#x9;java.lang.Object [] elements = expressionManager.split(formatedSentence).toArray();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for(int i=0;i&lt;elements.length;i++){&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;String textElement = (String) elements[i];&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;if(expressionManager.isContainer(textElement)){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.containercomponent.Container container = compilator.domain.expression.expressionmodel.containercomponent.ContainercomponentFactory.eINSTANCE.createContainer();&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;String body = expressionManager.createContainer(textElement,container);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;exploreSentence(body,container);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;component.setTheElement(container);&#xD;&#xA;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;component.setTheElement(expressionManager.createIndividualElement(textElement));&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return component;"/>
          </eAnnotations>
          <eParameters name="nameComponent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eParameters name="formatedSentence" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eParameters name="unformatedSentence" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expressionManager"
            lowerBound="1" eType="#//domain/generator/ExpressionModelManager" eOpposite="#//domain/generator/ExpressionModelManager/componentGenerator"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="ExpressionModelGenerator">
        <eOperations name="exploreSentence">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#x9;java.lang.Object [] elements = expressionManager.split(s).toArray();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;for(int i=0;i&lt;elements.length;i++){&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;String textElement =  (String)elements[i];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if(components.containsKey(textElement)){&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.shapes.Component component  = (compilator.domain.shapes.Component)components.get(textElement); &#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.Element e = org.eclipse.emf.ecore.util.EcoreUtil.copy(component.getTheElement());&#xD;&#xA;&#x9;&#x9;&#x9;//TODO&#xD;&#xA;&#x9;&#x9;&#x9;getComponentStyles(e);&#xD;&#xA;&#x9;&#x9;&#x9;textComponents.add(textElement);&#xD;&#xA;&#x9;&#x9;&#x9;parent.getListElements().add(e);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(expressionManager.isContainer(textElement)){&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.containercomponent.Container container = compilator.domain.expression.expressionmodel.containercomponent.ContainercomponentFactory.eINSTANCE.createContainer();&#xD;&#xA;&#x9;&#x9;&#x9;String body = expressionManager.createContainer(textElement,container);&#xD;&#xA;&#x9;&#x9;&#x9;exploreSentence(body,container);&#xD;&#xA;&#x9;&#x9;&#x9;parent.getListElements().add(container);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;parent.getListElements().add(expressionManager.createIndividualElement(textElement));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eParameters name="parent" eType="#//domain/expression/expressionmodel/containercomponent/Container"/>
        </eOperations>
        <eOperations name="createExpressionModel" eType="#//domain/expression/Expression">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#x9;textComponents = new TreeSet&lt;String>();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;componentsStyles = new TreeMap&lt;String, TreeSet&lt;String>>();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;compilator.domain.expression.Expression expression = compilator.domain.expression.ExpressionFactory.eINSTANCE.createExpression();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;compilator.domain.expression.sentence.Sentence sentence = compilator.domain.expression.sentence.SentenceFactory.eINSTANCE.createSentence();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.ExpressionModel model = compilator.domain.expression.expressionmodel.ExpressionmodelFactory.eINSTANCE.createExpressionModel();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;sentence.setCompressedSentence(unformatedSentence);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;expression.setTheSentence(sentence);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;java.lang.Object [] elements = expressionManager.split(formatedSentence).toArray();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;for(int i=0;i&lt;elements.length;i++){&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;String textElement = (String) elements[i];&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if(components.containsKey(textElement)){&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.shapes.Component component  = (compilator.domain.shapes.Component)components.get(textElement); &#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.Element e = org.eclipse.emf.ecore.util.EcoreUtil.copy(component.getTheElement());&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;getComponentStyles(e);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;model.getListElements().add(e);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;textComponents.add(textElement);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(expressionManager.isContainer(textElement)){&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.containercomponent.Container container = compilator.domain.expression.expressionmodel.containercomponent.ContainercomponentFactory.eINSTANCE.createContainer();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;String body = expressionManager.createContainer(textElement,container);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;exploreSentence(body,container);&#xD;&#xA;&#x9;&#x9;&#x9;model.getListElements().add(container);&#xD;&#xA;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;model.getListElements().add(expressionManager.createIndividualElement(textElement));&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;expression.setTheExpressionModel(model);&#xD;&#xA;&#x9;return expression;"/>
          </eAnnotations>
          <eParameters name="formatedSentence" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eParameters name="unformatedSentence" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="unpackStringExpression" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#x9;&#x9;String textExpression=&quot;&quot;;&#xD;&#xA;&#x9;&#x9;for(int i=0;i&lt;model.getListElements().size();i++){&#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.Element element = model.getListElements().get(i);&#xD;&#xA;&#x9;&#x9;&#x9;String textElement;&#xD;&#xA;&#x9;&#x9;&#x9;if(element instanceof compilator.domain.expression.expressionmodel.containercomponent.Container){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textElement = getTextExpressionContainer((compilator.domain.expression.expressionmodel.containercomponent.Container)element);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textExpression += (i==0)? textElement: &quot;,&quot; + textElement; &#xD;&#xA;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textElement = getTextElement(element);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textExpression+= (i==0)? textElement: &quot;,&quot; + textElement ;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return textExpression+&quot;;&quot;;"/>
          </eAnnotations>
          <eParameters name="model" eType="#//domain/expression/expressionmodel/ExpressionModel"/>
        </eOperations>
        <eOperations name="getTextExpressionContainer" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#x9;&#x9;String textExpression= c.getName()+c.getOrientation()+&quot;[&quot;;&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;for(int i=0;i&lt;c.getListElements().size();i++){&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;compilator.domain.expression.expressionmodel.Element element = c.getListElements().get(i);&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;String textElement;&#xD;&#xA;&#x9;&#x9;&#x9;if(element instanceof compilator.domain.expression.expressionmodel.containercomponent.Container){&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textElement = getTextExpressionContainer((compilator.domain.expression.expressionmodel.containercomponent.Container)element);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textExpression += (i==0)? textElement: &quot;,&quot; + textElement; &#xD;&#xA;&#x9;&#x9;&#x9;}else{&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textElement = getTextElement(element);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;textExpression+= (i==0)? textElement: &quot;,&quot; + textElement ;&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;textExpression+=&quot;]&quot;;&#xD;&#xA;&#x9;&#x9;return textExpression;"/>
          </eAnnotations>
          <eParameters name="c" eType="#//domain/expression/expressionmodel/containercomponent/Container"/>
        </eOperations>
        <eOperations name="getTextElement" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#x9;&#x9;String ans=element.getName();&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;if(element instanceof compilator.domain.expression.expressionmodel.individualcomponent.Button){&#xD;&#xA;&#x9;&#x9;&#x9;ans = &quot;btn_&quot;+ans;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(element instanceof compilator.domain.expression.expressionmodel.individualcomponent.ComboBox){&#xD;&#xA;&#x9;&#x9;&#x9;ans = &quot;*&quot;+ans;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(element instanceof compilator.domain.expression.expressionmodel.individualcomponent.Label){&#xD;&#xA;&#x9;&#x9;&#x9;ans = &quot;lbl_&quot;+ans;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if(element instanceof compilator.domain.expression.expressionmodel.individualcomponent.TextField){&#xD;&#xA;&#x9;&#x9;&#x9;ans = &quot;txt_&quot;+ans;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;else if( element instanceof compilator.domain.expression.expressionmodel.individualcomponent.Table){&#xD;&#xA;&#x9;&#x9;&#x9;ans = getTableText(element);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return ans;"/>
          </eAnnotations>
          <eParameters name="element" eType="#//domain/expression/expressionmodel/Element"/>
        </eOperations>
        <eOperations name="getTableText" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="&#x9;&#x9; compilator.domain.expression.expressionmodel.individualcomponent.Table table = ( compilator.domain.expression.expressionmodel.individualcomponent.Table)element;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9; String ans = table.getName()+&quot;&lt;&quot;;&#xD;&#xA;&#x9;&#x9; &#xD;&#xA;&#x9;&#x9; for(int i=0;i&lt;table.getListColumn().size();i++){&#xD;&#xA;&#x9;&#x9;&#x9; String name = table.getListColumn().get(i).getName();&#xD;&#xA;&#x9;&#x9;&#x9; ans +=(i==0)? name: &quot;,&quot; + name;&#xD;&#xA;&#x9;&#x9; }&#xD;&#xA;&#x9;&#x9; return ans+&quot;>&quot;;"/>
          </eAnnotations>
          <eParameters name="element" eType="#//domain/expression/expressionmodel/Element"/>
        </eOperations>
        <eOperations name="getComponentStyles">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="getContainerStyles((compilator.domain.expression.expressionmodel.containercomponent.Container) element);"/>
          </eAnnotations>
          <eParameters name="element" eType="#//domain/expression/expressionmodel/Element"/>
        </eOperations>
        <eOperations name="getContainerStyles">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="if(c.getTheStyle() != null) {&#xD;&#xA;&#x9;if(componentsStyles.containsKey(c.getTheStyle().getName())) {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = (TreeSet&lt;String>) componentsStyles.get(c.getTheStyle().getName());&#xD;&#xA;&#x9;&#x9;set.add(c.getName());&#xD;&#xA;&#x9;&#x9;componentsStyles.put(c.getTheStyle().getName(), set);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = new TreeSet&lt;String>();&#xD;&#xA;&#x9;&#x9;set.add(c.getName());&#xD;&#xA;&#x9;&#x9;componentsStyles.put(c.getTheStyle().getName(), set);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;for(int i=0;i&lt;c.getListElements().size();i++){&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.Element element = c.getListElements().get(i);&#xD;&#xA;&#x9;if(element instanceof compilator.domain.expression.expressionmodel.containercomponent.Container){&#xD;&#xA;&#x9;&#x9;getContainerStyles((compilator.domain.expression.expressionmodel.containercomponent.Container)element);&#xD;&#xA;&#x9;}else if(element instanceof compilator.domain.expression.expressionmodel.individualcomponent.Table) {&#xD;&#xA;&#x9;&#x9;getTableStyle(element);&#xD;&#xA;&#x9;}else {&#xD;&#xA;&#x9;&#x9;getElementStyle(element);&#xD;&#xA;&#x9;}&#xD;&#xA;}"/>
          </eAnnotations>
          <eParameters name="c" eType="#//domain/expression/expressionmodel/containercomponent/Container"/>
        </eOperations>
        <eOperations name="getTableStyle">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="compilator.domain.expression.expressionmodel.individualcomponent.Table table = &#xD;&#xA;&#x9;&#x9;(compilator.domain.expression.expressionmodel.individualcomponent.Table) element;&#xD;&#xA; &#xD;&#xA; if(table.getTheStyle() != null) {&#xD;&#xA;&#x9;if(componentsStyles.containsKey(table.getTheStyle().getName())) {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = (TreeSet&lt;String>) componentsStyles.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;get(table.getTheStyle().getName());&#xD;&#xA;&#x9;&#x9;set.add(table.getName());&#xD;&#xA;&#x9;&#x9;componentsStyles.put(table.getTheStyle().getName(), set);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = new TreeSet&lt;String>();&#xD;&#xA;&#x9;&#x9;set.add(table.getName());&#xD;&#xA;&#x9;&#x9;componentsStyles.put(table.getTheStyle().getName(), set);&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA; &#xD;&#xA;for(int i=0;i&lt;table.getListColumn().size();i++){&#xD;&#xA;&#x9;compilator.domain.expression.expressionmodel.individualcomponent.Column column = table.&#xD;&#xA;&#x9;&#x9;&#x9;getListColumn().get(i);&#xD;&#xA;&#x9;if(column.getTheStyle() != null) {&#xD;&#xA;&#x9;&#x9;if(componentsStyles.containsKey(column.getTheStyle().getName())) {&#xD;&#xA;&#x9;&#x9;&#x9;TreeSet&lt;String> set = (TreeSet&lt;String>) componentsStyles.&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;get(column.getTheStyle().getName());&#xD;&#xA;&#x9;&#x9;&#x9;set.add(column.getName());&#xD;&#xA;&#x9;&#x9;&#x9;componentsStyles.put(column.getTheStyle().getName(), set);&#xD;&#xA;&#x9;&#x9;} else {&#xD;&#xA;&#x9;&#x9;&#x9;TreeSet&lt;String> set = new TreeSet&lt;String>();&#xD;&#xA;&#x9;&#x9;&#x9;set.add(column.getName());&#xD;&#xA;&#x9;&#x9;&#x9;componentsStyles.put(column.getTheStyle().getName(), set);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}&#xD;&#xA;}"/>
          </eAnnotations>
          <eParameters name="element" eType="#//domain/expression/expressionmodel/Element"/>
        </eOperations>
        <eOperations name="getElementStyle">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="if(element.getTheStyle() != null) {&#xD;&#xA;&#x9;if(componentsStyles.containsKey(element.getTheStyle().getName())) {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = (TreeSet&lt;String>) componentsStyles.get(element.getTheStyle().getName());&#xD;&#xA;&#x9;&#x9;set.add(getTextElement(element));&#xD;&#xA;&#x9;&#x9;componentsStyles.put(element.getTheStyle().getName(), set);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = new TreeSet&lt;String>();&#xD;&#xA;&#x9;&#x9;set.add(getTextElement(element));&#xD;&#xA;&#x9;&#x9;componentsStyles.put(element.getTheStyle().getName(), set);&#xD;&#xA;&#x9;}&#xD;&#xA;}"/>
          </eAnnotations>
          <eParameters name="element" eType="#//domain/expression/expressionmodel/Element"/>
        </eOperations>
        <eOperations name="getTextComponentsStyles" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="String text = &quot;&quot;;&#xD;&#xA;fillAdditionalElementStyles(elementStyles);&#xD;&#xA;for(Object entry : componentsStyles.entrySet()) {&#xD;&#xA;&#x9;java.util.Map.Entry&lt;String, TreeSet&lt;String>> en = (java.util.Map.Entry&lt;String, TreeSet&lt;String>>)entry;&#xD;&#xA;&#x9;String key = en.getKey();&#xD;&#xA;&#x9;  TreeSet&lt;String> set = en.getValue();&#xD;&#xA;&#x9;  text += key + &quot; {\n&quot;;&#xD;&#xA;&#x9;  int i=0;&#xD;&#xA;&#x9;  for(String s : set) {&#xD;&#xA;&#x9;&#x9;  text += &quot;\t&quot; + s;&#xD;&#xA;&#x9;&#x9;  if(i &lt; set.size()-1) {&#xD;&#xA;&#x9;&#x9;&#x9;  text += &quot;,&quot;;&#xD;&#xA;&#x9;&#x9;  }&#xD;&#xA;&#x9;&#x9;  text += &quot;\n&quot;;&#xD;&#xA;&#x9;&#x9;  i++;&#xD;&#xA;&#x9;  }&#xD;&#xA;&#x9;  text += &quot;};\n\n&quot;;&#xD;&#xA;}&#xD;&#xA;return text;"/>
          </eAnnotations>
          <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
        </eOperations>
        <eOperations name="fillAdditionalElementStyles">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="for(Object entry : elementStyles.entrySet()) {&#xD;&#xA;&#x9;java.util.Map.Entry&lt;String, styles.domain.Style > en = (java.util.Map.Entry&lt;String, &#xD;&#xA;&#x9;&#x9;&#x9;styles.domain.Style>)entry;&#xD;&#xA;&#x9;String key = en.getKey();&#xD;&#xA;&#x9;styles.domain.Style s = en.getValue();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if(componentsStyles.containsKey(s.getName())) {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = (TreeSet&lt;String>) componentsStyles.get(s.getName());&#xD;&#xA;&#x9;&#x9;set.add(key);&#xD;&#xA;&#x9;&#x9;componentsStyles.put(s.getName(), set);&#xD;&#xA;&#x9;} else {&#xD;&#xA;&#x9;&#x9;TreeSet&lt;String> set = new TreeSet&lt;String>();&#xD;&#xA;&#x9;&#x9;set.add(key);&#xD;&#xA;&#x9;&#x9;componentsStyles.put(s.getName(), set);&#xD;&#xA;&#x9;}&#xD;&#xA;}"/>
          </eAnnotations>
          <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
        </eOperations>
        <eOperations name="createEModelFromUnpackedExpression" eType="#//domain/expression/Expression">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="compilator.domain.expression.Expression expression = compilator.domain.expression.ExpressionFactory.eINSTANCE.createExpression();&#xD;&#xA;&#xD;&#xA;compilator.domain.expression.sentence.Sentence sentence = compilator.domain.expression.sentence.SentenceFactory.eINSTANCE.createSentence();&#xD;&#xA;&#xD;&#xA;compilator.domain.expression.expressionmodel.ExpressionModel model = compilator.domain.expression.expressionmodel.ExpressionmodelFactory.eINSTANCE.createExpressionModel();&#xD;&#xA;&#xD;&#xA;sentence.setCompressedSentence(formatedString);&#xD;&#xA;&#xD;&#xA;expression.setTheSentence(sentence);&#xD;&#xA;&#xD;&#xA;java.lang.Object [] elements = expressionManager.split(formatedString).toArray();&#xD;&#xA;&#xD;&#xA;boolean f = true;&#xD;&#xA;for(int i=0;i&lt;elements.length &amp;&amp; f;i++){&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;String textElement = (String) elements[i];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if(components.containsKey(textElement)){&#xD;&#xA;&#x9;&#x9;f=false;&#x9;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else if(expressionManager.isContainer(textElement)){&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;compilator.domain.expression.expressionmodel.containercomponent.Container container = compilator.domain.expression.expressionmodel.containercomponent.ContainercomponentFactory.eINSTANCE.createContainer();&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;String body = expressionManager.createContainer(textElement,container);&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;f = f &amp;&amp; exploreUnpackedSentences(body,container);&#xD;&#xA;&#x9;&#x9;model.getListElements().add(container);&#xD;&#xA;&#x9;}else{&#xD;&#xA;&#x9;&#x9;model.getListElements().add(expressionManager.createIndividualElement(textElement));&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;expression.setTheExpressionModel(model);&#xD;&#xA;return (f)?expression:null;"/>
          </eAnnotations>
          <eParameters name="formatedString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        </eOperations>
        <eOperations name="exploreUnpackedSentences" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="java.lang.Object [] elements = expressionManager.split(s).toArray();&#xD;&#xA;&#xD;&#xA;boolean f  = true;&#xD;&#xA;for(int i=0;i&lt;elements.length &amp;&amp; f;i++){&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;String textElement =  (String)elements[i];&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;if(components.containsKey(textElement)){&#xD;&#xA;&#x9;&#x9;f = false;&#xD;&#xA;&#x9;}&#xD;&#xA;&#x9;else if(expressionManager.isContainer(textElement)){&#xD;&#xA;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;compilator.domain.expression.expressionmodel.containercomponent.Container container = compilator.domain.expression.expressionmodel.containercomponent.ContainercomponentFactory.eINSTANCE.createContainer();&#xD;&#xA;&#x9;&#x9;String body = expressionManager.createContainer(textElement,container);&#xD;&#xA;&#x9;&#x9;f = f &amp;&amp; exploreUnpackedSentences(body,container);&#xD;&#xA;&#x9;&#x9;parent.getListElements().add(container);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;}else{&#xD;&#xA;&#x9;&#x9;parent.getListElements().add(expressionManager.createIndividualElement(textElement));&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;return f;"/>
          </eAnnotations>
          <eParameters name="s" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
          <eParameters name="parent" eType="#//domain/expression/expressionmodel/containercomponent/Container"/>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="components" eType="#//domain/datatypes/util/TreeMap"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="textComponents" eType="#//domain/datatypes/util/TreeSet"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="componentsStyles" eType="#//domain/datatypes/util/TreeMap"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="expressionManager"
            lowerBound="1" eType="#//domain/generator/ExpressionModelManager" eOpposite="#//domain/generator/ExpressionModelManager/expressionGenerator"/>
      </eClassifiers>
    </eSubpackages>
  </eSubpackages>
  <eSubpackages name="ui" nsURI="http:///compilator/ui.ecore" nsPrefix="compilator.ui">
    <eClassifiers xsi:type="ecore:EClass" name="UI">
      <eOperations name="createComponent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="theDomain.createComponent(nameComponent,expressionString,tokens,elementStyle);"/>
        </eAnnotations>
        <eParameters name="nameComponent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="expressionString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyle" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eOperations name="createExpressionModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return theDomain.createExpressionModel(expressionString, tokens,components,elementStyles);"/>
        </eAnnotations>
        <eParameters name="expressionString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="components" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eOperations name="unPackStyles" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return theDomain.unPackStyles();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="createEModelFromUnpackedExpression" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return theDomain.createEModelFromUnpackedExpression(formatedString, tokens,components,elementStyles);"/>
        </eAnnotations>
        <eParameters name="formatedString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="components" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theModelFactory" eType="#//ModelFactory"
          transient="true" eOpposite="#//ModelFactory/theUI"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theDomain" lowerBound="1"
          eType="#//domain/Domain" eOpposite="#//domain/Domain/theUI"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theCharacteristicstContainer"
          lowerBound="1" eType="#//ui/CharacteristicstContainer" containment="true"
          eOpposite="#//ui/CharacteristicstContainer/UI"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="StylesConainer" lowerBound="1"
          eType="#//ui/StylesConainer" containment="true" eOpposite="#//ui/StylesConainer/UI"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="ComponentsContainer"
          lowerBound="1" eType="#//ui/ComponentsContainer" containment="true" eOpposite="#//ui/ComponentsContainer/UI"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theExpressionContainer"
          lowerBound="1" eType="#//ui/ExpressionContainer" containment="true" eOpposite="#//ui/ExpressionContainer/UI"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="theStyleAssigmentContainer"
          lowerBound="1" eType="#//ui/StyleAssigmentContainer" containment="true"
          eOpposite="#//ui/StyleAssigmentContainer/UI"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StylesConainer">
      <eOperations name="loadStyles" eType="#//domain/datatypes/util/TreeMap">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="styles.domain.StyleFactory styleFactory = mfStyles.getTheDomainStyles().getTheStyleFactory();&#xD;&#xA;org.eclipse.emf.common.util.EList&lt;styles.domain.Style> list = styleFactory.getListStyle();&#xD;&#xA;java.util.TreeMap styles =  new java.util.TreeMap&lt;String, styles.domain.Style>();&#xD;&#xA;for(styles.domain.Style s : list) styles.put(s.getName(), s);&#xD;&#xA;return styles;"/>
        </eAnnotations>
        <eParameters name="mfStyles" eType="ecore:EClass ../../styles/model/styles.ecore#//ModelFactoryStyles"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="UI" eType="#//ui/UI"
          transient="true" eOpposite="#//ui/UI/StylesConainer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ComponentsContainer">
      <eOperations name="createComponent">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="getUI().createComponent(nameComponent,getFormatedString(expressionString),tokens,elementStyle);"/>
        </eAnnotations>
        <eParameters name="nameComponent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="expressionString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyle" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eOperations name="getFormatedString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="int i =0;&#xD;&#xA;String formated=&quot;&quot;;&#xD;&#xA;while(t.charAt(i)!=';'){&#xD;&#xA;&#x9;char c = t.charAt(i);&#xD;&#xA;&#x9;if(c!='\n' &amp;&amp; c!='\r' &amp;&amp; c!='\t' &amp;&amp; c!=' ')&#xD;&#xA;&#x9;&#x9;formated+=t.charAt(i);&#xD;&#xA;&#x9;i++;&#xD;&#xA;}&#xD;&#xA;return formated;"/>
        </eAnnotations>
        <eParameters name="t" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="UI" eType="#//ui/UI"
          transient="true" eOpposite="#//ui/UI/ComponentsContainer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="CharacteristicstContainer">
      <eStructuralFeatures xsi:type="ecore:EReference" name="UI" eType="#//ui/UI"
          transient="true" eOpposite="#//ui/UI/theCharacteristicstContainer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ExpressionContainer">
      <eOperations name="getFormatedString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="&#x9;&#x9;int i =0;&#xD;&#xA;&#x9;&#x9;String formated=&quot;&quot;;&#xD;&#xA;&#x9;&#x9;while(t.charAt(i)!=';'){&#xD;&#xA;&#x9;&#x9;&#x9;char c = t.charAt(i);&#xD;&#xA;&#x9;&#x9;&#x9;if(c!='\n' &amp;&amp; c!='\r' &amp;&amp; c!='\t' &amp;&amp; c!=' ')&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;formated+=t.charAt(i);&#xD;&#xA;&#x9;&#x9;&#x9;i++;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;return formated;"/>
        </eAnnotations>
        <eParameters name="t" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="createExpressionModel" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return getUI().createExpressionModel(getFormatedString(expressionString), tokens,components,elementStyles);"/>
        </eAnnotations>
        <eParameters name="expressionString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="components" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eOperations name="createEModelFromUnpackedExpression" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return getUI().createEModelFromUnpackedExpression(getFormatedString(expressionString), tokens,components,elementStyles);"/>
        </eAnnotations>
        <eParameters name="expressionString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
        <eParameters name="tokens" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="components" eType="#//domain/datatypes/util/TreeMap"/>
        <eParameters name="elementStyles" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EReference" name="UI" eType="#//ui/UI"
          transient="true" eOpposite="#//ui/UI/theExpressionContainer"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="StyleAssigmentContainer">
      <eOperations name="unPackStyles" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="return getUI().unPackStyles();"/>
        </eAnnotations>
      </eOperations>
      <eOperations name="getStyleBody" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="String body =&quot;&quot;;&#xD;&#xA;int i=0;&#xD;&#xA;while(i&lt; styleComponent.length() &amp;&amp; styleComponent.charAt(i)!='{')i++;i++;&#xD;&#xA;while(i&lt; styleComponent.length() &amp;&amp; styleComponent.charAt(i)!='}'){body+=styleComponent.charAt(i);i++;}&#xD;&#xA;return body;"/>
        </eAnnotations>
        <eParameters name="styleComponent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="getStyleName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="String name =&quot;&quot;;&#xD;&#xA;int i=0;&#xD;&#xA;while(i&lt;styleComponent.length() &amp;&amp; styleComponent.charAt(i)!='{' &amp;&amp; i&lt; styleComponent.length()){ &#xD;&#xA;&#x9;name+=styleComponent.charAt(i);i++;&#xD;&#xA;}&#xD;&#xA;return name;"/>
        </eAnnotations>
        <eParameters name="styleComponent" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eOperations name="loadElementsStyles" eType="#//domain/datatypes/util/TreeMap">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="String [] stylesArray  = text.split(&quot;;&quot;);&#xD;&#xA;TreeMap elementsMap =  new TreeMap&lt;String, styles.domain.Style >();&#xD;&#xA;for(int i=0;i&lt;stylesArray.length;i++){&#xD;&#xA;&#x9;String stylesComponent = stylesArray[i];&#xD;&#xA;&#x9;String sytleName = getStyleName(stylesComponent);&#xD;&#xA;&#x9;String styleBody = getStyleBody(stylesComponent);&#xD;&#xA;&#x9;String [] elements = styleBody.split(&quot;,&quot;);&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;for(int j=0;j&lt;elements.length;j++){&#xD;&#xA;&#x9;&#x9;elementsMap.put(elements[j],styles.get(sytleName) );&#xD;&#xA;&#x9;}&#xD;&#xA;}&#xD;&#xA;return elementsMap;"/>
        </eAnnotations>
        <eParameters name="styles" eType="#//domain/datatypes/util/TreeMap"/>
      </eOperations>
      <eOperations name="getFormatedString" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
        <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
          <details key="body" value="int i =0;&#xD;&#xA;String formated=&quot;&quot;;&#xD;&#xA;while(i&lt;t.length()){&#xD;&#xA;&#x9;char c = t.charAt(i);&#xD;&#xA;&#x9;if(c!='\n' &amp;&amp; c!='\r' &amp;&amp; c!='\t' &amp;&amp; c!=' ')&#xD;&#xA;&#x9;&#x9;formated+=t.charAt(i);&#xD;&#xA;&#x9;i++;&#xD;&#xA;}&#xD;&#xA;return formated;"/>
        </eAnnotations>
        <eParameters name="t" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </eOperations>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="text" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="UI" eType="#//ui/UI"
          transient="true" eOpposite="#//ui/UI/theStyleAssigmentContainer"/>
    </eClassifiers>
  </eSubpackages>
</ecore:EPackage>
