<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="OntoUML"
    nsURI="OntoUML" nsPrefix="OntoUML">
  <eClassifiers xsi:type="ecore:EClass" name="AntiRigidMixinClass" eSuperTypes="#//NonRigidMixinClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="AntiRigidSortalClass" eSuperTypes="#//SortalClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="Association" eSuperTypes="#//Relationship #//RelationalClassifier">
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEnd" lowerBound="2"
        upperBound="-1" eType="#//Property" eOpposite="#//Property/associationEnd"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEndAux1" upperBound="-1"
        eType="#//Type"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEndAux2" upperBound="-1"
        eType="#//Type"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEnd3Aux" upperBound="-1"
        eType="#//Property" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="associationEnd1PropertyNameLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="associationEnd2PropertyNameLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="associationEnd1PropertyCardinalitiesLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="associationEnd2PropertyCardinalitiesLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Category" eSuperTypes="#//RigidMixinClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="Characterization" eSuperTypes="#//DependencyRelationship"/>
  <eClassifiers xsi:type="ecore:EClass" name="Class" eSuperTypes="#//Classifier"/>
  <eClassifiers xsi:type="ecore:EClass" name="Classifier" eSuperTypes="#//Type">
    <eStructuralFeatures xsi:type="ecore:EReference" name="attribute" upperBound="-1"
        eType="#//Property" volatile="true" transient="true" derived="true" containment="true">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="DatatypeRelationship.allInstances()->select(x | if x.source->forAll(y | y.oclIsKindOf(Property)) then x.source->exists(y | y.oclAsType(Property).endType = self) else false endif)->collect(x | if x.target->forAll(y | y.oclIsKindOf(Property)) then x.target.oclAsType(Property) else null endif)"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isAbstract" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="general" upperBound="-1"
        eType="#//Classifier" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="self.allSuperTypes()"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generalization" upperBound="-1"
        eType="#//Generalization" volatile="true" transient="true" derived="true"
        containment="true" eOpposite="#//Generalization/specific">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="Generalization.allInstances()->select(x | x.specific = self)"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Collective" eSuperTypes="#//SubstanceSortal">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isExtensional" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="componentOf" eSuperTypes="#//Meronymic"/>
  <eClassifiers xsi:type="ecore:EClass" name="Container">
    <eStructuralFeatures xsi:type="ecore:EReference" name="InstanciarElement" upperBound="-1"
        eType="#//Element" containment="true" eOpposite="#//Element/container"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Datatype" eSuperTypes="#//Classifier"/>
  <eClassifiers xsi:type="ecore:EClass" name="DatatypeRelationship" eSuperTypes="#//DirectedBinaryRelationship"/>
  <eClassifiers xsi:type="ecore:EClass" name="DependencyRelationship" eSuperTypes="#//DirectedBinaryRelationship"/>
  <eClassifiers xsi:type="ecore:EClass" name="Derivation" eSuperTypes="#//DependencyRelationship">
    <eOperations name="deriveLowerDerivation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="let mat:MaterialAssociation = self.source->any(true).oclAsType(Property).endType.oclAsType(MaterialAssociation), rel:Relator = self.target->any(true).oclAsType(Property).endType.oclAsType(Relator) in (let matext1:Type = mat.associationEnd->at(1).oclAsType(Property).endType.oclAsType(Type), matext2:Type = mat.associationEnd->at(2).oclAsType(Property).endType.oclAsType(Type) in (let med1:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext1)), med2:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext2)) in (let med1targetlower: Integer = med1.target->any(true).oclAsType(Property).lower, med2targetlower: Integer = med2.target->any(true).oclAsType(Property).lower in (if ((med1targetlower = -1) or (med2targetlower = -1)) then (-1) else (med1targetlower*med2targetlower) endif))))"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="deriveUpperDerivation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="let mat:MaterialAssociation = self.source->any(true).oclAsType(Property).endType.oclAsType(MaterialAssociation), rel:Relator = self.target->any(true).oclAsType(Property).endType.oclAsType(Relator) in (let matext1:Type = mat.associationEnd->at(1).oclAsType(Property).endType.oclAsType(Type), matext2:Type = mat.associationEnd->at(2).oclAsType(Property).endType.oclAsType(Type) in (let med1:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext1)), med2:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext2)) in (let med1targetupper: Integer = med1.target->any(true).oclAsType(Property).upper, med2targetupper: Integer = med2.target->any(true).oclAsType(Property).upper in (if ((med1targetupper = -1) or (med2targetupper = -1)) then (-1) else (med1targetupper*med2targetupper) endif))))"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="DirectedBinaryRelationship" eSuperTypes="#//DirectedRelationship #//RelationalClassifier"/>
  <eClassifiers xsi:type="ecore:EClass" name="DirectedRelationship" eSuperTypes="#//Relationship">
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" lowerBound="1"
        upperBound="-1" eType="#//Element"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" lowerBound="1"
        upperBound="-1" eType="#//Element"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetAux1" upperBound="-1"
        eType="#//Element"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceAux1" upperBound="-1"
        eType="#//Element"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="targetAux2" upperBound="-1"
        eType="#//Element" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="sourceAux2" upperBound="-1"
        eType="#//Element" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourcePropertyNameLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetPropertyNameLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourcePropertyCardinalitiesLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetPropertyCardinalitiesLabelAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" volatile="true"
        transient="true" defaultValueLiteral="" derived="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Element">
    <eOperations name="allSuperTypes" ordered="false" upperBound="-1" eType="#//Element">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(Classifier) then (if self.oclAsType(Classifier).generalization->forAll(x | x.oclIsUndefined()) then Set{} else Set{self.oclAsType(Classifier).generalization->collect(x | x.general), self.oclAsType(Classifier).generalization->collect(x | if x.general.oclIsKindOf(Classifier) then x.general.allSuperTypes() else Set{} endif)}->flatten() endif) else Set{} endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="allSubTypes" ordered="false" upperBound="-1" eType="#//Element">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="let generalizations : Set(Generalization) = Generalization.allInstances()->select(x | x.general = self) in (if self.oclIsKindOf(Classifier) then (if generalizations->forAll(y | y.oclIsUndefined()) then Set{} else Set{generalizations->collect(y | y.specific), generalizations->collect(y | if y.specific.oclIsKindOf(Classifier) then y.specific.allSubTypes() else Set{} endif)}->flatten() endif) else Set{} endif)"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="isConected" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(Relationship) then if self.oclAsType(Relationship).relatedElement->forAll(y | y.oclIsUndefined()) then false else if self.oclAsType(Relationship).relatedElement->exists(z | if z.oclIsKindOf(Property) then (z.oclAsType(Property).endType = x) else false endif) then true else self.oclAsType(Relationship).relatedElement->exists(w | if w.oclIsKindOf(Property) then w.oclAsType(Property).endType.isConected(x) else false endif) endif endif else false endif"/>
      </eAnnotations>
      <eParameters name="x" eType="#//Element"/>
    </eOperations>
    <eOperations name="subInstanceType" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="self.allSuperTypes()->includes(x)"/>
      </eAnnotations>
      <eParameters name="x" eType="#//Element"/>
    </eOperations>
    <eOperations name="subMetaTypeKind" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(Kind) then true else self.allSuperTypes()->exists(x | x.oclIsKindOf(Kind)) endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="subMetaTypeCollective" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(Collective) then true else self.allSuperTypes()->exists(x | x.oclIsKindOf(Collective)) endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="subMetaTypeQuantity" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(Quantity) then true else self.allSuperTypes()->exists(x | x.oclIsKindOf(Quantity)) endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="hasFunctionalComplexesInstances" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(SortalClass) then self.subMetaTypeKind() else if self.oclIsKindOf(MixinClass) then Element.allInstances()->forAll(x | x.subInstanceType(self) implies not (x.subMetaTypeQuantity() or x.subMetaTypeCollective())) else false endif endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="hasCollectivesInstances" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(SortalClass) then self.subMetaTypeCollective() else if self.oclIsKindOf(MixinClass) then Element.allInstances()->forAll(x | x.subInstanceType(self) implies not (x.subMetaTypeKind() or x.subMetaTypeQuantity())) else false endif endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="hasQuantitiesInstances" ordered="false" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="if self.oclIsKindOf(SortalClass) then self.subMetaTypeQuantity() else if self.oclIsKindOf(MixinClass) then Element.allInstances()->forAll(x | x.subInstanceType(self) implies not (x.subMetaTypeKind() or x.subMetaTypeCollective())) else false endif endif"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="container" eType="#//Container"
        eOpposite="#//Container/InstanciarElement"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Feature" eSuperTypes="#//RedefinableElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isStatic" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FormalAssociation" eSuperTypes="#//Association"/>
  <eClassifiers xsi:type="ecore:EClass" name="Generalization" eSuperTypes="#//DirectedRelationship #//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="specific" lowerBound="1"
        eType="#//Classifier" volatile="true" transient="true" derived="true" eOpposite="#//Classifier/generalization">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="self.target->any(x | x.oclIsKindOf(Classifier))"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="general" lowerBound="1"
        eType="#//Classifier" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="self.source->any(x | x.oclIsKindOf(Classifier))"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generalizationSet" ordered="false"
        upperBound="-1" eType="#//GeneralizationSet" eOpposite="#//GeneralizationSet/generalization"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="GeneralizationSet" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isCovering" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDisjoint" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="generalization" ordered="false"
        upperBound="-1" eType="#//Generalization" eOpposite="#//Generalization/generalizationSet"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Kind" eSuperTypes="#//SubstanceSortal"/>
  <eClassifiers xsi:type="ecore:EClass" name="MaterialAssociation" eSuperTypes="#//Association">
    <eOperations name="deriveUpperMaterialAssociationExt1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="let der:Derivation = Derivation.allInstances()->select(x | x.source->any(true).oclAsType(Property).endType = self)->any(true), matext1:Type = self.associationEnd->at(1).oclAsType(Property).endType.oclAsType(Type), matext2:Type = self.associationEnd->at(2).oclAsType(Property).endType.oclAsType(Type) in (let rel:Relator = der.target->any(true).oclAsType(Property).endType.oclAsType(Relator) in (let med1:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext1)), med2:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext2)) in (let med1targetupper: Integer = med1.target->any(true).oclAsType(Property).upper, med2sourceupper: Integer = med2.source->any(true).oclAsType(Property).upper in (if ((med2sourceupper = -1) or (med1targetupper = -1)) then (-1) else (med2sourceupper*med1targetupper) endif))))"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="deriveUpperMaterialAssociationExt2" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="let der:Derivation = Derivation.allInstances()->select(x | x.source->any(true).oclAsType(Property).endType = self)->any(true), matext1:Type = self.associationEnd->at(1).oclAsType(Property).endType.oclAsType(Type), matext2:Type = self.associationEnd->at(2).oclAsType(Property).endType.oclAsType(Type) in (let rel:Relator = der.target->any(true).oclAsType(Property).endType.oclAsType(Relator) in (let med1:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext1)), med2:Set(Mediation) = Mediation.allInstances()->select(x | x.source->exists(y | y.oclAsType(Property).endType = rel) and x.target->exists(y | y.oclAsType(Property).endType = matext2)) in (let med1sourceupper: Integer = med1.source->any(true).oclAsType(Property).upper, med2targetupper: Integer = med2.target->any(true).oclAsType(Property).upper in (if ((med1sourceupper = -1) or (med2targetupper = -1)) then (-1) else (med1sourceupper*med2targetupper) endif))))&#xA;"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="existsDerivationConnected" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="body" value="not Derivation.allInstances()->select(x | x.source->any(true).oclAsType(Property).endType = self)->isEmpty()"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Mediation" eSuperTypes="#//DependencyRelationship"/>
  <eClassifiers xsi:type="ecore:EClass" name="memberOf" eSuperTypes="#//Meronymic"/>
  <eClassifiers xsi:type="ecore:EClass" name="Meronymic" eSuperTypes="#//DirectedBinaryRelationship">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isShareable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isEssential" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isInseparable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isImmutablePart" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isImmutableWhole" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Mixin" eSuperTypes="#//SemiRigidMixin"/>
  <eClassifiers xsi:type="ecore:EClass" name="MixinClass" eSuperTypes="#//ObjectClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="Mode" eSuperTypes="#//MomentClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="MomentClass" eSuperTypes="#//Class"/>
  <eClassifiers xsi:type="ecore:EClass" name="MultiplicityElement" eSuperTypes="#//Element">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="upper" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="-1"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="lower" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"
        defaultValueLiteral="0"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true" eSuperTypes="#//Element">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NonRigidMixinClass" eSuperTypes="#//MixinClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="ObjectClass" eSuperTypes="#//Class"/>
  <eClassifiers xsi:type="ecore:EClass" name="Phase" eSuperTypes="#//AntiRigidSortalClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="Property" eSuperTypes="#//StructuralFeature">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isDerived" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isNavigable" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="endType" eType="#//Type"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="if self.source->notEmpty() then (if self.source.sourceAux1->forAll(x | x.oclIsKindOf(Type)) then self.source.sourceAux1.oclAsType(Type)->any(true) else null endif) else if self.target->notEmpty() then (if self.target.targetAux1->forAll(x | x.oclIsKindOf(Type)) then self.target.targetAux1.oclAsType(Type)->any(true) else null endif) else if (self.associationEndPositionAux = 1) then self.associationEnd.associationEndAux1->any(true) else if (self.associationEndPositionAux = 2) then self.associationEnd.associationEndAux2->any(true) else null endif endif endif endif"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="associationEnd" eType="#//Association"
        eOpposite="#//Association/associationEnd"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="source" eType="#//DirectedBinaryRelationship"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="DirectedBinaryRelationship.allInstances()->any(x | x.source->includes(self) or x.sourceAux2->includes(self))"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="target" eType="#//DirectedBinaryRelationship"
        volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="DirectedBinaryRelationship.allInstances()->any(x | x.target->includes(self) or x.targetAux2->includes(self))"/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="associationEndPositionAux"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Quantity" eSuperTypes="#//SubstanceSortal"/>
  <eClassifiers xsi:type="ecore:EClass" name="RedefinableElement" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isLeaf" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"
        defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RelationalClassifier" eSuperTypes="#//Classifier"/>
  <eClassifiers xsi:type="ecore:EClass" name="Relationship" eSuperTypes="#//Element">
    <eStructuralFeatures xsi:type="ecore:EReference" name="relatedElement" lowerBound="1"
        upperBound="-1" eType="#//Element" volatile="true" transient="true" derived="true">
      <eAnnotations source="http://www.eclipse.org/ocl/examples/OCL">
        <details key="derive" value="if self.oclIsKindOf(Association) then self.oclAsType(Association).associationEnd else if self.oclIsKindOf(DirectedRelationship) then Set{self.oclAsType(DirectedRelationship).source, self.oclAsType(DirectedRelationship).target}->flatten() else null endif endif"/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Relator" eSuperTypes="#//MomentClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="RigidMixinClass" eSuperTypes="#//MixinClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="RigidSortalClass" eSuperTypes="#//SortalClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="Role" eSuperTypes="#//AntiRigidSortalClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="RoleMixin" eSuperTypes="#//AntiRigidMixinClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="SemiRigidMixin" eSuperTypes="#//NonRigidMixinClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="SimpleDatatype" eSuperTypes="#//Datatype"/>
  <eClassifiers xsi:type="ecore:EClass" name="SortalClass" eSuperTypes="#//ObjectClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="StructuralDatatype" eSuperTypes="#//Datatype"/>
  <eClassifiers xsi:type="ecore:EClass" name="StructuralFeature" eSuperTypes="#//MultiplicityElement #//Feature #//TypedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="isReadOnly" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean" defaultValueLiteral="false"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="subCollectionOf" eSuperTypes="#//Meronymic"/>
  <eClassifiers xsi:type="ecore:EClass" name="SubKind" eSuperTypes="#//RigidSortalClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="subQuantityOf" eSuperTypes="#//Meronymic"/>
  <eClassifiers xsi:type="ecore:EClass" name="SubstanceSortal" eSuperTypes="#//RigidSortalClass"/>
  <eClassifiers xsi:type="ecore:EClass" name="Type" eSuperTypes="#//NamedElement #//Element"/>
  <eClassifiers xsi:type="ecore:EClass" name="TypedElement" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="type" eType="#//Type"/>
  </eClassifiers>
  <eSubpackages name="URML" nsURI="OntoUML.URML" nsPrefix="OntoUML.URML">
    <eClassifiers xsi:type="ecore:EClass" name="Rule" abstract="true" eSuperTypes="#//NamedElement">
      <eStructuralFeatures xsi:type="ecore:EReference" name="condition" upperBound="-1"
          eType="#//URML/Condition" eOpposite="#//URML/Condition/conditionRule"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="DerivationRule" eSuperTypes="#//URML/Rule">
      <eStructuralFeatures xsi:type="ecore:EReference" name="conclusion" upperBound="-1"
          eType="#//URML/Conclusion" eOpposite="#//URML/Conclusion/conclusionRule"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Conclusion" abstract="true" eSuperTypes="#//RelationalClassifier">
      <eStructuralFeatures xsi:type="ecore:EReference" name="conclusionRule" eType="#//URML/DerivationRule"
          eOpposite="#//URML/DerivationRule/conclusion"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="Condition" abstract="true" eSuperTypes="#//RelationalClassifier">
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="negative" ordered="false"
          lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
      <eStructuralFeatures xsi:type="ecore:EReference" name="conditionRule" ordered="false"
          eType="#//URML/Rule" eOpposite="#//URML/Rule/condition"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ClassifierAtom" eSuperTypes="#//URML/Condition #//URML/Conclusion">
      <eStructuralFeatures xsi:type="ecore:EReference" name="class" lowerBound="1"
          eType="#//Class"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="classVariable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="RoleTypeAtom" eSuperTypes="#//URML/Conclusion #//URML/Condition"/>
    <eClassifiers xsi:type="ecore:EClass" name="BinaryAssociationAtom" eSuperTypes="#//URML/Condition #//URML/Conclusion">
      <eStructuralFeatures xsi:type="ecore:EReference" name="association" lowerBound="1"
          eType="#//Relationship"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourceVariable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      <eStructuralFeatures xsi:type="ecore:EAttribute" name="targetVariable" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eClassifiers>
    <eClassifiers xsi:type="ecore:EClass" name="ObjectVariable"/>
    <eClassifiers xsi:type="ecore:EClass" name="AttributionAtom" eSuperTypes="#//URML/Conclusion"/>
  </eSubpackages>
</ecore:EPackage>
