<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="common"
    nsURI="http://www.kerblue.org/common/1.0/" nsPrefix="common">
  <eClassifiers xsi:type="ecore:EClass" name="ModelElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Definition: main elements of model inherits of ModelElement which allows to declare the description and the documentation attributes."/>
    </eAnnotations>
    <eOperations name="getLogicalNameSpace" eType="#//NameSpace">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if not(self.namespace.oclIsUndefined()) then&#xD;&#x9;self.namespace&#xD;else&#xD;&#x9;if not(self.getContainer().oclIsUndefined()) and self.getContainer().oclIsKindOf(common::ModelElement) then&#xD;&#x9;&#x9;self.getContainer().oclAsType(common::ModelElement).getLogicalNameSpace()&#xD;&#x9;else&#xD;&#x9;&#x9;null&#xD;&#x9;endif&#xD;endif"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="stereotypes" upperBound="-1"
        eType="#//Stereotype"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="tags" upperBound="-1" eType="#//Tag"
        containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="comments" upperBound="-1"
        eType="#//Comment" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="documentation" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Definition: the attribute documentation is associated to all the elements of a model to allow associating an explanation of the element; this explanation is used in the generation of the model documentation. &#xD;&#xA;It is highly recommended to fill up this attribute at each creation of an element to provide a good documentation and to avoid having to spend huge time lately. "/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="description" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Definition: the attribute description is associated to many elements of a model to allow a description of the element; this description is used in the generation of the model documentation. &#xD;&#xA;It is highly recommended to fill up this attribute at each creation of an element to provide a good documentation and to avoid having to spend huge time lately. "/>
      </eAnnotations>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="metainfo" upperBound="-1"
        eType="#//MetaInfo" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraints" upperBound="-1"
        eType="#//Constraint"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="namespace" eType="#//NameSpace"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NamedModelElement" eSuperTypes="#//ModelElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Definition: main elements of model inherits of NameModelElement which allows to declare the name and which provides multiple OCL operations used by the modelers and the generators."/>
    </eAnnotations>
    <eOperations name="getFullName" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if self.getContainer().oclIsUndefined() then&#xD;&#x9;''&#xD;else&#xD;&#x9;if self.getContainer().oclIsKindOf(NamedModelElement) then&#xA;&#x9;&#x9;let parent : String = self.getContainer().oclAsType(NamedModelElement).getFullName()&#xA;&#x9;&#x9;in&#xA;&#x9;&#x9;&#x9;if ((not(parent.oclIsUndefined())) and (parent.size() > 0)) then&#xA;&#x9;&#x9;&#x9;&#x9;parent.concat('.').concat(if self.name.oclIsUndefined() then '' else self.name endif)&#xA;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;if self.name.oclIsUndefined() then '' else self.name endif&#xA;&#x9;&#x9;&#x9;endif&#xD;&#x9;else&#xD;&#x9;&#x9;''&#xD;&#x9;endif&#x9;&#xD;endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getDocumentationOrName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if self.documentation.oclIsUndefined() or self.documentation.size() &lt;0 then&#xD;&#x9;self.name&#xD;else&#xD;&#x9;self.documentation&#xD;endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getDescriptionOrName" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if self.description.oclIsUndefined() or self.description.size() &lt;0 then&#xD;&#x9;self.name&#xD;else&#xD;&#x9;self.description&#xD;endif"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString">
      <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
        <details key="documentation" value="Definition: the name of the concerned element; this name is used as leaf of the fully qualified name of an element: the other part of the fully qualified name are composed by the tree package names."/>
      </eAnnotations>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Comment" eSuperTypes="#//ModelElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Tag">
    <eOperations name="equalsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.key = other.key"/>
      </eAnnotations>
      <eParameters name="other" eType="#//Tag"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Stereotype" eSuperTypes="#//NamedModelElement">
    <eOperations name="EqualsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.name = other.name"/>
      </eAnnotations>
      <eParameters name="other" eType="#//Stereotype"/>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Package" eSuperTypes="#//NamedModelElement">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Definition: used to organize the objects inside a model under a tree similar to Java package organization. It is highly recommended to use the packages to organize the elements and to ensure that they have understandable fully qualified name."/>
    </eAnnotations>
    <eOperations name="equalsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.name = other.name"/>
      </eAnnotations>
      <eParameters name="other" eType="#//Package"/>
    </eOperations>
    <eOperations name="getRootPackage" eType="#//Package">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if self.getContainer().oclIsUndefined() then&#xD;&#x9;self&#xD;else&#xD;&#x9;self.getContainer().oclAsType(Package).getRootPackage()&#xD;endif"/>
      </eAnnotations>
    </eOperations>
    <eOperations name="getAllNamespaces" upperBound="-1" eType="#//NameSpace">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="common::NameSpace.allInstances()"/>
      </eAnnotations>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EReference" name="stereotypeSet" upperBound="-1"
        eType="#//Stereotype" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="packageSet" upperBound="-1"
        eType="#//Package" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="namespaceSet" upperBound="-1"
        eType="#//NameSpace" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Operation" eSuperTypes="#//OperationComponent">
    <eOperations name="equalsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.name = other.name and &#xD;&#xA;&#xD;&#xA;self.parameters->forAll(p:Parameter |   &#xD;&#xA;   other.parameters->exists(z : Parameter | z.name = p.name and z.valueType = p.valueType ))"/>
      </eAnnotations>
      <eParameters name="other" eType="#//Operation"/>
    </eOperations>
    <eOperations name="getParameter" eType="#//Parameter">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.getParameters()->select(e:Parameter|e.name =pname)->first()"/>
      </eAnnotations>
      <eParameters name="pname" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="returnType" eType="#//DataType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="visibility" eType="#//Visibility"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="static" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="body" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter" eSuperTypes="#//NamedModelElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueType" eType="#//DataType"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="DataType">
    <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
      <details key="documentation" value="Definition: this enumeration allows to set up a format to a data. The supported data types are:&#xD;&#xA;- boolean: true or false,&#xD;&#xA;- byte: 8-bits integer&#xD;&#xA;- char: Single two-byte Unicode character&#xD;&#xA;- Date: a calendar date &#xD;&#xA;- DateTime: calendar date and day time&#xD;&#xA;- double: 8-bytes floating point number&#xD;&#xA;- float: 4-bytes floating point number&#xD;&#xA;- int: 4-bytes signed integer&#xD;&#xA;- long: 8-bytes signed integer&#xD;&#xA;- Object: other data types; for Alfresco, associated to the 'Any' data type.&#xD;&#xA;- short: 2-bytes signed integer&#xD;&#xA;- String: a sequence of plain-text characters&#xD;&#xA;- Time : an instant of time that recurs every day&#xD;&#xA;- void: pas de generation de l'attribut"/>
    </eAnnotations>
    <eLiterals name="Custom" value="-1" literal="Custom"/>
    <eLiterals name="boolean"/>
    <eLiterals name="byte" value="1"/>
    <eLiterals name="char" value="2"/>
    <eLiterals name="double" value="3"/>
    <eLiterals name="float" value="4"/>
    <eLiterals name="int" value="5"/>
    <eLiterals name="long" value="6" literal="long"/>
    <eLiterals name="short" value="7"/>
    <eLiterals name="String" value="8"/>
    <eLiterals name="Date" value="10"/>
    <eLiterals name="Object" value="11" literal="Object"/>
    <eLiterals name="DateTime" value="12" literal="DateTime"/>
    <eLiterals name="Time" value="13"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="Visibility">
    <eLiterals name="Public"/>
    <eLiterals name="Private" value="1"/>
    <eLiterals name="Protected" value="2"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OperationGroup" eSuperTypes="#//OperationComponent">
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//OperationComponent" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OperationComponent" abstract="true"
      eSuperTypes="#//NamedModelElement">
    <eOperations name="getOperations" upperBound="-1" eType="#//OperationComponent">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="if (self.oclIsKindOf(OperationGroup)) then&#xA;&#x9;self.oclAsType(OperationGroup).children->iterate(e:OperationComponent; result :Set(OperationComponent)=Set{}|result->union(e.getOperations()))->flatten()->asOrderedSet()&#xA;else&#xA;&#x9;self.oclAsType(OperationComponent)->asOrderedSet()&#xA;endif"/>
      </eAnnotations>
    </eOperations>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetaInfo" eSuperTypes="#//MetaData">
    <eOperations name="equalsForMerge" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBoolean">
      <eAnnotations source="http://www.bluexml.com/OCL">
        <details key="body" value="self.key = other.key"/>
      </eAnnotations>
      <eParameters name="other" eType="#//MetaInfo"/>
    </eOperations>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="key" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="value" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueType">
      <eGenericType eClassifier="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaClass">
        <eTypeArguments/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="constraintType" eType="#//DataType"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="valueSet" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="multilineValue" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="EObjectValue" upperBound="-1"
        eType="ecore:EClass http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetaInfoGroup" eSuperTypes="#//MetaData #//NamedModelElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="children" upperBound="-1"
        eType="#//MetaData" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MetaData" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="Container" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="Constraint" eSuperTypes="#//NamedModelElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="constraintType" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="params" upperBound="-1"
        eType="#//ConstraintParam" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintParam" eSuperTypes="#//NamedModelElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="values" upperBound="-1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NameSpace">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="prefix" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="URI" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="CustomDataType" eSuperTypes="#//NamedModelElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="dataTypeImp" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString" defaultValueLiteral="java.lang.String"/>
  </eClassifiers>
</ecore:EPackage>
